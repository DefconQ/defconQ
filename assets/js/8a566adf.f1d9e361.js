"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5846],{63333:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>h});var n=r(74848),t=r(28453);const i={slug:"The Array Cast - Where Code Meets Curiosity",title:"The Array Cast - Where Code Meets Curiosity",authors:["alexander"],hide_table_of_contents:!0,tags:["kdb/q","DefconQ","The ArrayCast","APL","K","Q","Array Programming"]},s=void 0,o={permalink:"/blog/The Array Cast - Where Code Meets Curiosity",source:"@site/blog/2025-06-20-arraycast/index.md",title:"The Array Cast - Where Code Meets Curiosity",description:"Last week, I had the honour of making my first solo appearance on the ArrayCast podcast, a show dedicated to everything array programming, and a tribute to the legacy of Kenneth E. Iverson, the legendary creator of APL. While I\u2019ve previously been part of a group discussion during last year\u2019s Iverson College event, this was my first time flying solo.",date:"2025-06-20T00:00:00.000Z",tags:[{label:"kdb/q",permalink:"/blog/tags/kdb-q"},{label:"DefconQ",permalink:"/blog/tags/defcon-q"},{label:"The ArrayCast",permalink:"/blog/tags/the-array-cast"},{label:"APL",permalink:"/blog/tags/apl"},{label:"K",permalink:"/blog/tags/k"},{label:"Q",permalink:"/blog/tags/q"},{label:"Array Programming",permalink:"/blog/tags/array-programming"}],readingTime:3.065,hasTruncateMarker:!0,authors:[{name:"Alexander Unterrainer",title:"DefconQ, KDB/Q Developer, Consultant",url:"https://github.com/AUnterrainer",imageURL:"/img/alex.jpeg",key:"alexander"}],frontMatter:{slug:"The Array Cast - Where Code Meets Curiosity",title:"The Array Cast - Where Code Meets Curiosity",authors:["alexander"],hide_table_of_contents:!0,tags:["kdb/q","DefconQ","The ArrayCast","APL","K","Q","Array Programming"]},unlisted:!1,nextItem:{title:"DefconQ Giveaway",permalink:"/blog/DefconQ Giveaway"}},l={authorsImageUrls:[void 0]},h=[{value:"What Are Array Programming Languages?",id:"what-are-array-programming-languages",level:2},{value:"The Array Cast",id:"the-array-cast",level:2},{value:"\ud83c\udf99\ufe0f Conor Hoekstra",id:"\ufe0f-conor-hoekstra",level:3},{value:"\ud83d\udca1 Ad\xe1m Brudzewsky",id:"-ad\xe1m-brudzewsky",level:3},{value:"\ud83d\udcda Stephen Taylor",id:"-stephen-taylor",level:3},{value:"\ud83d\udee0\ufe0f Marshall Lochbaum",id:"\ufe0f-marshall-lochbaum",level:3},{value:"\ud83c\udfa7 Bob Therriault",id:"-bob-therriault",level:3},{value:"Episode 108 of ArrayCast",id:"episode-108-of-arraycast",level:2},{value:"Resources",id:"resources",level:3}];function d(e){const a={a:"a",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.p,{children:["Last week, I had the honour of making my first solo appearance on the ArrayCast podcast, a show dedicated to everything array programming, and a tribute to the legacy of ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Kenneth_E._Iverson",children:"Kenneth E. Iverson"}),", the legendary creator of APL. While I\u2019ve previously been part of a group discussion during last year\u2019s ",(0,n.jsx)(a.a,{href:"https://iversoncollege.com",children:"Iverson College"})," event, this was my first time flying solo."]}),"\n",(0,n.jsxs)(a.p,{children:["As many of you know, KDB/Q is a direct descendant of ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/APL_(programming_language)",children:"APL"}),", so it naturally finds a regular place in ArrayCast conversations. Over the years, the podcast has featured some of the most respected names in the KDB/Q community, including ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/nickpsaris/",children:"Nick Psaris"}),", ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/attila-v-b948a52/",children:"Attila Vrabecz"}),", ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/jonny-press-7005602/",children:"Jonny Press"})," and ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/stevan-apter-1ba50488/",children:"Stevan Apter"}),", which makes it an even greater privilege to join this esteemed list of guests and contribute to such a meaningful initiative."]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.img,{alt:"The ArrayCast - Alexander Unterrainer about Learning Q",src:r(63852).A+"",width:"571",height:"637"})}),"\n",(0,n.jsx)(a.h2,{id:"what-are-array-programming-languages",children:"What Are Array Programming Languages?"}),"\n",(0,n.jsxs)(a.p,{children:["Array programming languages, like APL, J, and K (the foundation of KDB/Q), are designed to operate on entire sets of data, ",(0,n.jsx)(a.strong,{children:"arrays"}),", with a single, concise expression. Unlike traditional languages that loop through elements one by one, array languages apply operations across whole vectors, matrices, or tables at once. This leads to ",(0,n.jsx)(a.strong,{children:"massive gains in performance, readability, and expressiveness."}),"  Their power lies in ",(0,n.jsx)(a.strong,{children:"thinking and coding at a higher level of abstraction"}),", closer to how data is naturally structured, making them a perfect choice in fields like quantitative finance, analytics, and high-performance computing. ",(0,n.jsx)(a.strong,{children:"Fewer lines, faster code, smarter execution."})]}),"\n",(0,n.jsx)(a.h2,{id:"the-array-cast",children:(0,n.jsx)(a.a,{href:"https://www.arraycast.com",children:"The Array Cast"})}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.strong,{children:"Array Cast"})," is a podcast dedicated to the fascinating world of ",(0,n.jsx)(a.strong,{children:"array programming languages"}),", from ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/APL_(programming_language)",children:(0,n.jsx)(a.strong,{children:"APL"})})," and ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/J_(programming_language)",children:(0,n.jsx)(a.strong,{children:"J"})})," to ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/K_(programming_language)",children:(0,n.jsx)(a.strong,{children:"K"})}),", ",(0,n.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)",children:(0,n.jsx)(a.strong,{children:"Q"})}),", and beyond. Hosted by ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/conorhoekstra/",children:"Conor Hoekstra"}),", a well-known voice in the programming language community, the show features an expert panel including ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/abrudz/",children:"Ad\xe1m Brudzewsky"})," (APL), ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/stephen-taylor-b5ba78/",children:"Stephen Taylor"})," (APL, Q), ",(0,n.jsx)(a.a,{href:"https://www.dyalog.com/dyalogue-newsletters.htm?nl=27&a=162",children:"Marshall Lochbaum"})," (J, APL, BQN), and ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/in/bob-therriault-a096602b7/",children:"Bob Therriault"})," (J). Together, they dive deep into the design, philosophy, and power of array-oriented programming, but always in a way that's engaging, insightful, and often entertaining. Even if you\u2019ve never written a line of APL or Q, the Array Cast is worth your time: it offers a fresh perspective on problem solving, language design, and computational thinking that anyone in tech can appreciate."]}),"\n",(0,n.jsx)(a.h3,{id:"\ufe0f-conor-hoekstra",children:"\ud83c\udf99\ufe0f Conor Hoekstra"}),"\n",(0,n.jsxs)(a.p,{children:["Research Scientist at NVIDIA, Conor works on array programming models and languages. He's the visionary host of Array Cast, co-creator of the ",(0,n.jsx)(a.a,{href:"https://www.linkedin.com/company/algorithms-data-structures-programs-podcast/posts/?feedView=all",children:"\u201cAlgorithms + Data Structures = Programs\u201d"})," podcast, and organizer of the Programming Languages Virtual Meetup series"]}),"\n",(0,n.jsx)(a.h3,{id:"-ad\xe1m-brudzewsky",children:"\ud83d\udca1 Ad\xe1m Brudzewsky"}),"\n",(0,n.jsx)(a.p,{children:"Ad\xe1m is a seasoned APL programmer and teacher, leading language design at Dyalog Ltd. He\u2019s deeply involved in the APL community and continually advances the language and its ecosystem"}),"\n",(0,n.jsx)(a.h3,{id:"-stephen-taylor",children:"\ud83d\udcda Stephen Taylor"}),"\n",(0,n.jsx)(a.p,{children:"A developer, technical writer, and educator, Stephen is an advocate for array languages, particularly APL and Q. He\u2019s actively involved in community outreach and array-language education."}),"\n",(0,n.jsx)(a.h3,{id:"\ufe0f-marshall-lochbaum",children:"\ud83d\udee0\ufe0f Marshall Lochbaum"}),"\n",(0,n.jsxs)(a.p,{children:["An array-programming language implementer at ",(0,n.jsx)(a.a,{href:"https://www.dyalog.com",children:"Dyalog Ltd"}),", Marshall brings deep expertise in J, APL, BQN, and language implementation. With strong academic training (MSc in CS), he focuses on performance tuning and multi-threaded algorithm optimizations"]}),"\n",(0,n.jsx)(a.h3,{id:"-bob-therriault",children:"\ud83c\udfa7 Bob Therriault"}),"\n",(0,n.jsx)(a.p,{children:"Bob is the driving force behind Array Cast, a veteran TV producer turned podcast entrepreneur based in British Columbia, he brings decades of media production experience to the show."}),"\n",(0,n.jsx)(a.p,{children:"Together, this group delivers a compelling mix of high-level expertise, language design know-how, and thoughtful programming-podcast production, and they make Array Cast a must-listen for anyone interested in computational thinking, language design, and modern array paradigms."}),"\n",(0,n.jsx)(a.h2,{id:"episode-108-of-arraycast",children:"Episode 108 of ArrayCast"}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.a,{href:"https://www.arraycast.com/episodes/episode108-alex-unterrainer",children:"Learning q with Alex Unterrainer"})}),"\n",(0,n.jsx)(a.h3,{id:"resources",children:"Resources"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://www.arraycast.com/episode108-show-notes",children:"Podcast Notes and Resources"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://www.arraycast.com/episode108-transcript",children:"Learning q with Alex Unterrainer - Transcript"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://www.linkedin.com/company/algorithms-data-structures-programs-podcast/posts/?feedView=all",children:"Algorithms + Data Structures = Programs Podcast"})}),"\n"]})]})}function c(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},63852:(e,a,r)=>{r.d(a,{A:()=>n});const n=r.p+"assets/images/arrayCast-883800307e0bb6c964c71624d298ad32.png"},28453:(e,a,r)=>{r.d(a,{R:()=>s,x:()=>o});var n=r(96540);const t={},i=n.createContext(t);function s(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);