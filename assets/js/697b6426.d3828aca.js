"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8705],{57324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(74848),i=n(28453);const o={sidebar_position:5},r="Streaming Smarter: Real-Time Market Data with Kola, Python, and Databento",s={id:"tutorials/realTimeStocksUpdate",title:"Streaming Smarter: Real-Time Market Data with Kola, Python, and Databento",description:"A few weeks back, I shared a blog post on how to stream real-time data from Yahoo Finance into KDB using Python and the yfinance API. Following that, my former colleague Nathan Swann, instead of using qpython, why not try the kola API?",source:"@site/docs/tutorials/realTimeStocksUpdate.mdx",sourceDirName:"tutorials",slug:"/tutorials/realTimeStocksUpdate",permalink:"/docs/tutorials/realTimeStocksUpdate",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Back to the Future: Building Your Research HDB for Stock Market Insights",permalink:"/docs/tutorials/researchHDB"},next:{title:"Productivity Tools",permalink:"/docs/category/productivity-tools"}},d={},l=[{value:"Meet Kola: The Blazing-Fast Python Interface for KDB/Q You Didn\u2019t Know You Needed",id:"meet-kola-the-blazing-fast-python-interface-for-kdbq-you-didnt-know-you-needed",level:2},{value:"How do you install Kola?",id:"how-do-you-install-kola",level:3},{value:"Lean, Mean, and Lightning Fast: Upgrading Your KDB/Q Pipeline with Kola and Polars",id:"lean-mean-and-lightning-fast-upgrading-your-kdbq-pipeline-with-kola-and-polars",level:2},{value:"\ud83d\udd04  Key Changes",id:"--key-changes",level:3},{value:"\u26a1 Benefits of the Upgrade",id:"-benefits-of-the-upgrade",level:3},{value:"Plug &amp; Play: Launching Your Upgraded Market Data Stack",id:"plug--play-launching-your-upgraded-market-data-stack",level:2},{value:"Databento: Unlock Market Data Without Limits",id:"databento-unlock-market-data-without-limits",level:2},{value:"From Wall Street to Market Data Revolution: Meet Christina Qi, Hedge Fund Prodigy Turned Founder",id:"from-wall-street-to-market-data-revolution-meet-christina-qi-hedge-fund-prodigy-turned-founder",level:3},{value:"Kickstart Your Market Data Journey with Databento in Minutes",id:"kickstart-your-market-data-journey-with-databento-in-minutes",level:3},{value:"Integrating Databento into Your Real-Time KDB/Q Stack",id:"integrating-databento-into-your-real-time-kdbq-stack",level:2},{value:"Kola Meets Databento: Powering Your Real-Time KDB/Q Stack",id:"kola-meets-databento-powering-your-real-time-kdbq-stack",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"streaming-smarter-real-time-market-data-with-kola-python-and-databento",children:"Streaming Smarter: Real-Time Market Data with Kola, Python, and Databento"}),"\n",(0,a.jsxs)(t.p,{children:["A few weeks back, I shared a blog post on how to stream ",(0,a.jsx)(t.a,{href:"https://www.defconq.tech/docs/tutorials/realTimeStocks",children:"real-time data from Yahoo Finance"})," into KDB using Python and the yfinance API. Following that, my former colleague ",(0,a.jsx)(t.a,{href:"https://www.linkedin.com/in/nathan-swann-568765257/",children:"Nathan Swann"}),", instead of using ",(0,a.jsx)(t.code,{children:"qpython"}),", why not try the ",(0,a.jsx)(t.code,{children:"kola"})," API?"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Nathan Swann suggestion",src:n(84888).A+"",width:"508",height:"161"})}),"\n",(0,a.jsxs)(t.p,{children:["This is a perfect example of the power of the KDB/Q community, sharing knowledge, tools, and better ways to do things. So, you asked, and we delivered. I gave ",(0,a.jsx)(t.code,{children:"kola"})," a try, refactored the code to use it instead of ",(0,a.jsx)(t.code,{children:"qpython"}),", and was impressed with the results."]}),"\n",(0,a.jsxs)(t.p,{children:["But I didn\u2019t stop there. One of the limitations of using Yahoo Finance is the restriction on request volume, a real challenge for real-time data feeds. So I explored other options and found a great alternative: ",(0,a.jsx)(t.a,{href:"https://databento.com",children:"Databento"}),", a modern market data provider offering ",(0,a.jsx)(t.strong,{children:"$125 in free credits"})," for new users."]}),"\n",(0,a.jsx)(t.p,{children:"In this updated blog post, I walk through how to:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Replace ",(0,a.jsx)(t.code,{children:"qpython"})," with ",(0,a.jsx)(t.code,{children:"kola"})]}),"\n",(0,a.jsxs)(t.li,{children:["Swap out ",(0,a.jsx)(t.strong,{children:"Yahoo Finance"})," for ",(0,a.jsx)(t.strong,{children:"Databento"})]}),"\n",(0,a.jsx)(t.li,{children:"Build a flexible, scalable pipeline from real-time data sources into KDB"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"It\u2019s a great demonstration of just how powerful and adaptable KDB/Q is, easily integrating with other programming languages and data providers."}),"\n",(0,a.jsx)(t.h2,{id:"meet-kola-the-blazing-fast-python-interface-for-kdbq-you-didnt-know-you-needed",children:"Meet Kola: The Blazing-Fast Python Interface for KDB/Q You Didn\u2019t Know You Needed"}),"\n",(0,a.jsxs)(t.p,{children:["Kola is a free and open-source Python interface for KDB/Q designed with performance and modern development in mind. Built on top of ",(0,a.jsx)(t.a,{href:"https://www.rust-lang.org",children:(0,a.jsx)(t.strong,{children:"Rust"})})," or speed and using ",(0,a.jsx)(t.a,{href:"https://pola.rs",children:(0,a.jsx)(t.strong,{children:"Polars"})})," for ultra-fast DataFrame operations, Kola delivers a powerful and efficient toolkit for working with KDB data in Python."]}),"\n",(0,a.jsxs)(t.p,{children:["The project is the brainchild of ",(0,a.jsx)(t.a,{href:"https://www.linkedin.com/in/jshinonome/",children:"Jo Shinonome"}),", a well-known contributor to the KDB/Q ecosystem and the developer behind the popular ",(0,a.jsx)(t.a,{href:"https://github.com/jshinonome/vscode-q",children:"KDB/Q plugin for Visual Studio Code"}),". Kola combines his deep understanding of both KDB/Q and modern Python tooling."]}),"\n",(0,a.jsxs)(t.p,{children:["If you\u2019re looking for a high-performance alternative to ",(0,a.jsx)(t.code,{children:"qpython"})," or simply want a more efficient and modern way to work with KDB/Q in Python, Kola is worth checking out. You can explore the source code on ",(0,a.jsx)(t.a,{href:"https://github.com/jshinonome",children:"Jo\u2019s GitHub"})," and read more about Kola\u2019s performance and internals in this excellent ",(0,a.jsx)(t.a,{href:"https://www.timestored.com/kdb-guides/kola-python-api",children:"Timestored blog post"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"Whether you\u2019re building research tools, ingesting real-time data, or just tinkering with KDB from Python, Kola is a fantastic addition to your toolbox."}),"\n",(0,a.jsx)(t.h3,{id:"how-do-you-install-kola",children:"How do you install Kola?"}),"\n",(0,a.jsxs)(t.p,{children:["Just like any standard Python library, getting started with Kola is incredibly simple. All it takes is a quick ",(0,a.jsx)(t.code,{children:"pip install"})," and you're ready to roll. Since Kola is built on top of Polars, the Polars library will be automatically installed alongside it, no extra steps needed."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"pip install kola\n"})}),"\n",(0,a.jsx)(t.h2,{id:"lean-mean-and-lightning-fast-upgrading-your-kdbq-pipeline-with-kola-and-polars",children:"Lean, Mean, and Lightning Fast: Upgrading Your KDB/Q Pipeline with Kola and Polars"}),"\n",(0,a.jsxs)(t.p,{children:["We\u2019ve built on the foundation laid in the previous tutorial, this time, with some powerful upgrades. With just a few strategic changes, we replaced legacy components and supercharged our pipeline using modern tools. Specifically, we phased out ",(0,a.jsx)(t.code,{children:"qpython"})," in favour of ",(0,a.jsx)(t.code,{children:"kola"}),", and swapped out ",(0,a.jsx)(t.code,{children:"pandas"})," for ",(0,a.jsx)(t.code,{children:"polars"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"These updates require minimal code changes but deliver significant improvements in performance and memory efficiency. If you've been following my blog, you\u2019ll find the transition straightforward. Here's a breakdown of the core modifications:"}),"\n",(0,a.jsx)(t.h3,{id:"--key-changes",children:"\ud83d\udd04  Key Changes"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Switched from ",(0,a.jsx)(t.code,{children:"pandas"})," to ",(0,a.jsx)(t.code,{children:"polars"})]}),"\n",(0,a.jsxs)(t.li,{children:["Replaced ",(0,a.jsx)(t.code,{children:"qpython"})," with ",(0,a.jsx)(t.code,{children:"kola"})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"-benefits-of-the-upgrade",children:"\u26a1 Benefits of the Upgrade"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"\ud83d\ude80 Performance"}),": Polars is optimized for speed and easily outperforms pandas in most scenarios"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"\ud83e\udde0 Memory Efficiency"}),": Handles large datasets with significantly lower memory overhead"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"\ud83d\udd17 Simpler Integration"}),": Kola provides a more elegant and modern interface to interact with KDB/Q"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["You can find the complete, updated source code on my ",(0,a.jsx)(t.a,{href:"https://github.com/DefconQ/defconQ/tree/master/projects/realTimeStock",children:"GitHub repo here"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"plug--play-launching-your-upgraded-market-data-stack",children:"Plug & Play: Launching Your Upgraded Market Data Stack"}),"\n",(0,a.jsx)(t.p,{children:"Getting your upgraded stack up and running is just as simple as before. The beauty of this new setup is that you don\u2019t need to modify anything on the KDB/Q side. All the improvements happen in the Python layer, just swap in the new kola-based feed handler in place of the old one, and you're good to go."}),"\n",(0,a.jsx)(t.p,{children:"Here\u2019s how to get started:"}),"\n",(0,a.jsx)(t.p,{children:"We first start our Tickerplant, which loads the table schema we are already familiar with."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"alexanderunterrainer@Mac:~/repos/defconQ/projects/realTimeStock|master\u26a1 \u21d2  qq tick_kola.q sym -p 5010\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"KDB+ 4.1 2025.02.18 Copyright (C) 1993-2025 Kx Systems\nm64/ 8(24)core 24576MB alexanderunterrainer mac 192.168.1.177 EXPIRE 2026.03.11 KDB PLUS PERSONAL #5024911\n\nq)stocks\ntime sym feedHandlerTime open high low close volume bid ask bidSize askSize\n---------------------------------------------------------------------------\nq)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once the Tickerplant is running, we confirm the schema has loaded correctly. Next, we spin up the Real-Time Database (RDB)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"alexanderunterrainer@Mac:~/repos/defconQ/projects/realTimeStock|master\u26a1 \u21d2  qq tick/r.q :5010 -p 5011\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"KDB+ 4.1 2025.02.18 Copyright (C) 1993-2025 Kx Systems\nm64/ 8(24)core 24576MB alexanderunterrainer mac 192.168.1.133 EXPIRE 2026.03.11 KDB PLUS PERSONAL #5024911\n\nq)stocks\ntime sym feedHandlerTime open high low close volume bid ask bidSize askSize\n---------------------------------------------------------------------------\nq)count stocks\n0\n"})}),"\n",(0,a.jsx)(t.p,{children:"Last but not least, we launch our Python data feed."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"alexanderunterrainer@Mac:~/repos/defconQ/projects/realTimeStock|master\u26a1 \u21d2  python3 yahoo_finance_streamer_kola.py --tickers tickers.csv\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"2025-06-17 00:00:10,418 - WARNING - Failed to read CSV with Polars: 'ExprStringNameSpace' object has no attribute 'strip'. Trying alternate methods...\n2025-06-17 00:00:10,418 - INFO - Successfully parsed CSV using delimiter: ','\n2025-06-17 00:00:10,423 - INFO - Loaded 15 ticker symbols from tickers.csv\n2025-06-17 00:00:10,424 - INFO - Connecting to KDB+ at localhost:5010 (attempt 1/3)\n2025-06-17 00:00:10,424 - INFO - Successfully connected to KDB+ using kola\n2025-06-17 00:00:10,424 - INFO - Starting data streaming for 15 symbols at 30s intervals\n2025-06-17 00:00:10,424 - INFO - Fetching data for batch 1: 15 symbols\n2025-06-17 00:00:14,802 - INFO - Streamed 15 records to KDB+ table 'stocks'\n2025-06-17 00:00:14,802 - INFO - Completed iteration 1. Next run at 00:00:40\n2025-06-17 00:00:40,443 - INFO - Fetching data for batch 1: 15 symbols\n"})}),"\n",(0,a.jsx)(t.p,{children:"We can now see real-time data flowing into our RDB."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"q)count stocks\n15\nq)stocks\ntime                          sym   feedHandlerTime               open    high     low      close  volume    bid    ask    bidSize askSize\n------------------------------------------------------------------------------------------------------------------------------------------\n2025.06.17D00:00:10.424303000 AAPL  2025.06.17D00:00:10.424303000 197.29  198.685  196.5636 198.42 42837838  197.99 198.46 4       4\n2025.06.17D00:00:10.424303000 AMZN  2025.06.17D00:00:10.424303000 212.37  217.06   211.61   216.1  32973402  214.88 216.34 1       4\n2025.06.17D00:00:10.424303000 GOOGL 2025.06.17D00:00:10.424303000 174.73  176.93   174.65   176.77 27277235  165.91 183.53 1       1\n2025.06.17D00:00:10.424303000 HD    2025.06.17D00:00:10.424303000 355.88  357.105  351.9134 353.56 3675623   353.31 354    2       2\n2025.06.17D00:00:10.424303000 JNJ   2025.06.17D00:00:10.424303000 156.42  156.495  154.45   155.22 5575009   155.17 155.35 1       22\n2025.06.17D00:00:10.424303000 JPM   2025.06.17D00:00:10.424303000 267     271.7016 267      270.36 5549182   269.51 270.85 5       3\n2025.06.17D00:00:10.424303000 MA    2025.06.17D00:00:10.424303000 563.9   575      562.64   568.67 2532015   564    575.41 4       1\n2025.06.17D00:00:10.424303000 META  2025.06.17D00:00:10.424303000 698.99  707.15   693.5103 702.12 13648904  664.05 702.48 1       1\n2025.06.17D00:00:10.424303000 MSFT  2025.06.17D00:00:10.424303000 475.265 480.6943 475      479.14 15497636  478.66 479.08 1       2\n2025.06.17D00:00:10.424303000 NVDA  2025.06.17D00:00:10.424303000 143.345 146.175  143.2001 144.69 181574772 144.89 145.14 2       2\n2025.06.17D00:00:10.424303000 PG    2025.06.17D00:00:10.424303000 160.88  161.95   160.01   160.88 6318973   160.61 160.89 3       9\n2025.06.17D00:00:10.424303000 TSLA  2025.06.17D00:00:10.424303000 331.18  332.05   326.41   329.13 82528502  328.96 329.25 1       1\n2025.06.17D00:00:10.424303000 UNH   2025.06.17D00:00:10.424303000 313     313.2197 304.79   307.66 13065049  307.03 307.39 4       3\n2025.06.17D00:00:10.424303000 V     2025.06.17D00:00:10.424303000 356.49  360.22   354.33   355.48 6170903   355.2  355.25 4       2\n2025.06.17D00:00:10.424303000 WMT   2025.06.17D00:00:10.424303000 94.75   95.78    94.1     94.29  11926452  94.23  94.36  6       8\nq)count stocks\n30\n"})}),"\n",(0,a.jsx)(t.h2,{id:"databento-unlock-market-data-without-limits",children:"Databento: Unlock Market Data Without Limits"}),"\n",(0,a.jsxs)(t.p,{children:["Hitting data limits with Yahoo Finance can be frustrating, especially when you're aiming to build something that reflects real-world trading conditions. That\u2019s where ",(0,a.jsx)(t.a,{href:"https://databento.com",children:"Databento"})," comes in. It\u2019s built to provide developers and quants with fast, flexible access to real-time and historical market data, without the usual bottlenecks. Best of all? When you sign up, you get $125 in free credits to start exploring and integrating real market data right away."]}),"\n",(0,a.jsx)(t.h3,{id:"from-wall-street-to-market-data-revolution-meet-christina-qi-hedge-fund-prodigy-turned-founder",children:"From Wall Street to Market Data Revolution: Meet Christina Qi, Hedge Fund Prodigy Turned Founder"}),"\n",(0,a.jsxs)(t.p,{children:["Databento is a next-generation market data platform designed to make high-quality financial data more accessible and affordable. It was founded by ",(0,a.jsx)(t.a,{href:"https://www.linkedin.com/in/christinaqi/",children:"Christina Qi"}),", former hedge fund manager and co-founder of Domeyard LP, a pioneering HFT firm. With her deep industry experience, Christina launched Databento to address the high cost and complexity of traditional market data providers. The platform offers fast, flexible access to a wide range of real-time and historical data, all on-demand and usage-based\u2014no expensive licenses or long-term contracts. Whether you're building a quant strategy, research tool, or trading system, Databento offers a modern, developer-friendly alternative that\u2019s both powerful and cost-effective."]}),"\n",(0,a.jsx)(t.h3,{id:"kickstart-your-market-data-journey-with-databento-in-minutes",children:"Kickstart Your Market Data Journey with Databento in Minutes"}),"\n",(0,a.jsx)(t.p,{children:"Getting started with Databento is refreshingly simple and takes just a few minutes. All you need to do is sign up with your email, verify your account, and you\u2019re in. Instantly, you'll receive $125 in free credits to explore and use their API. Once logged in, you're welcomed by a clean, user-friendly dashboard displaying your API keys, data plans, usage stats, cost breakdown, and comprehensive documentation to guide you through every step. It's so intuitive that even I found it easy to navigate."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{alt:"databento Dashboard",src:n(69383).A+"",width:"3410",height:"1954"}),"\n",(0,a.jsx)(t.img,{alt:"databento Data Usage",src:n(2348).A+"",width:"3394",height:"1870"}),"\n",(0,a.jsx)(t.img,{alt:"databento Billing and Credit",src:n(13973).A+"",width:"3414",height:"1038"})]}),"\n",(0,a.jsxs)(t.p,{children:["Just like other Python libraries, you can install the Databento client with a quick ",(0,a.jsx)(t.code,{children:"pip install"}),". The API supports Python, Rust, and C++, and the ",(0,a.jsx)(t.a,{href:"https://databento.com/docs/",children:"QuickStart guide"})," is the perfect place to begin."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"pip install databento\n"})}),"\n",(0,a.jsx)(t.h2,{id:"integrating-databento-into-your-real-time-kdbq-stack",children:"Integrating Databento into Your Real-Time KDB/Q Stack"}),"\n",(0,a.jsxs)(t.p,{children:["To integrate Databento into our real-time KDB/Q tick stack, I made a few small but impactful updates to the codebase. You can find the latest version on my ",(0,a.jsx)(t.a,{href:"https://github.com/DefconQ/defconQ/tree/master/projects/realTimeStock",children:"GitHub repository"}),". The main changes are as follows:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Schema Alignment"}),": Updated the table schema to match Databento\u2019s format for seamless compatibility."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Renamed Table"}),": Changed the table name from ",(0,a.jsx)(t.code,{children:"stocks"})," to ",(0,a.jsx)(t.code,{children:"trades"})," to reflect the new data source."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Removed Yahoo Finance Dependency"}),": Dropped all ",(0,a.jsx)(t.code,{children:"yfinance"})," imports and related logic."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Databento Integration"}),": Added support for the ",(0,a.jsx)(t.code,{children:"databento"})," client, including authentication and stream setup."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Simplified Ticker Input"}),": Replaced CSV-based ticker loading with command-line argument support."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"KDB+ Compatibility"}),": Retained all existing kola-based streaming functionality to ensure a smooth connection with KDB+."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This integration makes our real-time app more flexible, scalable, and production-ready, powered by high-quality data and a fast, modern toolchain."}),"\n",(0,a.jsx)(t.h2,{id:"kola-meets-databento-powering-your-real-time-kdbq-stack",children:"Kola Meets Databento: Powering Your Real-Time KDB/Q Stack"}),"\n",(0,a.jsx)(t.p,{children:"Let\u2019s bring everything together and launch our updated KDB/Q tick stack with full support for Kola and Databento. We begin by starting the modified Tickerplant, which loads the updated table schema aligned with Databento\u2019s format."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"alexanderunterrainer@Mac:~/repos/defconQ/projects/realTimeStock|master\u26a1 \u21d2  qq tick_databento.q sym_databento -p 5010\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"KDB+ 4.1 2025.02.18 Copyright (C) 1993-2025 Kx Systems\nm64/ 8(24)core 24576MB alexanderunterrainer mac 192.168.1.133 EXPIRE 2026.03.11 KDB PLUS PERSONAL #5024911\n\nq)trades\nts_event rtype publisher_id instrument_id action side depth price size flags ts_in_delta sequence symbol\n--------------------------------------------------------------------------------------------------------\nq)\n"})}),"\n",(0,a.jsx)(t.p,{children:"Once the Tickerplant is running, we confirm the schema has loaded correctly. Next, we spin up the Real-Time Database (RDB) and verify it has picked up the new schema and is ready to receive data, checking the table count as a quick sanity check."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"alexanderunterrainer@Mac:~/repos/defconQ/projects/realTimeStock|master\u26a1 \u21d2  qq tick_databento/r.q :5010 -p 5011\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"KDB+ 4.1 2025.02.18 Copyright (C) 1993-2025 Kx Systems\nm64/ 8(24)core 24576MB alexanderunterrainer mac 192.168.1.133 EXPIRE 2026.03.11 KDB PLUS PERSONAL #5024911\n\nq)trades\nts_event rtype publisher_id instrument_id action side depth price size flags ts_in_delta sequence symbol\n--------------------------------------------------------------------------------------------------------\nq)count trades\n0\n"})}),"\n",(0,a.jsx)(t.p,{children:"Finally, we launch our Python data feed, which streams real-time market data directly from Databento into our stack."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"alexanderunterrainer@Mac:~/repos/defconQ/projects/realTimeStock|master\u26a1 \u21d2  python3 databento_streamer.py --databento-key YOU_API_KEY --dataset GLBX.MDP3 --schema trades --symbols ESM2 --start-date 2022-06-06 --end-date 2022-06-08 --interval 60\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"2025-06-16 21:42:33,393 - INFO - Initializing Databento client...\n2025-06-16 21:42:33,393 - INFO - Initialized Historical(gateway=https://hist.databento.com)\n2025-06-16 21:42:33,393 - INFO - Successfully initialized Databento client\n2025-06-16 21:42:33,393 - INFO - Connecting to KDB+ at localhost:5010 (attempt 1/3)\n2025-06-16 21:42:33,393 - INFO - Successfully connected to KDB+ using kola\n2025-06-16 21:42:33,393 - INFO - Starting data streaming for symbols ['ESM2'] at 60s intervals\n2025-06-16 21:42:33,393 - INFO - Fetching trades data from GLBX.MDP3 for symbols ['ESM2']\n2025-06-16 21:42:33,393 - INFO - Date range: 2022-06-06 to 2022-06-08\n2025-06-16 21:42:40,627 - INFO - Retrieved 952346 records from Databento\nshape: (952_346, 13)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 ts_event                        \u2506 rtype \u2506 publisher_id \u2506 instrument_id \u2506 \u2026 \u2506 flags \u2506 ts_in_delta \u2506 sequence \u2506 symbol \u2502\n\u2502 ---                             \u2506 ---   \u2506 ---          \u2506 ---           \u2506   \u2506 ---   \u2506 ---         \u2506 ---      \u2506 ---    \u2502\n\u2502 datetime[ns, UTC]               \u2506 u8    \u2506 u16          \u2506 u32           \u2506   \u2506 u8    \u2506 i32         \u2506 u32      \u2506 str    \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2022-06-06 00:00:00.070033767 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18681       \u2506 157862   \u2506 ESM2   \u2502\n\u2502 2022-06-06 00:00:00.089830441 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18604       \u2506 157922   \u2506 ESM2   \u2502\n\u2502 2022-06-06 00:00:00.807018955 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18396       \u2506 158072   \u2506 ESM2   \u2502\n\u2502 2022-06-06 00:00:01.317385867 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 22043       \u2506 158111   \u2506 ESM2   \u2502\n\u2502 2022-06-06 00:00:01.317385867 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 17280       \u2506 158112   \u2506 ESM2   \u2502\n\u2502 \u2026                               \u2506 \u2026     \u2506 \u2026            \u2506 \u2026             \u2506 \u2026 \u2506 \u2026     \u2506 \u2026           \u2506 \u2026        \u2506 \u2026      \u2502\n\u2502 2022-06-07 23:59:58.550608211 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18440       \u2506 26322074 \u2506 ESM2   \u2502\n\u2502 2022-06-07 23:59:58.550782187 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18571       \u2506 26322076 \u2506 ESM2   \u2502\n\u2502 2022-06-07 23:59:58.550811233 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 17159       \u2506 26322077 \u2506 ESM2   \u2502\n\u2502 2022-06-07 23:59:59.228076537 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18256       \u2506 26322090 \u2506 ESM2   \u2502\n\u2502 2022-06-07 23:59:59.228284091 \u2026 \u2506 0     \u2506 1            \u2506 3403          \u2506 \u2026 \u2506 0     \u2506 18254       \u2506 26322092 \u2506 ESM2   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2025-06-16 21:42:40,649 - INFO - Processed 952346 records for streaming\nshape: (952_346, 13)\n"})}),"\n",(0,a.jsx)(t.p,{children:"We can now see real-time data flowing into our RDB."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'q)count trades\n952346\nq)trades\nts_event                      rtype publisher_id instrument_id action side depth price   size flags ts_in_delta sequence symbol\n-------------------------------------------------------------------------------------------------------------------------------\n2022.06.06D00:00:00.070033767 0     1            3403          ,"T"   ,"A" 0     4108.5  1    0     18681       157862   "ESM2"\n2022.06.06D00:00:00.089830441 0     1            3403          ,"T"   ,"A" 0     4108.25 1    0     18604       157922   "ESM2"\n2022.06.06D00:00:00.807018955 0     1            3403          ,"T"   ,"B" 0     4108.25 4    0     18396       158072   "ESM2"\n2022.06.06D00:00:01.317385867 0     1            3403          ,"T"   ,"A" 0     4108    1    0     22043       158111   "ESM2"\n2022.06.06D00:00:01.317385867 0     1            3403          ,"T"   ,"A" 0     4108    7    0     17280       158112   "ESM2"\n2022.06.06D00:00:01.317385867 0     1            3403          ,"T"   ,"A" 0     4108    1    0     17280       158112   "ESM2"\n2022.06.06D00:00:01.317385867 0     1            3403          ,"T"   ,"A" 0     4108    1    0     17280       158112   "ESM2"\n2022.06.06D00:00:01.317613333 0     1            3403          ,"T"   ,"A" 0     4108    1    0     21473       158114   "ESM2"\n2022.06.06D00:00:01.324795185 0     1            3403          ,"T"   ,"A" 0     4107.75 4    0     19595       158206   "ESM2"\n2022.06.06D00:00:01.324795185 0     1            3403          ,"T"   ,"A" 0     4107.75 1    0     19848       158207   "ESM2"\n2022.06.06D00:00:01.324840223 0     1            3403          ,"T"   ,"A" 0     4107.75 1    0     19848       158207   "ESM2"\n2022.06.06D00:00:01.324851563 0     1            3403          ,"T"   ,"A" 0     4107.75 1    0     22183       158208   "ESM2"\n2022.06.06D00:00:01.324852069 0     1            3403          ,"T"   ,"A" 0     4107.75 1    0     22183       158208   "ESM2"\n2022.06.06D00:00:01.324857297 0     1            3403          ,"T"   ,"A" 0     4107.75 1    0     22183       158208   "ESM2"\n2022.06.06D00:00:01.324858743 0     1            3403          ,"T"   ,"A" 0     4107.75 1    0     19332       158209   "ESM2"\n2022.06.06D00:00:01.324861955 0     1            3403          ,"T"   ,"A" 0     4107.75 2    0     19332       158209   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.5  1    0     24619       158279   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.5  1    0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.5  1    0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.5  1    0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.5  1    0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.5  3    0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107.25 13   0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107    9    0     21346       158280   "ESM2"\n2022.06.06D00:00:01.336988409 0     1            3403          ,"T"   ,"A" 0     4107    1    0     19343       158281   "ESM2"\n'})}),"\n",(0,a.jsx)(t.p,{children:"And that\u2019s it! With everything in place, you now have a fully functioning, real-time system built on modern, high-performance tools. Hope you found this walkthrough helpful and inspiring!"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},69383:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/databento1-64c0059187ec3bdccb9c1a6b04905783.png"},2348:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/databento2-d7d1d3b32b44101e6175170493c61d51.png"},13973:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/databento3-e69d5da3bf7a9559c82db3103960f75d.png"},84888:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/nathan-e6a9bef565dfe1dfc3ce46c0e782f520.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(96540);const i={},o=a.createContext(i);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);