<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>DefconQ Blog</title>
        <link>https://DefconQ.github.io/blog</link>
        <description>DefconQ Blog</description>
        <lastBuildDate>Mon, 28 Apr 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Brews and Qs - KX and DefconQ Happy Hour!]]></title>
            <link>https://DefconQ.github.io/blog/Brews and Qs - KX and DefconQ Happy Hour!</link>
            <guid>https://DefconQ.github.io/blog/Brews and Qs - KX and DefconQ Happy Hour!</guid>
            <pubDate>Mon, 28 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[As part of our shared mission to grow the KDB/Q community in London, KX and DefconQ have teamed up and we are excited to announce the first-ever London KDB/Q Community Happy Hour, with many more to come! This event is open to all KDB/Q developers and enthusiasts who would like to connect, share ideas, or simply enjoy some good company over drinks.]]></description>
            <content:encoded><![CDATA[<p>As part of our shared mission to grow the KDB/Q community in London, KX and DefconQ have teamed up and we are excited to announce the first-ever <strong>London KDB/Q Community Happy Hour</strong>, with many more to come! This event is open to all KDB/Q developers and enthusiasts who would like to connect, share ideas, or simply enjoy some good company over drinks.</p>
<p><strong>When: Thursday, 22nd May, from 17:30</strong></p>
<p><strong>Where: Flight Club, Shoreditch</strong></p>
<p><strong>Signup here</strong>: <a href="https://go.marketing.kx.com/kx-happy-hour-london?_gl=1*1k23ea*_gcl_au*MTk4NjUzMTI5OS4xNzQ1NzQ3Mzg4*_ga*OTcyNzM3MTIwLjE3Mjk4NTgxNjQ.*_ga_96WX6WQP6Y*MTc0NTc0NzM4OS4xNTguMS4xNzQ1NzQ4MzMzLjYwLjAuMTE1ODM1Njg5NQ.." target="_blank" rel="noopener noreferrer">Brews &amp; Qs Happy Hour</a></p>
<p>I’ll be your host for the evening, and thanks to the generous support of KX, the event is fully sponsored.</p>
<p>Whether you're a seasoned KDB/Q developer or just starting your KDB/Q journey, come join us for a fun evening with the community. Looking forward to seeing many of you there!</p>
<p><img decoding="async" loading="lazy" alt="NYSE extends trading hours" src="https://defconq.github.io/assets/images/happyHour-12f363d4b0302545a6b5e7f39a9bcdb6.png" width="1024" height="1536" class="img_ev3q"></p>]]></content:encoded>
            <category>kdb/q</category>
            <category>Community</category>
            <category>DefconQ</category>
            <category>After Hours</category>
            <category>Happy Hour</category>
            <category>Meetup</category>
            <category>KX</category>
        </item>
        <item>
            <title><![CDATA[The Truth About Tech Jobs in Finance - Nepotism, Hedge Funds & Salary Secrets!]]></title>
            <link>https://DefconQ.github.io/blog/The Truth About Tech Jobs in Finance - Nepotism, Hedge Funds &amp; Salary Secrets!</link>
            <guid>https://DefconQ.github.io/blog/The Truth About Tech Jobs in Finance - Nepotism, Hedge Funds &amp; Salary Secrets!</guid>
            <pubDate>Thu, 13 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[The finance & tech job market EXPOSED! A couple of weeks ago, I had the pleasure of sitting down with Craig Whiting, Managing Director at RLS Search and host of the Top 10% Podcast, for an unfiltered conversation about some key topics in our industry:]]></description>
            <content:encoded><![CDATA[<p>The finance &amp; tech job market EXPOSED! A couple of weeks ago, I had the pleasure of sitting down with <a href="https://www.linkedin.com/in/craig-whiting-b75a8ba/" target="_blank" rel="noopener noreferrer">Craig Whiting</a>, Managing Director at RLS Search and host of the Top 10% Podcast, for an unfiltered conversation about some key topics in our industry:</p>
<ul>
<li>Banking grad schemes – Are they worth it?</li>
<li>Nepotism in investment banks – How much does it matter?</li>
<li>Hedge Funds vs. Banks – Where should you work?</li>
<li>The truth about promotions &amp; counteroffers</li>
<li>The best way to negotiate your salary</li>
<li>Does your university degree really matter?</li>
<li>How to find a good recruiter (yes, they exist!)</li>
</ul>
<p>If you're exploring job opportunities or simply want to understand the industry landscape, key considerations when searching for a new role, and more, join this insightful conversation between two seasoned professionals in the field.</p>
<iframe width="1120" height="630" src="https://www.youtube.com/embed/Wn7T_aLl9Nw?si=-HA-bnioM715aZ8D" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-pic    ture; web-share" referrerpolicy="strict-origin-when-cross-origin"></iframe>]]></content:encoded>
            <category>kdb/q</category>
            <category>Job Market</category>
            <category>Recruitment</category>
            <category>Buy Side</category>
            <category>Sell Side</category>
            <category>Hedge Funds</category>
            <category>Investment Banking</category>
        </item>
        <item>
            <title><![CDATA[DefconQ goes KX Capital Markets Summit - Survival of the Fastest]]></title>
            <link>https://DefconQ.github.io/blog/KX Capital Markets Summit</link>
            <guid>https://DefconQ.github.io/blog/KX Capital Markets Summit</guid>
            <pubDate>Fri, 22 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Last week, I had the pleasure of attending the KX Capital Market Summit. Following an invitation of my friends at KX, I joined market participants and other KDB/Q developers for a day full of keynote presentations, real-world use cases of KX products, and engaging networking sessions with fellow KDB/Q enthusiasts.]]></description>
            <content:encoded><![CDATA[<p>Last week, I had the pleasure of attending the <strong>KX Capital Market Summit</strong>. Following an invitation of my friends at <a href="https://kx.com/" target="_blank" rel="noopener noreferrer">KX</a>, I joined market participants and other KDB/Q developers for a day full of keynote presentations, real-world use cases of KX products, and engaging networking sessions with fellow KDB/Q enthusiasts.</p>
<p>This summit was one of the standout highlights of the year for me, as I was thrilled to hear about the latest advancements at KX, learn how market participants and industry experts leverage KDB/Q to gain a competitive edge, and see KXperts showcase innovative solutions they’ve been working on. On a personal note, it was also a wonderful opportunity to reconnect with KDB/Q developers I hadn’t seen in a while and catch up with my friends at KX. It’s an event I wouldn’t have missed for the world!</p>
<p><img decoding="async" loading="lazy" alt="KDB/Q Survival of the Fastest" src="https://defconq.github.io/assets/images/vin-diesel-fast-and-furious-racing-7af10a188925a4668ba5f27d7809181e.jpg" width="4256" height="2128" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-new-kx---framing-the-ai-journey-in-capital-markets">The New KX - Framing the AI Journey In Capital Markets<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#the-new-kx---framing-the-ai-journey-in-capital-markets" class="hash-link" aria-label="Direct link to The New KX - Framing the AI Journey In Capital Markets" title="Direct link to The New KX - Framing the AI Journey In Capital Markets">​</a></h2>
<p>The summit began with an inspiring keynote session featuring KX CEO <a href="https://www.linkedin.com/in/areddy/" target="_blank" rel="noopener noreferrer"><strong>Ashok Reddy</strong></a> and CMO <a href="https://www.linkedin.com/in/peterfinter/" target="_blank" rel="noopener noreferrer"><strong>Peter Finter</strong></a>. Ashok took us on a journey through KX’s history, from its founding in 1993 (the same year as Nvidia) to its evolution into the powerhouse it is today. He emphasized KX’s strength, speed, and transformative impact on capital markets, particularly as firms move toward an AI-first future. Highlighting KX’s mission, Ashok stated, <em><strong>“Our focus is on the technology problems so you can focus on the business problems.”</strong></em>  He also introduced the concept of <strong>AI Factories</strong>, emphasising how they empower firms to make high-stakes, data-driven decisions and support quants in leveraging cutting-edge AI.</p>
<p><img decoding="async" loading="lazy" alt="Ashok Reddy KX" src="https://defconq.github.io/assets/images/AshokReddy-5021b1fb0de32e135920d3341ae725a3.jpeg" width="2040" height="1536" class="img_ev3q"></p>
<p>Next, Peter Finter delivered fascinating insights into the AI landscape. He underscored the critical role AI plays in enabling quants to uncover market patterns, speed up iteration cycles, and transform ideas into action—helping firms maintain their edge in high-speed markets. Peter noted that only <em><strong>6% of organizations achieve meaningful ROI from AI</strong></em>, leaving significant room for growth. His presentation revolved around the powerful mantra: <strong>“Survival of the Fastest.”</strong> And if speed is the game, KX and KDB/Q undeniably sit at the summit of the data mountain!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="optimising-quantitative-development-with-kdb-a-case-study-in-performance-and-scalability-with-b2c2">Optimising Quantitative Development with KDB: A Case Study in Performance and Scalability with B2C2<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#optimising-quantitative-development-with-kdb-a-case-study-in-performance-and-scalability-with-b2c2" class="hash-link" aria-label="Direct link to Optimising Quantitative Development with KDB: A Case Study in Performance and Scalability with B2C2" title="Direct link to Optimising Quantitative Development with KDB: A Case Study in Performance and Scalability with B2C2">​</a></h2>
<p>The first guest speaker of the day, <a href="https://www.linkedin.com/in/jad-sarmo-5b2b858/" target="_blank" rel="noopener noreferrer"><strong>Jad Sarmo</strong></a>, Head of Quantitative Development at <strong>B2C2</strong>, delivered an insightful session on leveraging a scalable KDB/Q architecture to manage high-volume data and empower quantitative research in the fast-paced crypto space. Jad showcased how integrating tools like <strong>PyKX, AWS, and KX Dashboards</strong> delivers rapid insights, enhancing decision-making and maintaining a competitive edge in dynamic markets. The presentation offered valuable lessons on harnessing <strong>KDB/Q, PyKX and KX Dashboards</strong> for scalable data analysis and research. Attendees also gained insights into building a cloud-based KX infrastructure, illustrated through real-life challenges and benefits. This engaging session highlighted how KDB/Q’s robust and scalable architecture revolutionizes quantitative analysis in crypto, offering firms a clear advantage with actionable, rapid insights.</p>
<p>A key takeaway from Jad's presentation was the emphasis on the importance of high-quality data, highlighting that recent data holds greater significance than data from a decade ago. This is particularly true in financial markets, which continuously evolve over time, unlike other industries.</p>
<p><img decoding="async" loading="lazy" alt="Jad Sarmo B2C2" src="https://defconq.github.io/assets/images/JadSarmo-5d948227e5e4250edbd679524bc93f78.jpeg" width="2040" height="1536" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="frictionless-deployment-for-capital-markets-accelerating-time-to-value">Frictionless Deployment for Capital Markets: Accelerating Time to Value<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#frictionless-deployment-for-capital-markets-accelerating-time-to-value" class="hash-link" aria-label="Direct link to Frictionless Deployment for Capital Markets: Accelerating Time to Value" title="Direct link to Frictionless Deployment for Capital Markets: Accelerating Time to Value">​</a></h2>
<p>After a brief break and networking session, the day continued with the first panel discussion. <a href="https://www.linkedin.com/in/adrian-fancourt-315489/" target="_blank" rel="noopener noreferrer"><strong>Adrian Fancourt</strong></a>, Head of Capital Markets Business Development, EMEA at <strong>AWS</strong>, joined <a href="https://www.linkedin.com/in/themacleod/" target="_blank" rel="noopener noreferrer"><strong>Matt MacLeod</strong></a> from <strong>ICE</strong> and <a href="https://www.linkedin.com/in/zovko/" target="_blank" rel="noopener noreferrer"><strong>Ilija Zovko</strong></a> from <strong>Aspect Capital</strong> to discuss he challenges faced by capital markets clients in managing data infrastructure. Ilija opened with a candid observation about the difficulty of finding interns who either know KDB/Q or are eager to learn it. My suggestion? Take advantage of the free personal trial edition or the student edition of KDB, offering a year of access that can be easily renewed. For learning KDB/Q, there’s no better place than <strong>DefconQ</strong> - check out my comprehensive study plan <a href="https://www.defconq.tech/docs/studyPlan/intro" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>The panel explored solutions to help capital markets firms overcome infrastructure management challenges, emphasizing the need for streamlined approaches that enable data teams to focus on generating insights rather than grappling with infrastructure. Together, KX, ICE, and AWS deliver a frictionless deployment model that removes bottlenecks by handling infrastructure setup, normalizing data, and ensuring its immediate availability for analysis. This session highlighted how KX accelerates time to market and value through innovative data management and deployment strategies.</p>
<p><img decoding="async" loading="lazy" alt="Frictionless Deployment for Capital Markets Panel" src="https://defconq.github.io/assets/images/panel-e933000f1d76b68f69626df9da02d07c.jpeg" width="2040" height="1536" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fixed-income-trading-its-more-than-about-time">Fixed Income Trading: It's More Than About Time<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#fixed-income-trading-its-more-than-about-time" class="hash-link" aria-label="Direct link to Fixed Income Trading: It's More Than About Time" title="Direct link to Fixed Income Trading: It's More Than About Time">​</a></h2>
<p>Next up was <a href="https://www.linkedin.com/in/ken-garrett-8328a312/" target="_blank" rel="noopener noreferrer"><strong>Ken Garrett</strong></a>, Head of Fixed Income eTrading at <strong>ING</strong>, delivering what many of my peers considered another highlight of the day. Ken explored how fixed-income trading analytics can go beyond traditional time-series and tick data. He showcased the robust capabilities of KDB and the Q programming language in managing extensive data aggregation, a critical requirement for tackling the multidimensional challenges of trading. This approach is particularly valuable in low-liquidity markets, where conventional tools often struggle. Ken's session demonstrated how KDB and Q can enhance data oversight and offer a competitive advantage in complex trading environments.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-pykx-expands-access-to-kx-products">How PyKX expands access to KX products<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#how-pykx-expands-access-to-kx-products" class="hash-link" aria-label="Direct link to How PyKX expands access to KX products" title="Direct link to How PyKX expands access to KX products">​</a></h2>
<p>After a short break, which included exclusive solution showcases and 1:1 consultation sessions with KX experts, <a href="https://www.linkedin.com/in/conor-mccarthy-08aa25a7/" target="_blank" rel="noopener noreferrer"><strong>Conor McCarthy</strong></a>, VP of Data Science at <strong>KX</strong>, As the Lead Architect of PyKX, Conor explained what PyKX is (for those unfamiliar) and why it is quickly becoming the gold standard for data access and analysis among KX clients who haven't made the transition to pure KDB/Q yet.  He highlighted how recent innovations in PyKX are elevating KX products to new heights in terms of democratization and performance.</p>
<p><img decoding="async" loading="lazy" alt="Conor McCarthy" src="https://defconq.github.io/assets/images/ConorMcCarthy-fe668782ae00ca50194350431a4a6f89.jpeg" width="2048" height="1536" class="img_ev3q"></p>
<p>Conor showcased exciting new features introduced in version 3.0, emphasizing PyKX's hybrid architecture that combines the speed and scale of kdb+ with seamless integration into Python’s ML and deep learning libraries, enabling advanced AI-driven algorithms and analytics workflows. Two standout upgrades were:</p>
<ul>
<li><strong>Python-First Query API</strong>: A user-friendly API that unifies fast access to real-time and historical data within Python’s ML environment.</li>
<li><strong>Python-First Streaming Workflows</strong>: Enables real-time data handling within Python, simplifying the application of ML and AI models to high-frequency data streams. An impressive 95% of tasks can now be performed entirely within Python, reducing the need for extensive programming language expertise.</li>
</ul>
<p>I had the privilege of a personal demo of these new features and must say they make life remarkably easy for Python-first developers. However, as a devoted KDB/Q enthusiast, I have to admit that my preferred language of choice remains, and will always be, KDB/Q.</p>
<p>For more details about PyKX, check out these two press releases and explore the official documentation available on <a href="https://code.kx.com/pykx/3.0/" target="_blank" rel="noopener noreferrer">code.kx.com</a></p>
<ul>
<li><a href="https://www.bigdatawire.com/2024/11/14/kx-aims-to-unlock-pythons-potential-with-pykx-3-0/" target="_blank" rel="noopener noreferrer">BigDataWire: KX Aims to Unlock Python’s Potential with PyKX 3.0</a></li>
<li><a href="https://www.businesswire.com/news/home/20241112167685/en/KX-Supercharges-Python-Workloads-with-kdb-Speed-and-AIML-Library-Integration" target="_blank" rel="noopener noreferrer">BusinessWire: KX Supercharges Python Workloads with kdb+ Speed and AI/ML Library Integration</a></li>
</ul>
<p><img decoding="async" loading="lazy" alt="Conor McCarthy Quote" src="https://defconq.github.io/assets/images/ConorMcCarthyQuote-2b16a1399e624fe5235a22b9b7b54083.jpeg" width="1200" height="1200" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="accelerated-computing-and-generative-ai-applications-in-finance-with-nvidia">Accelerated Computing and Generative AI: Applications in Finance with NVIDIA<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#accelerated-computing-and-generative-ai-applications-in-finance-with-nvidia" class="hash-link" aria-label="Direct link to Accelerated Computing and Generative AI: Applications in Finance with NVIDIA" title="Direct link to Accelerated Computing and Generative AI: Applications in Finance with NVIDIA">​</a></h2>
<p>Next, <a href="https://www.linkedin.com/in/lavinia-ghita13/" target="_blank" rel="noopener noreferrer"><strong>Lavinia Ghita</strong></a>, Senior AI Solutions Architect at <strong>NVDIA</strong>,  explored the natural synergy between KX and NVIDIA—stemming not only from their shared inception year but also from their mutual focus on innovation. Lavinia provided valuable insights into accelerated computing and large language model (LLM) applications in finance and trading, showcasing how these technologies are revolutionizing the industry. Her presentation included an overview of the latest advancements in the field, a detailed examination of practical use cases, and guidance on accessing enterprise-ready accelerated computing infrastructure and resources. The discussion highlighted how AI solutions are transforming capital markets by mapping the journey from traditional applications to advanced AI-driven decision-making, with a focus on:</p>
<ul>
<li>Opportunities and implementation challenges</li>
<li>Unlocking the full potential of AI</li>
<li>The new AI Factory for Capital Markets and strategies to tackle common AI obstacles.</li>
</ul>
<p><img decoding="async" loading="lazy" alt="Lavinia Ghita" src="https://defconq.github.io/assets/images/LaviniaGhita-9ce3b26afd6fbe6056a397a754e30b51.jpeg" width="2040" height="1536" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ai-beyond-the-hype--lessons-learnt">AI beyond the hype – lessons learnt<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#ai-beyond-the-hype--lessons-learnt" class="hash-link" aria-label="Direct link to AI beyond the hype – lessons learnt" title="Direct link to AI beyond the hype – lessons learnt">​</a></h2>
<p>After the final break and networking session, <a href="https://www.linkedin.com/in/straussjohann/" target="_blank" rel="noopener noreferrer"><strong>Johann Strauss</strong></a>, CTO for AI Pursuit at <strong>Dell Technologies</strong>, delivered what I found to be the most energetic and engaging presentation of the day. Johann highlighted that while headlines often focus on massive investments in “mega clusters” by tech giants, the enterprise market is more concerned with integrating AI into business processes. He addressed the challenges enterprises face in navigating the complex AI landscape, including governance, the sway of “random vendors” influencing AI projects within business units, and the critical need for predictable costs.</p>
<p>Johann emphasized six core capabilities that can address the majority of enterprise AI use cases, encouraging CIOs to prioritize these foundational elements instead of attempting to build an extensive array of capabilities. His presentation focused on the "how" of implementing AI in the enterprise, advocating for a factory-style approach to drive AI adoption across organizations effectively.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="leading-capital-markets-into-the-ai-first-future">Leading Capital Markets into the AI-First Future<a href="https://defconq.github.io/blog/KX%20Capital%20Markets%20Summit#leading-capital-markets-into-the-ai-first-future" class="hash-link" aria-label="Direct link to Leading Capital Markets into the AI-First Future" title="Direct link to Leading Capital Markets into the AI-First Future">​</a></h2>
<p>To close out the day, Johann Strauss (Dell), Ken Garrett (ING), Jad Sarmo (B2C2), and KX CEO Ashok Reddy shared the stage for a thought-provoking panel discussion on how capital markets firms can achieve an AI-first future.</p>
<p><img decoding="async" loading="lazy" alt="Leading Capital Markets into the AI-First Future" src="https://defconq.github.io/assets/images/finalPanel-ea9f3372f1ae760d1944d8a1c2ca6375.jpeg" width="2040" height="1536" class="img_ev3q"></p>
<p>Following the insightful session, attendees were treated to a cocktail reception that rounded off the event in style. The highlight of the evening? A magician who captivated the crowd with mind-blowing tricks, leaving even <a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a> CTO <a href="https://www.linkedin.com/in/jonny-press-7005602/" target="_blank" rel="noopener noreferrer"><strong>Jonny Press</strong></a> utterly speechless. It was the perfect finale to an incredible day.</p>
<p>I looking forward to the next KX event! Until then, happy coding!</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>KX</category>
            <category>Capital Markets Summit</category>
            <category>AI</category>
        </item>
        <item>
            <title><![CDATA[New York Stock Exchange extends trading hours]]></title>
            <link>https://DefconQ.github.io/blog/NYSE extends trading hours</link>
            <guid>https://DefconQ.github.io/blog/NYSE extends trading hours</guid>
            <pubDate>Tue, 29 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Last week, in a groundbreaking move, the New York Stock Exchange (NYSE) revealed plans to extend after-hours trading on its Arca electronic exchange. Pending regulatory approval, this would expand Arca's operating hours from 130 p.m. ET, Monday through Friday, offering 22 hours of trading each weekday. This development follows other major exchange announcements this year, the Texas Stock Exchange (TXSE Group), backed by BlackRock and Citadel Securities. To learn more about how these changes could reshape the electronic trading landscape, keep reading below.]]></description>
            <content:encoded><![CDATA[<p>Last week, in a groundbreaking move, the New York Stock Exchange (NYSE) revealed plans to extend after-hours trading on its Arca electronic exchange. Pending regulatory approval, this would expand Arca's operating hours from 1:30 a.m. ET to 11:30 p.m. ET, Monday through Friday, offering 22 hours of trading each weekday. This development follows other major exchange announcements this year, the Texas Stock Exchange (TXSE Group), backed by BlackRock and Citadel Securities. To learn more about how these changes could reshape the electronic trading landscape, keep reading below.</p>
<p><img decoding="async" loading="lazy" alt="NYSE extends trading hours" src="https://defconq.github.io/assets/images/nyse-cb8854163136ba7515f62e5068318ccd.png" width="730" height="695" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-plan">The Plan<a href="https://defconq.github.io/blog/NYSE%20extends%20trading%20hours#the-plan" class="hash-link" aria-label="Direct link to The Plan" title="Direct link to The Plan">​</a></h2>
<p>First things first, let's examine the New York Stock Exchange’s (NYSE) latest proposal. On Friday, the NYSE announced its plans to extend trading hours on its all-electronic Arca exchange to 22 hours a day.</p>
<p>This proposal aligns with growing interest in around-the-clock trading in U.S. markets. Robinhood, for example, introduced “24/5 trading” in May 2023, allowing trades from 8 p.m. ET on Sundays to 8 p.m. ET on Fridays. Meanwhile, global cryptocurrency markets already operate 24/7.</p>
<p>Under the new plan, NYSE Arca’s trading would open at 1:30 a.m. and close at 11:30 p.m. ET on weekdays, pending regulatory approval, according to the NYSE’s parent company, Intercontinental Exchange. Currently, extended trading hours on the NYSE range from 4 a.m. ET to 8 p.m. ET, with regular trading between 9:30 a.m. and 4 p.m. ET.</p>
<p>NYSE Arca, a leading platform for trading exchange-traded funds (ETFs) and over 8,000 U.S.-listed securities, would allow trading of all U.S.-listed stocks, ETFs, and closed-end funds during these expanded hours.</p>
<p>The proposal comes in response to rising demand for U.S. securities trading. Kevin Tyrrell, Head of Markets at the New York Stock Exchange, commented, "The NYSE’s initiative to extend U.S. equity trading to 22 hours a day, five days a week highlights the strength of our U.S. capital markets and the increasing global demand for our listed securities. As the steward of U.S. capital markets, the NYSE is proud to lead the way in providing exchange-based trading access to our U.S.-listed companies and funds for investors across global time zones."</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="redefining-the-game-what-nyses-22-hour-trading-means-for-electronic-markets">Redefining the Game: What NYSE's 22-Hour Trading Means for Electronic Markets<a href="https://defconq.github.io/blog/NYSE%20extends%20trading%20hours#redefining-the-game-what-nyses-22-hour-trading-means-for-electronic-markets" class="hash-link" aria-label="Direct link to Redefining the Game: What NYSE's 22-Hour Trading Means for Electronic Markets" title="Direct link to Redefining the Game: What NYSE's 22-Hour Trading Means for Electronic Markets">​</a></h2>
<p>What will these extended trading hours mean for the electronic trading landscape? Opinions are divided. While some market participants believe the impact will be limited and consider the proposal premature. Jim Toes, CEO of the Security Traders Association, noted in a CNBC interview, "The application seems very premature, as the demand for overnight and weekend exchange trading is still speculative." Dmitri Galinov, former head of Credit Suisse’s dark pool, holds a different view. “There is certainly demand from international markets, especially in South Korea, Japan, and parts of Europe,” he stated in a Sunday interview with CNBC.</p>
<p>He also pointed out a growing interest among U.S. retail traders who wish to trade at night, noting, “Many retail traders work during the day and want the option to trade past the current 8 p.m. cutoff when they get home.”</p>
<p>While demand from retail traders for extended hours is evident, the key question remains: will institutional traders follow suit? Although institutional investors are unlikely to be early adopters, and trading volumes are expected to be thin initially, competition around extended trading hours is undoubtedly intensifying. Earlier this year, TXSE Group, backed by BlackRock (BLK.N) and Citadel Securities, announced plans to launch the Texas Stock Exchange in Dallas, challenging the dominance of New York-based exchanges in an effort to attract global firms. With Citadel Securities—one of the world’s largest market makers—supporting TXSE, automation and extended trading hours appear increasingly likely, broadening stock market access.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="shifting-the-clock-how-extended-hours-are-transforming-the-trading-tech-landscape">Shifting the Clock: How Extended Hours are Transforming the Trading Tech Landscape<a href="https://defconq.github.io/blog/NYSE%20extends%20trading%20hours#shifting-the-clock-how-extended-hours-are-transforming-the-trading-tech-landscape" class="hash-link" aria-label="Direct link to Shifting the Clock: How Extended Hours are Transforming the Trading Tech Landscape" title="Direct link to Shifting the Clock: How Extended Hours are Transforming the Trading Tech Landscape">​</a></h2>
<p>For software developers and engineers in the financial industry focused on trading implications, the consequences are clear: trading data volumes are poised to grow even larger. Today, we already manage unprecedented amounts of data and information, the highest in human history. While this increase in data and trading volume is a natural outcome of technological evolution, extended trading hours are likely to accelerate this growth. As financial technologists, we must adjust and adapt, prioritizing the availability and stability of our trading applications to meet these expanding demands.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kdbq-the-definitive-solution-for-data-driven-finance">KDB/Q: The Definitive Solution for Data-Driven Finance<a href="https://defconq.github.io/blog/NYSE%20extends%20trading%20hours#kdbq-the-definitive-solution-for-data-driven-finance" class="hash-link" aria-label="Direct link to KDB/Q: The Definitive Solution for Data-Driven Finance" title="Direct link to KDB/Q: The Definitive Solution for Data-Driven Finance">​</a></h2>
<p>The next steps in response to this increase in trading volume and the corresponding rise in trading data and information are in your hands. You need to pivot toward technologies designed for big data that can manage substantial amounts of information for both real-time processing and historical data storage. Additionally, rapid computation and calculation are crucial for processing and analyzing the vast amounts of data you’re capturing. What better technology for this than KDB/Q? KDB/Q is the established go-to solution for handling, storing, processing, and analyzing big data and time series data.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://defconq.github.io/blog/NYSE%20extends%20trading%20hours#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h2>
<p>So, what are your next steps? It's clear that learning KDB/Q can provide you with a significant competitive advantage, especially if you’re starting from scratch. Luckily, I’ve just released the most comprehensive KDB/Q study plan ever created. This unprecedented study plan caters to a wide range of needs—whether you're an aspiring KDB/Q developer, a mainstream developer who needs to work with KDB/Q, a quant or quant developer focused on building efficient business logic in KDB/Q, a data or business analyst trying to make sense and looking to interpret data, or a manager overseeing a team of developers wanting to grasp the KDB/Q stack. There’s something here for everyone. So don’t hesitate—check it out here!</p>
<p>Find my unprecedented KDB/Q study plan <a href="https://www.defconq.tech/docs/studyPlan/intro" target="_blank" rel="noopener noreferrer">here</a></p>
<p><strong>Happy Learning!</strong></p>
<p><strong>Source:</strong></p>
<ul>
<li><a href="https://ir.theice.com/press/news-details/2024/The-New-York-Stock-Exchange-Plans-to-Extend-Weekday-Trading-on-its-NYSE-Arca-Equities-Exchange-to-22-Hours-a-Day/default.aspx" target="_blank" rel="noopener noreferrer">The New York Stock Exchange Plans to Extend Weekday Trading on its NYSE Arca Equities Exchange to 22 Hours a Day</a></li>
<li><a href="https://www.cnbc.com/2024/10/25/new-york-stock-exchange-to-extend-after-hours-trading.html" target="_blank" rel="noopener noreferrer">CNBC: New York Stock Exchange to extend after-hours trading</a></li>
<li><a href="https://www.cnbc.com/2024/10/28/the-pros-and-cons-for-investors-of-nonstop-trading-as-nyse-looks-to-go-22-hours-a-day-.html" target="_blank" rel="noopener noreferrer">CNBC: The pros and cons for investors of nonstop trading as NYSE looks to go 22 hours a day</a></li>
<li><a href="https://www.reuters.com/markets/us/blackrock-citadel-backed-group-start-new-national-stock-exchange-texas-wsj-2024-06-05/" target="_blank" rel="noopener noreferrer">Reuters: BlackRock, Citadel Securities-backed TXSE Group to launch Texas Stock Exchange</a></li>
</ul>]]></content:encoded>
            <category>kdb/q</category>
            <category>NYSE</category>
            <category>exchange</category>
            <category>trading hours</category>
            <category>bigdata</category>
            <category>volume</category>
        </item>
        <item>
            <title><![CDATA[DefconQ goes QuantStrats 2024]]></title>
            <link>https://DefconQ.github.io/blog/DefconQ goes QuantStrats 2024</link>
            <guid>https://DefconQ.github.io/blog/DefconQ goes QuantStrats 2024</guid>
            <pubDate>Mon, 14 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Quant Strats]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="Quant Strats" src="https://defconq.github.io/assets/images/QuantStrats-039b5cc6c25871bfe4ac6340dceafa65.png" width="1822" height="1358" class="img_ev3q"></p>
<p><strong>Disclaimer</strong>: This is not a sponsored or paid blog post. I attended Quant Strats purely out of my passion and interest in Quantitative Finance and related topics. I frequently participate in meet-ups, conferences, presentations, and workshops focused on finance, quantitative finance, technology, FinTech, and crypto, driven by curiosity and enthusiasm. After all, it’s the field I work in.</p>
<h1>Introduction</h1>
<p>Last week, I had the opportunity to attend <a href="https://www.alphaevents.com/events-quantstratsuk" target="_blank" rel="noopener noreferrer">QuantStrats 2024</a> in London, one of the most highly anticipated quantitative finance conferences of the year. After a successful debut in New York last year, QuantStrats made its first appearance in the heart of the City of London, one of the world’s most historic financial hubs. While I'm sure you're eager to hear about the discussions, this post won’t be a recap of the event. Instead, I’ll focus on what made QuantStrats such a standout conference and why you should consider attending in the future if you get the chance.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="content">Content<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#content" class="hash-link" aria-label="Direct link to Content" title="Direct link to Content">​</a></h2>
<p>QuantStrats featured an impressive variety of topics centered around quantitative finance, including alpha generation, risk management, portfolio optimization, and the application of generative AI in finance. A major focus of the conference was, unsurprisingly, data. With more data available today than ever before, discussions revolved around how to select, onboard, and extract maximum value from it, and how to make informed decisions based on that data. This led to presentations on AI, machine learning, NLP, and large language models (LLMs), exploring how these technologies can not only unlock value from data but also where and how they can add the most impact to an organization.</p>
<p>Given recent political and geopolitical developments—including two major ongoing wars and upcoming elections—another key theme was how to navigate the current macroeconomic landscape, protect assets, and continue generating alpha.</p>
<p>The third major topic of the conference was digital assets and crypto, focusing on how to leverage the digital assets space to diversify or hedge portfolios.</p>
<p>The presentations at QuantStrats were of the highest quality, thanks not only to the exceptional lineup of speakers—industry leaders from top-tier investment banks, hedge funds, asset managers, and research institutions—but also to the careful curation of content. This was overseen by a specially formed advisory board, which included some of the most prominent names in finance. Among them were <strong>Michael Steliaros</strong>, Global Head of Portfolio Engineering and Trading at ADIA; <strong>Professor Petter Kolm</strong> from NYU; <strong>Sameer Gupta</strong>, Head of Data Solutions at Point72; <strong>Matt Greenwood</strong>, CIO of Two Sigma; <strong>Anthony Ledford</strong>, Chief Scientist at Man AHL; <strong>Stefan Zohren</strong>, Deputy Director of the Oxford-Man Institute; <strong>Florian Ielpo</strong>, Head of Macro and Multi-Asset Portfolio Manager at Lombard Odier Investment; and <strong>Nicole Koenigstein</strong>, Chief Data Scientist and Head of AI &amp; Quantitative Research at Wyden Capital.</p>
<p>Moreover, the conference never felt like a sales pitch. The presentations and content were entirely professional and focused on practical insights. There was just one brief session, structured as a series of five-minute elevator pitches, where five companies introduced or showcased how their data offerings, platforms, software, or tools could provide a competitive edge in the market. But that was the extent of it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="speakers">Speakers<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#speakers" class="hash-link" aria-label="Direct link to Speakers" title="Direct link to Speakers">​</a></h2>
<p>The speaker lineup at QuantStrats was just as impressive as the content. With over 50 experts from leading institutions across the industry, the conference truly stood out. These professionals, with years—if not decades—of hands-on experience, covered a broad range of topics including Data and Data Sourcing, AI, ML, NLP, and LLMs, Portfolio and Risk Management, Alpha Generation and Portfolio Construction, Alternative Data and Investments, Crypto, and both Micro and Macro Economics. Together, they explored current trends, anticipated future developments, and addressed the most pressing challenges in the field.</p>
<p>The conference began with keynote speakers and panel discussions in the main room, while the afternoon sessions were split into different streams and tracks based on attendees’ interests. At times, the abundance of excellent speakers and presentations reminded me of being at one of the many electronic dance music (EDM) festivals I attend when I’m not blogging about KDB/Q—where you have to prioritize and choose between your favorite DJs and headliners due to overlapping set times. Similarly, at QuantStrats, I often faced tough decisions, having to pick one presentation over another. But that's certainly a good problem to have!</p>
<p>Some of the notable speakers included:</p>
<ul>
<li><strong>Michael Steliaros</strong>, Global Head of Portfolio Engineering and Trading, ADIA</li>
<li><strong>Laura Serban</strong>, Managing Director, AQR</li>
<li><strong>Alex Remorov</strong>, Director, Systematic Active Equities, BlackRock</li>
<li><strong>James Munro</strong>, Head of ArcticDB, Man Group</li>
<li><strong>Joe Hanmer</strong>, Global Head of Quant, Fidelity International</li>
<li><strong>Mark Fleming-Williams</strong>, Head of Data Sourcing, Capital Fund Management</li>
<li><strong>Kimiya Minoukadeh</strong>, Director - Head of eFX Quants, ING</li>
<li><strong>Hamza Bahaji</strong>, Head of Financial Engineering, Amundi Asset Management</li>
<li><strong>Amadeo Alentorn</strong>, Head of Systematic Equities, Jupiter Asset Management</li>
<li><strong>Justin Xu</strong>, Managing Director, Head of Risk, Millennium Global Investments</li>
<li><strong>Marc Vesecky</strong>, Senior Managing Director of Global Quantitative Strategies, Variation Fund Management</li>
<li><strong>Alessandro Balata</strong>, Fasanara Capital</li>
<li><strong>Barry Fitzgerald</strong>, Co-Head of Front Office Engineering, Man Group</li>
<li><strong>Prasad Shinde</strong>, Lead Specialist - UK, I &amp; MENA, KX ...and many more.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="attendees">Attendees<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#attendees" class="hash-link" aria-label="Direct link to Attendees" title="Direct link to Attendees">​</a></h2>
<p>The attendees at QuantStrats were equally impressive. With over 75% of the audience coming from both the buy-side and sell-side, the event truly lived up to its reputation and sparked fascinating discussions. It brought together participants from all corners of the industry, and the excitement and engagement in the buzzing rooms were tangible. It was a fantastic opportunity to connect with like-minded professionals in the quant space, exchanging ideas on the latest trends, challenges, and solutions in the field. Regardless of experience or seniority, everyone was friendly, open, and approachable. I even had an interesting conversation during the lunch break with Aric Whitewood, CEO of XAI Asset Management, and David Mascio, one of the speakers. Attendees represented some of the biggest names in the industry, including but not limited to firms like <strong>Winton, Goldman Sachs, ADIA, Marshall Wace, Aspect Capital, Two Sigma, BlackRock, Man Group, Citadel, BlueCrest, Point72, JPMorgan, Jupiter, Balyasny Asset Management, AQR, KX, and many more</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="organisation">Organisation<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#organisation" class="hash-link" aria-label="Direct link to Organisation" title="Direct link to Organisation">​</a></h2>
<p>Aside from the outstanding lineup of speakers and presentations, the second most impressive aspect of QuantStrats was its flawless organization. The entire day flowed seamlessly. From arrival and registration to coordination and setup, everything was executed perfectly. The venue was carefully chosen to comfortably accommodate nearly 300 attendees. Even during the morning keynote sessions and panel discussions in the main room, it never felt crowded—there was plenty of space for everyone. The stage was visible from all angles, and audio monitors and screens ensured that everyone could see and hear the presentations clearly. The smaller breakout rooms for the afternoon sessions were just as well-equipped as the main hall.</p>
<p>After the individual afternoon presentations, the conference wrapped up with four interactive roundtable discussions, which added a refreshing, engaging touch.</p>
<p>One standout feature of the event was the app provided for the conference. Not only did it include the floor plan, agenda, and a list of all speakers and attendees, but it also offered detailed attendee profiles. You could filter by name, company, or interest, and the app even matched your interests with those of other attendees, making it easy to find common ground. You could connect with others, schedule meetings, and communicate via in-app messaging. For privacy, this was fully customizable according to your preferences.</p>
<p>As a final bonus, the slides and presentation decks were made available in the app after the conference. Overall, the organization was truly top-notch. While I’ve attended well-organized events before, this one set a new benchmark, raising the bar for conference standards.</p>
<p>It wasn't all about work—there was plenty of time to socialize, network, and enjoy the refreshments available during the three breaks throughout the day. A one-hour lunch break, featuring a healthy meal, gave everyone the chance to recharge and approach the afternoon sessions with renewed energy. In the evening, a reception and networking drinks provided the perfect opportunity to wrap up the conference in a relaxed and engaging atmosphere.</p>
<p><img decoding="async" loading="lazy" alt="Quant Strats App Screen" src="https://defconq.github.io/assets/images/QuantStratsApp-d205f16e8e910551e75d63dea1ecb4b5.jpg" width="2880" height="2880" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cost-and-roi-return-on-investment">Cost and ROI (Return on Investment)<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#cost-and-roi-return-on-investment" class="hash-link" aria-label="Direct link to Cost and ROI (Return on Investment)" title="Direct link to Cost and ROI (Return on Investment)">​</a></h2>
<p>Now that we’ve covered all the great aspects of QuantStrats, let’s talk about the price. To my pleasant surprise, the cost was quite reasonable. There were two pricing tiers: one for the buy-side and one for the sell-side, each with four phases — <strong>Early Bird 1,Early Bird 2, Early Bird 3, and the Final Pricing phase</strong>. For the buy-side, the prices were <strong>£750, £850, £950, and £1,100</strong> for each phase, respectively. On the sell-side, the prices were <strong>£950, £1,050, £1,150, and £1,300</strong>. Additionally, groups of three or more received a 33% discount. Overall, I believe this was a very fair price for the value provided.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>In conclusion, QuantStrats 2024 was an exceptional event, bringing together top-tier industry leaders, cutting-edge topics, and outstanding organization. Whether you're looking to stay up-to-date on the latest trends in quantitative finance, learn from the best in the field, or simply network with like-minded professionals, this conference offered a wealth of opportunities. The breadth of topics—from AI and machine learning to risk management and digital assets—ensured there was something for everyone, while the interactive sessions and roundtable discussions fostered meaningful dialogue and idea exchange.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="extra-bonus-quant-strats-2025---new-york-edition">Extra Bonus: Quant Strats 2025 - New York Edition<a href="https://defconq.github.io/blog/DefconQ%20goes%20QuantStrats%202024#extra-bonus-quant-strats-2025---new-york-edition" class="hash-link" aria-label="Direct link to Extra Bonus: Quant Strats 2025 - New York Edition" title="Direct link to Extra Bonus: Quant Strats 2025 - New York Edition">​</a></h2>
<p>If you’re passionate about quantitative finance, QuantStrats is an event you shouldn’t miss. And here’s some exciting news: QuantStrats will be heading to <strong>New York in March 2025</strong>! If you’re in or near New York, I highly recommend attending. It's an invaluable opportunity to deepen your knowledge, expand your network, and be part of one of the most impactful events in the quant space.</p>
<p>You can register for the event here and take advantage of the Early Bird discount. <a href="https://tinyurl.com/993d5zyz" target="_blank" rel="noopener noreferrer">Quant Strats 2025 - New York Edition</a></p>]]></content:encoded>
            <category>kdb/q</category>
            <category>Blogger</category>
            <category>Quantitative Finance</category>
            <category>Quants</category>
            <category>Strats</category>
            <category>QuantStrats</category>
            <category>Conference</category>
            <category>Alpha</category>
            <category>Crypto</category>
            <category>Portfolio Management</category>
        </item>
        <item>
            <title><![CDATA[How to Successfully Prepare for an Interview and Land Your Dream Job]]></title>
            <link>https://DefconQ.github.io/blog/How to Successfully Prepare for an Interview and Land Your Dream Job</link>
            <guid>https://DefconQ.github.io/blog/How to Successfully Prepare for an Interview and Land Your Dream Job</guid>
            <pubDate>Mon, 23 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Throughout my career, I've had hundreds of interviews with investment banks, hedge funds, startups, and tech companies. Some were successful, others less so. I've also been on the other side of the table, interviewing candidates. Additionally, I've prepared several candidates for their interviews, all of whom successfully landed jobs. In this blog post, I want to share my tips on how to best prepare for an interview and boost your chances of landing your dream job.]]></description>
            <content:encoded><![CDATA[<p>Throughout my career, I've had hundreds of interviews with investment banks, hedge funds, startups, and tech companies. Some were successful, others less so. I've also been on the other side of the table, interviewing candidates. Additionally, I've prepared several candidates for their interviews, all of whom successfully landed jobs. In this blog post, I want to share my tips on how to best prepare for an interview and boost your chances of landing your dream job.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="before-the-interview">Before the Interview<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#before-the-interview" class="hash-link" aria-label="Direct link to Before the Interview" title="Direct link to Before the Interview">​</a></h2>
<p><img decoding="async" loading="lazy" alt="How to Successfully Prepare for an Interview and Land Your Dream Job" src="https://defconq.github.io/assets/images/success-5ab2bd2bf500d098971d9e32aacd3bdf.png" width="1024" height="1024" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="crafting-your-cv--your-ultimate-professional-business-card">Crafting Your CV – Your Ultimate Professional Business Card<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#crafting-your-cv--your-ultimate-professional-business-card" class="hash-link" aria-label="Direct link to Crafting Your CV – Your Ultimate Professional Business Card" title="Direct link to Crafting Your CV – Your Ultimate Professional Business Card">​</a></h3>
<p>To land a job interview, you first need to clear the initial hurdle: the CV review. Whether you apply directly or through a recruiter, your CV will be the first thing evaluated. To ensure you get past this stage and make it to the interview, here are a few tips to help you pass the CV review:</p>
<ol>
<li><strong>Short and Catchy</strong>: Just like writing efficient KDB/Q code, your CV should be terse. Keep it to one A4 page. No matter how many internships or roles you've had, only include the most relevant ones. Even senior developers manage to keep it to one page, and so can you.</li>
<li><strong>Tailored Like a Suit</strong>: Your CV should be like a good suit: <em>Tailored</em>. While having a general CV is fine when starting your job search, it's better to customize it for each role. Highlight relevant skills and achievements, aligning them with the job requirements. This will make your CV stand out and help recruiters see if you're a match for the position.</li>
</ol>
<p>Things <strong>NOT</strong> to do when writing your CV:</p>
<ol>
<li><strong>Don't Lie:</strong> This should go without saying, but never exaggerate or fabricate skills or experiences. You'll likely get caught during the interview, and even if you don't, it will eventually catch up with you.</li>
<li><strong>Avoid Unnecessary Details:</strong> Skip the headshot and your age. These details aren't necessary and can detract from your qualifications. Keep the focus on your skills and experience.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="preparation-the-key-to-a-successful-job-application">Preparation: the Key to a Successful Job Application<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#preparation-the-key-to-a-successful-job-application" class="hash-link" aria-label="Direct link to Preparation: the Key to a Successful Job Application" title="Direct link to Preparation: the Key to a Successful Job Application">​</a></h2>
<p>As the Japanese proverb goes, "Better to be a warrior in a garden than a gardener in a war." The same applies to job applications—you want to be as prepared as possible. Here are a few tips to help you get ready for success.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-role">The Role<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#the-role" class="hash-link" aria-label="Direct link to The Role" title="Direct link to The Role">​</a></h3>
<p>The best way to succeed in a job application is to gather as much information as possible about the role you're applying for. This not only ensures you're a good fit, but also helps you determine if the role aligns with your expectations and career goals. Start early by carefully reading the job description and asking the recruiter for more details before your first interview. This will help you prepare effectively. Once you're in the interview process, keep asking relevant questions to the hiring manager, interviewers, and potential team members. Remember, interviews are a two-way street. While the company is assessing your skills, you should also evaluate if the role and workplace are right for you.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="technical-preparation-master-the-art-of-showcasing-your-skill">Technical Preparation: Master the Art of Showcasing Your Skill<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#technical-preparation-master-the-art-of-showcasing-your-skill" class="hash-link" aria-label="Direct link to Technical Preparation: Master the Art of Showcasing Your Skill" title="Direct link to Technical Preparation: Master the Art of Showcasing Your Skill">​</a></h3>
<p>The key to landing your dream job is, of course, having the right skill set for the role. While you may already possess most or all of the required skills, it’s important to prepare and refresh your knowledge before the interview. Often in your current role, you focus on specific tasks and might not need the broader knowledge that an interview demands. During the interview process, you'll likely be questioned on a wide range of topics across multiple sessions, so it's crucial to review and sharpen your technical skills.</p>
<p>The depth of technical questioning typically depends on the level of the role. For junior to mid-level positions, interviews tend to focus on hands-on programming experience. For senior roles, however, you’ll need to demonstrate knowledge in architecture, software design, and building or extending applications. Ensuring you're comfortable with these topics will greatly enhance your chances of success.</p>
<p><strong>Pro tip</strong>: Be prepared for live coding. It’s a common practice to be asked to demonstrate your skills in real-time, so make sure you're ready for this aspect of the interview. Although preparing for KDB/Q live coding is a bit more challenging, many big FAANG tech companies often use <a href="https://leetcode.com/" target="_blank" rel="noopener noreferrer">LeetCode</a> for their coding challenges. If you're interviewing at one of these companies, I highly recommend practicing <a href="https://leetcode.com/" target="_blank" rel="noopener noreferrer">LeetCode</a> problems to sharpen your skills.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="emotional-quotient-eq-social-skills">Emotional Quotient (EQ): Social Skills<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#emotional-quotient-eq-social-skills" class="hash-link" aria-label="Direct link to Emotional Quotient (EQ): Social Skills" title="Direct link to Emotional Quotient (EQ): Social Skills">​</a></h3>
<p>While the technical aspect is the main focus of any software developer or engineering interview, your social skills and emotional intelligence (EQ) are equally important. After all, you'll be spending around eight hours a day at work, making it crucial for the hiring manager to find someone who fits well with the team culture and can collaborate effectively. Not everyone is an extrovert, and many of us prefer working independently, but emotional intelligence can be developed, at least to some degree. Here are a few tips to help you feel more comfortable and socially engaged:</p>
<ol>
<li>Attend (tech) meetups and interact with new people.</li>
<li>If you're into sports, join a club or any type of group activity.</li>
<li>Use your current job as a "practice field" for improving your social skills—go to team drink or organize activities with coworkers, and make an effort to socialize with colleagues outside your immediate team.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="effectice-strategies-to-boost-your-success-rate">Effectice strategies to boost your success rate<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#effectice-strategies-to-boost-your-success-rate" class="hash-link" aria-label="Direct link to Effectice strategies to boost your success rate" title="Direct link to Effectice strategies to boost your success rate">​</a></h2>
<p>Acing interviews is a skill in itself. I’ve met many talented software engineers who struggle under the pressure of an interview, while others, who may be less technical, have mastered the art of interviewing and excel in those situations. Fortunately for you, I’m sharing my top strategies to boost your chances of landing your dream job.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="practice-after-all-practice-makes-mastery">Practice! After all, practice makes mastery<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#practice-after-all-practice-makes-mastery" class="hash-link" aria-label="Direct link to Practice! After all, practice makes mastery" title="Direct link to Practice! After all, practice makes mastery">​</a></h3>
<p>Like any other skill, practice leads to mastery, and interviews are no exception. The more interviews you do, the better you’ll become over time. However, unlike other skills, interviews aren’t something you typically practice for. So how can you improve? Just like mock exams help with exam prep, you can create mock interview scenarios. Put yourself in the position of a hiring manager and think about what questions you’d ask a candidate. Then, try answering them yourself.</p>
<p>Of course, this is far less stressful than a real interview, so a better option is to ask a friend (most developers have developer friends) or an ex-colleague to give you a mock interview. You could also apply for roles you're not interested in, just to gain interview experience. However, take this advice with a pinch of salt. You don’t want to risk damaging your reputation by underperforming or turning down offers after a successful interview. For mainstream developer roles, practicing LeetCode challenges is another great way to sharpen your skills before the actual interview.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dont-put-all-your-eggs-into-one-basket">Don't put all your eggs into one basket<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#dont-put-all-your-eggs-into-one-basket" class="hash-link" aria-label="Direct link to Don't put all your eggs into one basket" title="Direct link to Don't put all your eggs into one basket">​</a></h3>
<p>If you've worked in finance, you're likely familiar with the concept of diversification. The same principle can be applied to your job search. To improve your chances of landing a role, apply for multiple positions. However, diversification has diminishing returns, so it’s wise to limit your applications to three to five at a time. This allows you to focus your time and energy on each application, boosting the likelihood of success.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-penny-for-your-thoughts---share-your-thought-process">A penny for your thoughts - Share your thought process<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#a-penny-for-your-thoughts---share-your-thought-process" class="hash-link" aria-label="Direct link to A penny for your thoughts - Share your thought process" title="Direct link to A penny for your thoughts - Share your thought process">​</a></h3>
<p>During technical interviews, it can be difficult for the interviewer to follow your thought process if you don’t explain it. Let me clarify: Imagine you've been asked to write a program to calculate the next Fibonacci number in a sequence. You take a moment, solve the problem, and give an answer - whether correct or not. Without explaining your reasoning, the interviewer has no insight into how you approached the problem, how you think, or where you may have gone wrong.</p>
<p>A much better approach is to "think out loud" and walk the interviewer through your solution. For example, if asked to write a function that returns the next number in a Fibonacci sequence, you could explain your thought process step-by-step:</p>
<p>“In a Fibonacci sequence, each number is the sum of the two preceding numbers. Given a list of numbers <code>x</code>, we need to take the last two elements using <code>-2#x</code>. Then, we sum them using the <code>sum</code> operator, and finally, append this result to the end of the list using the concatenate operator <code>,</code>. So, the solution is <code>{x,sum -2#x}</code>."</p>
<p>This approach not only demonstrates your problem-solving skills but also gives the interviewer a chance to guide you if you’re on the wrong track, especially with more complex questions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="situational-questions---shine-with-the-star-appraoch">Situational Questions - Shine with the S.T.A.R appraoch<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#situational-questions---shine-with-the-star-appraoch" class="hash-link" aria-label="Direct link to Situational Questions - Shine with the S.T.A.R appraoch" title="Direct link to Situational Questions - Shine with the S.T.A.R appraoch">​</a></h3>
<p>Every interview contains at least a couple of situational questions: questions about how you behave in certain situations and how you overcome certain problems you might face. Answering these kind of interview questions can sometimes be tricky, especially for a more technical minded person. One way how to approach these questions is to remember the S.T.A.R approach: Situation, Task, Action and Result. First describe the Situation you have been in, what was the context or environment around you like. Next, explain the Task you were given, then proceed to explaining the Actions you have taken and finally explain the Result you achieved. This approach gives you a clear guideline to structure and communicate your answer</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="beware-over-preparing-with-interview-questions-can-backfire">Beware: Over-Preparing with Interview Questions Can Backfire<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#beware-over-preparing-with-interview-questions-can-backfire" class="hash-link" aria-label="Direct link to Beware: Over-Preparing with Interview Questions Can Backfire" title="Direct link to Beware: Over-Preparing with Interview Questions Can Backfire">​</a></h3>
<p>While preparation is key and practice makes mastery, avoid over-relying on sample interview questions. Memorizing specific answers can be limiting. If you face a slightly different question, you might struggle to adapt. Instead, focus on deeply understanding the underlying concepts and how to apply them to various problems. This will give you the flexibility to tackle any question, even if it differs from what you’ve practiced.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="interview-donts---what-not-to-do">Interview Don'ts - What NOT to do<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#interview-donts---what-not-to-do" class="hash-link" aria-label="Direct link to Interview Don'ts - What NOT to do" title="Direct link to Interview Don'ts - What NOT to do">​</a></h2>
<p>Along with the strategies to boost your chances of landing a job, there are also a few things you should avoid doing.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dont-lie">Don't Lie<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#dont-lie" class="hash-link" aria-label="Direct link to Don't Lie" title="Direct link to Don't Lie">​</a></h3>
<p>Just like with your CV, I strongly believe you should never lie during a job interview—whether it’s about your past experiences, skills, certifications, or anything else. Eventually, the truth will catch up, and it could severely damage your reputation, marking you as untrustworthy.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="be-honest-dont-fabricate-answers--no-one-knows-it-all">Be Honest: Don't Fabricate Answers – No One Knows it All<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#be-honest-dont-fabricate-answers--no-one-knows-it-all" class="hash-link" aria-label="Direct link to Be Honest: Don't Fabricate Answers – No One Knows it All" title="Direct link to Be Honest: Don't Fabricate Answers – No One Knows it All">​</a></h3>
<p>There may come a time during an interview when you're unsure of the answer to a question. I've been in these situations myself, and I prefer to admit that I don’t know or am unsure, rather than guessing or, worse, fabricating an answer. Admitting you don’t know shows honesty and integrity. As someone who’s interviewed candidates, I’d much rather see someone admit they’re unsure than catch them in a fabricated answer, which is a major red flag and usually leads to a "no hire." Here's a tip: there’s a better way to admit uncertainty. Instead of just saying “I don’t know,” explain how you would approach finding the answer or where you would look. This can make a big difference.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="after-the-interview-what-to-do-next">&nbsp;After the Interview: What to Do Next<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#after-the-interview-what-to-do-next" class="hash-link" aria-label="Direct link to &nbsp;After the Interview: What to Do Next" title="Direct link to &nbsp;After the Interview: What to Do Next">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="patience">Patience<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#patience" class="hash-link" aria-label="Direct link to Patience" title="Direct link to Patience">​</a></h3>
<p>Once your interview is over, there's not much you can do except be patient and wait for feedback. I know it’s easier said than done, and I’m not the most patient person myself, but since you're likely not the only candidate, it may take the hiring manager a few days to respond. Just remember, until you hear otherwise, you're still in the game.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="keep-preparing-stay-ahead-of-the-game">Keep Preparing: Stay Ahead of the Game<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#keep-preparing-stay-ahead-of-the-game" class="hash-link" aria-label="Direct link to Keep Preparing: Stay Ahead of the Game" title="Direct link to Keep Preparing: Stay Ahead of the Game">​</a></h3>
<p>Most roles you'll apply for will involve multiple rounds of interviews, so it's unlikely you'll only have one. After your first interview, continue preparing for the next round. Reflect on how it went: What questions were asked? What did you do well? Where could you improve? This self-review will help you gear up for future interviews, as it’s rare to face the same questions again. If you were unsure about certain topics, revisit them so you're more confident for the next round.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="turning-setbacks-into-success-what-to-do-if-the-interview-didnt-go-your-way">Turning Setbacks into Success: What to Do if the Interview Didn’t Go Your Way<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#turning-setbacks-into-success-what-to-do-if-the-interview-didnt-go-your-way" class="hash-link" aria-label="Direct link to Turning Setbacks into Success: What to Do if the Interview Didn’t Go Your Way" title="Direct link to Turning Setbacks into Success: What to Do if the Interview Didn’t Go Your Way">​</a></h3>
<p>Sometimes, we have to face setbacks, and not receiving the job offer you wanted can be frustrating. However, you have two options: 1. Stay upset and do nothing, or 2. Take a moment to process the disappointment, then reflect on how to improve for the next opportunity. Remember, it might not always be about you; sometimes a more suitable candidate simply comes along. Ask the hiring manager or recruiter for feedback on your performance and areas to improve. There’s always a chance the company will have future openings, and you can reapply with the lessons you’ve learned.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="happily-ever-after-when-your-interview-was-successful">Happily Ever After: When Your Interview was Successful<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#happily-ever-after-when-your-interview-was-successful" class="hash-link" aria-label="Direct link to Happily Ever After: When Your Interview was Successful" title="Direct link to Happily Ever After: When Your Interview was Successful">​</a></h3>
<p>Congratulations! You've done it! Your hard work paid off, and you've received a job offer. Take a moment to celebrate and be proud of your achievement. Now it's time to handle the formalities of accepting the offer and preparing for your new role. Well done!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-tip">Bonus Tip<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#bonus-tip" class="hash-link" aria-label="Direct link to Bonus Tip" title="Direct link to Bonus Tip">​</a></h2>
<p>Always keep in mind that an interview is a two-way process. While the company is evaluating whether you're the right fit and if your skill set aligns with their needs, you should also assess if the role is truly what you're looking for. Consider whether the hiring manager or technical lead is someone you'd enjoy working with and if the team has a positive culture where you can grow, learn, and develop. Remember, taking on a new role is a commitment, and ideally, you'll want to stay in that position for at least a few years before considering your next move.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="top-resources-to-ace-your-next-interview">Top Resources to Ace your Next Interview<a href="https://defconq.github.io/blog/How%20to%20Successfully%20Prepare%20for%20an%20Interview%20and%20Land%20Your%20Dream%20Job#top-resources-to-ace-your-next-interview" class="hash-link" aria-label="Direct link to Top Resources to Ace your Next Interview" title="Direct link to Top Resources to Ace your Next Interview">​</a></h2>
<ul>
<li><a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">Go-To KDB/Q Learning Resources</a></li>
<li><a href="https://www.defconq.tech/blog/Advanced%20KDB/Q%20Learning%20Material" target="_blank" rel="noopener noreferrer">Advanced KDB/Q Learning Material</a></li>
<li><a href="https://www.defconq.tech/docs/architecture/plain" target="_blank" rel="noopener noreferrer">The Plain Vanilla Tick Setup</a></li>
<li><a href="https://www.defconq.tech/docs/category/important-concepts" target="_blank" rel="noopener noreferrer">DefconQ Important KDB/Q Concepts</a></li>
<li><a href="https://www.defconq.tech/docs/category/tutorials" target="_blank" rel="noopener noreferrer">DefconQ Tickerplant Walkthrough</a></li>
</ul>]]></content:encoded>
            <category>kdb/q</category>
            <category>Interview</category>
            <category>Interview Prep</category>
            <category>Dream Job</category>
            <category>Tips&amp;Tricks</category>
            <category>Leetcode</category>
            <category>FAANG</category>
            <category>Software development</category>
            <category>Success</category>
        </item>
        <item>
            <title><![CDATA[Happy Birthday DefconQ]]></title>
            <link>https://DefconQ.github.io/blog/Happy Birthday DefconQ</link>
            <guid>https://DefconQ.github.io/blog/Happy Birthday DefconQ</guid>
            <pubDate>Wed, 04 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[One year ago, on my birthday, I launched DefconQ — a KDB/Q-focused blog aimed at helping developers and KDB/Q newcomers enhance their skills or get started with the language. What began as a small personal project to motivate myself to deepen my KDB/Q knowledge quickly evolved into a valuable resource for the KDB community. I never anticipated the level of popularity, feedback, and support the blog would receive. As DefconQ celebrates its first anniversary today, I want to share some key milestones and extend my gratitude to everyone who has supported DefconQ in any way — whether by reading the posts, liking or sharing the content, providing me with a platform to share my knowledge, or supporting the project in other ways. Read on to discover the milestones DefconQ has achieved and what's in store for the future.]]></description>
            <content:encoded><![CDATA[<p>One year ago, on my birthday, I launched <strong>DefconQ</strong> — a KDB/Q-focused blog aimed at helping developers and KDB/Q newcomers enhance their skills or get started with the language. What began as a small personal project to motivate myself to deepen my KDB/Q knowledge quickly evolved into a valuable resource for the KDB community. I never anticipated the level of popularity, feedback, and support the blog would receive. As DefconQ celebrates its first anniversary today, I want to share some key milestones and extend my gratitude to everyone who has supported <strong>DefconQ</strong> in any way — whether by reading the posts, liking or sharing the content, providing me with a platform to share my knowledge, or supporting the project in other ways. Read on to discover the milestones DefconQ has achieved and what's in store for the future.</p>
<p><img decoding="async" loading="lazy" alt="Happy Birthday Alexander Unterrainer DefconQ" src="https://defconq.github.io/assets/images/happyBirthday-9f8d183c900576630fb77c6f4d99433b.jpg" width="1440" height="1440" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="defconqs-year-in-review">DefconQ's Year in Review<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#defconqs-year-in-review" class="hash-link" aria-label="Direct link to DefconQ's Year in Review" title="Direct link to DefconQ's Year in Review">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#tldr" class="hash-link" aria-label="Direct link to TL;DR" title="Direct link to TL;DR">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)show TLDR:(`$("Posts";"Reach";"Followers";"Meetups &amp; Conferences";"Livestreams &amp; Podcasts";"Collaborations";"Awards"))!26 197306 434 3 3 1 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Posts                 | 26</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Reach                 | 197306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Followers             | 434</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Meetups &amp; Conferences | 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Livestreams &amp; Podcasts| 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Collaborations        | 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Awards                | 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="blog-posts">Blog Posts<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#blog-posts" class="hash-link" aria-label="Direct link to Blog Posts" title="Direct link to Blog Posts">​</a></h3>
<p>Let's begin with the metric that is personally the most significant for me: the number of blog posts published. Over the past year, I've shared <strong>26</strong> pieces of content (including this one) on my blog, ranging from blog posts to learning materials. While some pieces took more time to create than others, I've maintained an average of publishing new content every two weeks. For me, this consistency is a significant achievement. While some posts were less technical than others, I believe that most of them added value in one way or another. This is reflected in the website traffic, as shown in the Google Analytics report below.</p>
<p><img decoding="async" loading="lazy" alt="DefconQ Google Analytics Page Views" src="https://defconq.github.io/assets/images/pageViews-e811982f6e2502d589ff0fd8ec9b7f94.png" width="1905" height="652" class="img_ev3q">
<img decoding="async" loading="lazy" alt="DefconQ Google Analytics Page Views Breakdown" src="https://defconq.github.io/assets/images/breakdown-8d8e2dceeadf76c043423ba66a4df0f9.png" width="1277" height="555" class="img_ev3q"></p>
<p>As the breakdown shows, DefconQ received over <strong>30,000 views</strong> from <strong>5,223 visitors</strong> in the past year. The most popular posts were <a href="https://www.defconq.tech/docs/architecture/plain" target="_blank" rel="noopener noreferrer">The Plain Vanilla Tick Setup</a>, <a href="https://www.defconq.tech/docs/tutorials/tick" target="_blank" rel="noopener noreferrer">KDB Tick Explained: A Walkthrough</a>, and <a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">Go-To KDB/Q Learning Resources</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="reach">Reach<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#reach" class="hash-link" aria-label="Direct link to Reach" title="Direct link to Reach">​</a></h3>
<p>A closely related metric I was particularly interested in is the actual reach of <strong>DefconQ</strong>. Since most updates are posted from my personal <a href="https://www.linkedin.com/in/alexanderunterrainer/" target="_blank" rel="noopener noreferrer">Linkedin</a> account, DefconQ's standalone reach doesn't fully capture the overall impact. Therefore, I've included both my personal reach and DefconQ's reach in this analysis. We already know that the DefconQ blog attracted over <strong>5,000</strong> visitors last year. Now, let's take a closer look at the demographics of these visitors.</p>
<p><img decoding="async" loading="lazy" alt="DefconQ Google Analytics Users by Country" src="https://defconq.github.io/assets/images/UserByCountry-4fdf4ecf38b5452b75e9008e1860aed7.png" width="948" height="402" class="img_ev3q">
<img decoding="async" loading="lazy" alt="DefconQ Google Analytics Users by City" src="https://defconq.github.io/assets/images/UserByCity-b03582cc7f758d5af47dd0780904bb1e.png" width="547" height="403" class="img_ev3q"></p>
<p>It's no surprise that the United Kingdom and the United States are the predominant countries, with London and New York being the cities with the most users. However, what comes as a surprise is the fact that even smaller countries or countries where KDB/Q is traditionally not present showed interest in DefconQ. Such countries include Brazil, Argentina, Colombia, Chile,Indonesia, South Africa, Nigeria, Ghana, Norway, Sweden, Finland or China, among others.</p>
<p><img decoding="async" loading="lazy" alt="Alexander Unterrainer Linkedin Impressions" src="https://defconq.github.io/assets/images/impressions-3b5ccb650f2e1cf7737fcac18ef48f4d.png" width="814" height="595" class="img_ev3q"></p>
<p>Although my LinkedIn account generated nearly 200k impressions over the past year, with top-performing posts averaging around 6-7k impressions each, I’m not a huge fan of this metric because it doesn’t necessarily indicate engagement. LinkedIn defines impressions as the number of times a post is visible for at least 300 milliseconds, with at least 50 percent of the post in view on a signed-in member’s device or browser window (<a href="https://www.linkedin.com/help/lms/answer/a564051/content-analytics-for-your-linkedin" target="_blank" rel="noopener noreferrer">Source: LinkedIn</a>). However, considering that roughly 10,000 people list KDB/Q as one of their skills on LinkedIn, it’s quite impressive that my posts reach about two-thirds of them.</p>
<p><img decoding="async" loading="lazy" alt="Alexander Unterrainer Linkedin Impressions Top Posts" src="https://defconq.github.io/assets/images/topPosts-931fed54ba23d95dc9a6a30522cda039.png" width="784" height="957" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="followers">Followers<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#followers" class="hash-link" aria-label="Direct link to Followers" title="Direct link to Followers">​</a></h3>
<p>Over the past year, <strong>DefconQ</strong> gained <strong>434</strong> followers on LinkedIn—a modest number, likely due to the fact that I primarily share updates from my personal account rather than the <a href="https://www.linkedin.com/company/defconq/" target="_blank" rel="noopener noreferrer">DefconQ</a> page. Since most of my KDB/Q network is connected to my personal profile, it made sense to post updates there to reach a broader audience. However, if you're reading this and don't yet follow <a href="https://www.linkedin.com/company/defconq/" target="_blank" rel="noopener noreferrer">DefconQ</a> on LinkedIn, I encourage you to head over and give it a follow <a href="https://www.linkedin.com/company/defconq/" target="_blank" rel="noopener noreferrer">here</a>!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="meetup-and-conferences">Meetup and Conferences<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#meetup-and-conferences" class="hash-link" aria-label="Direct link to Meetup and Conferences" title="Direct link to Meetup and Conferences">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="everything-everywhere-all-with-kdbq-by-habla-computing">Everything, Everywhere, All with KDB/Q by <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a><a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#everything-everywhere-all-with-kdbq-by-habla-computing" class="hash-link" aria-label="Direct link to everything-everywhere-all-with-kdbq-by-habla-computing" title="Direct link to everything-everywhere-all-with-kdbq-by-habla-computing">​</a></h4>
<p>After attending a KDB/Q Meetup in Madrid this past January, where I had the pleasure of meeting <a href="https://www.linkedin.com/in/jserranohidalgo/" target="_blank" rel="noopener noreferrer">Juan</a> and <a href="https://www.linkedin.com/in/jes%C3%BAs-l%C3%B3pez-gonz%C3%A1lez-98237248/" target="_blank" rel="noopener noreferrer">Jesus</a> from <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a>, I was invited to present at their upcoming inaugural KDB/Q Meetup titled "Everything, Everywhere, All with KDB/Q," a series designed to promote KDB/Q in Spain. This was my first public speaking engagement as a KDB/Q professional, and it was a great success. I had the honor of presenting alongside renowned peers like <a href="https://www.linkedin.com/in/kellyr13/" target="_blank" rel="noopener noreferrer">Rebecca Kelly</a> and <a href="https://www.linkedin.com/in/aoife-clarke-638188136/" target="_blank" rel="noopener noreferrer">Aoife Clarke</a> from <a href="https://www.inqdata.ai/" target="_blank" rel="noopener noreferrer">INQDATA</a>,  as well as my colleague <a href="https://www.linkedin.com/in/zan-buchanan-33b5a8148/" target="_blank" rel="noopener noreferrer">Zan Buchanan</a> from <a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a>. My presentation, <a href="https://www.defconq.tech/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code" target="_blank" rel="noopener noreferrer">How to Read, Understand, and Learn KDB/Q code</a> was well-received by the audience. For those who couldn't attend the meetup, the recording is available for review <a href="https://www.defconq.tech/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="kx-meetup-in-london">KX Meetup in London<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#kx-meetup-in-london" class="hash-link" aria-label="Direct link to KX Meetup in London" title="Direct link to KX Meetup in London">​</a></h4>
<p>After my first public appearance in Madrid, I was honored to be invited by <a href="https://kx.com/" target="_blank" rel="noopener noreferrer">KX</a> to participate in a panel discussion at the KX Meetup in London. Joining Andrew Wilson and <a href="https://www.linkedin.com/in/conor-mccarthy-08aa25a7/" target="_blank" rel="noopener noreferrer">Conor McCarthy</a> — two highly experienced KDB/Q developers working on key components of the KX ecosystem—on a panel moderated by <a href="https://www.linkedin.com/in/michaela-woods-50502b60/" target="_blank" rel="noopener noreferrer">Michaela Woods</a> was an incredible experience. We discussed the latest advancements in <a href="https://code.kx.com/pykx/2.5/" target="_blank" rel="noopener noreferrer">PyKX</a>, the updates introduced in KDB/Q version 4.1, and the growth and future of the KDB/Q community.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="iverson-college-2024">Iverson College 2024<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#iverson-college-2024" class="hash-link" aria-label="Direct link to Iverson College 2024" title="Direct link to Iverson College 2024">​</a></h4>
<p>After a six-year break, <a href="https://iversoncollege.com/" target="_blank" rel="noopener noreferrer">Iverson College</a>, organized by the well-known <a href="https://www.linkedin.com/in/stephen-taylor-b5ba78/" target="_blank" rel="noopener noreferrer">Stephen Taylor</a>, made its return to Trinity Hall in Cambridge this summer. Iverson College is a residential event for array programming enthusiasts to explore and discuss topics related to vector programming languages. This year’s conference featured an incredibly impressive lineup of <a href="https://iversoncollege.com/participants/" target="_blank" rel="noopener noreferrer">participants</a>, including both language implementers and developers. The wealth of experience, knowledge, and expertise present made this a truly unique experience for me and one of the standout highlights of this year's KDB/Q events.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="livestreams-and-podcasts">Livestreams and Podcasts<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#livestreams-and-podcasts" class="hash-link" aria-label="Direct link to Livestreams and Podcasts" title="Direct link to Livestreams and Podcasts">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="mastering-kbdq-architecture-defconq-meets-kx">Mastering KBD/Q Architecture: DefconQ meets KX<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#mastering-kbdq-architecture-defconq-meets-kx" class="hash-link" aria-label="Direct link to Mastering KBD/Q Architecture: DefconQ meets KX" title="Direct link to Mastering KBD/Q Architecture: DefconQ meets KX">​</a></h4>
<p><a href="https://kx.com/" target="_blank" rel="noopener noreferrer">KX</a>, along with the KXperts team led by <a href="https://www.linkedin.com/in/michaela-woods-50502b60/" target="_blank" rel="noopener noreferrer">Michaela Woods</a>, has begun hosting livestreams as part of the revamp of their KX Academy. For their second episode, I had the pleasure of joining Michaela and <a href="https://www.linkedin.com/in/cynthiafaus/" target="_blank" rel="noopener noreferrer">Cynthia Faus Viadé</a> to discuss KDB/Q Architecture. I believe this is a fantastic initiative to spread KDB/Q knowledge and connect with a broader audience, as the livestreams are accessible from anywhere in the world. If you missed the livestream, no worries! I've written a detailed summary <a href="https://www.defconq.tech/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion" target="_blank" rel="noopener noreferrer">here</a>, which also includes the recording of the discussion.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="defconq-meets-fancy-quant">DefconQ meets Fancy Quant<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#defconq-meets-fancy-quant" class="hash-link" aria-label="Direct link to DefconQ meets Fancy Quant" title="Direct link to DefconQ meets Fancy Quant">​</a></h4>
<p>Another new milestone for DefconQ was joining the seasoned podcaster and YouTuber <a href="https://www.linkedin.com/in/dimitri-bianco/" target="_blank" rel="noopener noreferrer">Dimitri Bianco</a> on his <a href="https://www.youtube.com/@DimitriBianco" target="_blank" rel="noopener noreferrer">Fancy Quant - Talking Tuesday</a> podcast. Dimitri and I had an in-depth conversation about all things KDB/Q and Quant finance. We discussed why KDB/Q is so prevalent in the financial industry and what makes it an excellent choice for building applications. We also covered how to kickstart a career in Quant Finance, which degrees and universities are relevant, how to advance in your career, and even debated the pros and cons of living in a big city versus a more remote location. Dimitri is a fantastic host, and I thoroughly enjoyed our conversation. The podcast touches on a broad range of topics, not just KDB/Q. If you're interested in Quantitative Finance or KDB/Q, this episode is a must-listen. Don't forget to follow <a href="https://www.linkedin.com/in/dimitri-bianco/" target="_blank" rel="noopener noreferrer">Dimitri</a> and <a href="https://www.linkedin.com/in/alexanderunterrainer/" target="_blank" rel="noopener noreferrer">me</a> for more insights!</p>
<p><a href="https://www.defconq.tech/blog/DefconQ%20meets%20Fancy%20Quant%20-%20Alexander%20Unterrainer%20and%20Dimitri%20Bianco%20discuss%20KDB/Q" target="_blank" rel="noopener noreferrer">DefconQ meets Fancy Quant - podcast</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="arraycast">ArrayCast<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#arraycast" class="hash-link" aria-label="Direct link to ArrayCast" title="Direct link to ArrayCast">​</a></h4>
<p>The stellar lineup at <a href="https://iversoncollege.com/" target="_blank" rel="noopener noreferrer">Iverson College 2024</a>, which included <a href="https://www.arraycast.com/" target="_blank" rel="noopener noreferrer">ArrayCast</a> host <a href="https://www.linkedin.com/in/conorhoekstra/" target="_blank" rel="noopener noreferrer">Conor Hoekstra</a> and nearly all the regular panelists - <a href="https://www.linkedin.com/in/stephen-taylor-b5ba78/" target="_blank" rel="noopener noreferrer">Stephen Taylor</a>, <a href="https://www.linkedin.com/in/abrudz/" target="_blank" rel="noopener noreferrer">Adám Brudzewsky</a> and Bob Therriault - made it the perfect setting to record an episode of ArrayCast in the historic halls of Trinity College, Cambridge. This also gave me the exciting opportunity to make my debut on the ArrayCast podcast as one of the many participants in this special episode. You can listen to the full episode <a href="https://www.arraycast.com/episodes/episode87-iversonsession" target="_blank" rel="noopener noreferrer">here</a> If you're interested in Array Programming Languages, <a href="https://www.arraycast.com/" target="_blank" rel="noopener noreferrer">ArrayCast</a> is <strong>THE</strong> podcast to follow, so be sure to check it out!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="collaborations">Collaborations<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#collaborations" class="hash-link" aria-label="Direct link to Collaborations" title="Direct link to Collaborations">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="q201">Q201<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#q201" class="hash-link" aria-label="Direct link to Q201" title="Direct link to Q201">​</a></h4>
<p>At the start of this year, I received a somewhat unexpected email from <a href="https://www.linkedin.com/in/stephen-taylor-b5ba78/" target="_blank" rel="noopener noreferrer">Stephen Taylor</a> - an APL and KDB/Q enthusiast and the former librarian of the official KX documentation, a developer who hardly needs an introduction in the KDB/Q community. Stephen shared details about his latest project, <a href="https://q201.org/" target="_blank" rel="noopener noreferrer">Q201</a>, an initiative aimed at teaching and explaining KDB/Q at a deep technical and language level. He was also looking to engage more with the KDB/Q community by hosting online workshops and tutoring sessions for interested students. After discovering my blog, Stephen invited me to contribute to his project—a request I was honored to accept. How could I possibly turn down such an esteemed invitation? Since then, I’ve been assisting Stephen with reviewing the content of Q201, providing feedback on areas that might need more detail, and helping to host and coordinate several online workshops with different students. I really enjoy working on this project because it offers a different approach from mine and deepens my understanding of KDB/Q. I highly recommend Q201 to anyone interested in KDB/Q.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="certificates-and-awards">Certificates and Awards<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#certificates-and-awards" class="hash-link" aria-label="Direct link to Certificates and Awards" title="Direct link to Certificates and Awards">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="kxperts">KXperts<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#kxperts" class="hash-link" aria-label="Direct link to KXperts" title="Direct link to KXperts">​</a></h4>
<p>One of my proudest moments this year was being recognized by KX as the first KDB/Q developer to receive the "Black Tier," the highest level in their KXpert Advocacy Program, for my work with DefconQ. This award is not only a significant honor but also the ultimate validation hat the content I create is making a valuable impact on the KDB/Q Community. If you're interested in learning more about the KXpert Advocacy Program and how to get involved, you can read about it in my blog post <a href="https://www.defconq.tech/blog/KXperts%20-%20A%20Developer%20Advocacy%20Program%20by%20KX" target="_blank" rel="noopener noreferrer">here</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="readers-feedback">Reader's Feedback<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#readers-feedback" class="hash-link" aria-label="Direct link to Reader's Feedback" title="Direct link to Reader's Feedback">​</a></h3>
<p>The most rewarding achievement, however, is the overwhelmingly positive feedback I receive from my blog readers. It's incredibly fulfilling when a stranger reaches out to thank me for the content I share, expressing how my blog posts have been helpful or inspirational. That kind of feedback is truly amazing and one of my biggest motivations to continue doing what I do. Here are a few highlights of the feedback I've received over the past year.</p>
<p><img decoding="async" loading="lazy" alt="Alexander Unterrainer DefconQ Recognitions" src="https://defconq.github.io/assets/images/recognition-284050e2972a2fd27a6e4d3c2c9852f8.png" width="1333" height="2000" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-the-future-holds">What the Future holds<a href="https://defconq.github.io/blog/Happy%20Birthday%20DefconQ#what-the-future-holds" class="hash-link" aria-label="Direct link to What the Future holds" title="Direct link to What the Future holds">​</a></h2>
<p>After reflecting on the milestones DefconQ has achieved over the past year, I'd like to take this final section to look ahead at what's in store for the future. Obviously, I'll continue to post content in the form of blog posts, technical articles, podcasts, and livestreams. I also plan to keep participating in conferences and meet-ups. However, there are some new initiatives on the horizon, including in-person events for my blog readers, KDB/Q developers, and aspiring KDB/Q professionals. While I can't reveal all the exciting projects just yet, I can share that I'll be hosting an Ask Me Anything (AMA) session soon. In this AMA, I'll answer all your questions about KBD/Q—how to learn it, advance your career, break into the KDB/Q world, or anything else you'd like to know. Stay tuned, keep following my blog, and if you haven't already, be sure to follow <a href="https://www.linkedin.com/company/defconq/" target="_blank" rel="noopener noreferrer">DefconQ</a> and <a href="https://www.linkedin.com/in/alexanderunterrainer/" target="_blank" rel="noopener noreferrer">me</a>!</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>Blogger</category>
            <category>Happy Birthday</category>
            <category>1 Year</category>
            <category>Milestone</category>
            <category>Year in Review</category>
            <category>Community</category>
            <category>Future</category>
        </item>
        <item>
            <title><![CDATA[KXperts - A Developer Advocacy Program by KX]]></title>
            <link>https://DefconQ.github.io/blog/KXperts - A Developer Advocacy Program by KX</link>
            <guid>https://DefconQ.github.io/blog/KXperts - A Developer Advocacy Program by KX</guid>
            <pubDate>Wed, 14 Aug 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[A little over a year ago, KX introduced the KXperts a team of KX developers with deep passion and expertise in KDB/Q and vector databases. Their main goal is to help developers become more proficient with KX technologies, such as KDB/Q, KDB.AI, KDB Insights, PyKX and more. The team currently consists of Michaela Woods, Michael Ryaboy, Ryan Siegler, Laura Kerr, and Megan McParland, and I've had the pleasure of meeting and collaborating with most of them. The KXperts have produced a series of videos, technical blogs, tutorials, and online courses for the KX Academy, and they host live streams and meetups, all aimed at building a robust KX community.]]></description>
            <content:encoded><![CDATA[<p>A little over a year ago, <a href="https://www.kx.com/" target="_blank" rel="noopener noreferrer">KX</a> introduced the <a href="https://www.kx.com/kxperts/" target="_blank" rel="noopener noreferrer">KXperts</a> a team of KX developers with deep passion and expertise in KDB/Q and vector databases. Their main goal is to help developers become more proficient with KX technologies, such as <a href="https://code.kx.com/q/" target="_blank" rel="noopener noreferrer">KDB/Q</a>, <a href="https://kdb.ai/" target="_blank" rel="noopener noreferrer">KDB.AI</a>, <a href="https://code.kx.com/insights/1.10/microservices/index.html" target="_blank" rel="noopener noreferrer">KDB Insights</a>, <a href="https://code.kx.com/pykx/2.5/" target="_blank" rel="noopener noreferrer">PyKX</a> and more. The team currently consists of <a href="https://www.linkedin.com/in/michaela-woods-50502b60/" target="_blank" rel="noopener noreferrer">Michaela Woods</a>, <a href="https://www.linkedin.com/in/michael-ryaboy-software-engineer/" target="_blank" rel="noopener noreferrer">Michael Ryaboy</a>, <a href="https://www.linkedin.com/in/ryan-siegler-816207102/" target="_blank" rel="noopener noreferrer">Ryan Siegler</a>, <a href="https://www.linkedin.com/in/laura-kerr-59046069/" target="_blank" rel="noopener noreferrer">Laura Kerr</a>, and <a href="https://www.linkedin.com/in/megan-mcparland-4605b9180/" target="_blank" rel="noopener noreferrer">Megan McParland</a>, and I've had the pleasure of meeting and collaborating with most of them. The KXperts have produced a series of videos, technical blogs, tutorials, and online courses for the <a href="https://learninghub.kx.com/" target="_blank" rel="noopener noreferrer">KX Academy</a>, and they host live streams and meetups, all aimed at building a robust KX community.</p>
<p>At the KX London Meetup in May 2024, KX introduced the KXperts Developer Advocacy Program, opening the KXperts team to external developers who share a passion for KDB/Q and vector databases. The main goal of this program is to encourage, support, and collaborate with developers who are enthusiastic about the KX technology suite. Due to my contributions to the KX community through <a href="https://www.defconq.tech/" target="_blank" rel="noopener noreferrer">DefconQ</a> as well as my engagement on <a href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">Stackoverflow</a> and the <a href="https://learninghub.kx.com/forums/" target="_blank" rel="noopener noreferrer">KX Discussion Forum</a>, I have been awarded the black tier of the KXpert Developer Advocacy Program. This recognition is a significant achievement for me, and I am incredibly honored to be the first developer admitted to the program. For those interested in joining but unsure of the process, benefits, or requirements, I have prepared the following summary with all the information you need.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kxpert-tiers">KXpert Tiers<a href="https://defconq.github.io/blog/KXperts%20-%20A%20Developer%20Advocacy%20Program%20by%20KX#kxpert-tiers" class="hash-link" aria-label="Direct link to KXpert Tiers" title="Direct link to KXpert Tiers">​</a></h3>
<p>The KXperts Developer Advocacy Program consists of three different tiers, silver, gold and black, with black being the highest tier among them. Each tier has specific entry requirements and offers different benefits. Below, I have outlined how each tier is defined, the entry requirements and benefits for each tier.</p>
<table><thead><tr><th style="text-align:center">Silver Tier</th><th style="text-align:center">Gold Tier</th><th style="text-align:center">Black Tier</th></tr></thead><tbody><tr><td style="text-align:center"><img decoding="async" loading="lazy" alt="KXperts Silver Tier" src="https://defconq.github.io/assets/images/silverBadge-7a80286471f82099005ca35a176b8983.png" width="542" height="525" class="img_ev3q"></td><td style="text-align:center"><img decoding="async" loading="lazy" alt="KXperts Gold Tier" src="https://defconq.github.io/assets/images/goldBadge-6850fe327b84fcc3d36d704a8fc64242.png" width="524" height="517" class="img_ev3q"></td><td style="text-align:center"><img decoding="async" loading="lazy" alt="KXperts Gold Tier" src="https://defconq.github.io/assets/images/blackBadge-dc600ce667a069e075105bb3b49d25fe.png" width="746" height="722" class="img_ev3q"></td></tr></tbody></table>
<p><img decoding="async" loading="lazy" alt="KXperts Developer Advocacy Program Tiers" src="https://defconq.github.io/assets/images/tiers-be19b8e9e46029eb04ac40092e98d42b.png" width="2794" height="1378" class="img_ev3q">
<img decoding="async" loading="lazy" alt="Entry requirement for KXperts tiers" src="https://defconq.github.io/assets/images/requirements-054565a3af75aa793203e76969f868c0.png" width="2788" height="1326" class="img_ev3q">
<img decoding="async" loading="lazy" alt="Perks of KXperts" src="https://defconq.github.io/assets/images/perks-08ab78398a56062457f4bf4f6ef28f32.png" width="2782" height="1348" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-to-apply">How to apply<a href="https://defconq.github.io/blog/KXperts%20-%20A%20Developer%20Advocacy%20Program%20by%20KX#how-to-apply" class="hash-link" aria-label="Direct link to How to apply" title="Direct link to How to apply">​</a></h3>
<p>Applying to the KXperts Developer Advocacy Program is straightforward and simple. Just fill out the form <a href="https://forms.office.com/pages/responsepage.aspx?id=MmAAi833TkCPb0cZ8EFBe5SmUGAYdqNBgRUb7Zmk5fZURUhNMUpQTUEzWlZGV04zRTlMQUpHU1FKMSQlQCN0PWcu" target="_blank" rel="noopener noreferrer">here</a>. You'll need to answer a few questions, such as <strong>"Tell us about your KDB journey so far",</strong> <strong>"What do you believe makes you a good candidate for this program?"</strong> and <strong>"Tell us about any contributions you have made to the broader KX Community."</strong> You can provide evidence of your contributions, such as blogs, videos, talks, or answers on Stack Overflow and the KX Community. Check it out for yourself!</p>
<p><a href="https://forms.office.com/pages/responsepage.aspx?id=MmAAi833TkCPb0cZ8EFBe5SmUGAYdqNBgRUb7Zmk5fZURUhNMUpQTUEzWlZGV04zRTlMQUpHU1FKMSQlQCN0PWcu" target="_blank" rel="noopener noreferrer">KXPerts Application Form</a></p>
<p><img decoding="async" loading="lazy" alt="KXperts Application Form" src="https://defconq.github.io/assets/images/form-82fa543a4e3073e55d6840a8b7e01b40.png" width="853" height="1040" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://defconq.github.io/blog/KXperts%20-%20A%20Developer%20Advocacy%20Program%20by%20KX#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h3>
<p>The KXperts Developer Advocacy Program is a fantastic initiative to be part of the KX Community. It provides an excellent platform to showcase your contributions, expertise, and knowledge as a KDB/Q developer. The different tiers—silver, gold, and black—offer various levels of recognition and reward, making it accessible for everyone to participate and be acknowledged at their own pace. You shouldn't feel pressured to achieve the black tier, as it requires significant commitment and might not suit everyone's preferences. Ultimately, receiving the KXpert accreditation is a great honor and sets you apart in the field, highlighting your dedication and skill in working with KDB/Q and the broader KX technology suite.</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>kxperts</category>
            <category>community</category>
            <category>KX</category>
        </item>
        <item>
            <title><![CDATA[DefconQ meets KX - Mastering KDB+ Architecture - A Panel Discussion]]></title>
            <link>https://DefconQ.github.io/blog/DefconQ meets KX - Mastering KDB+ Architecture - A Panel Discussion</link>
            <guid>https://DefconQ.github.io/blog/DefconQ meets KX - Mastering KDB+ Architecture - A Panel Discussion</guid>
            <pubDate>Tue, 06 Aug 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Recently, I had the pleasure of being invited by Michaela Woods to join her and Cynthia Faus Viadé  on the KX LiveStream to discuss best practices in designing your KDB/Q Tick Architecture. We began by exploring the new KDB/Q Architecture course launched recently by KX, starting with a plain vanilla tick setup and gradually progressing to more advanced configurations. Our discussion covered a range of topics including Derived Analytics, Load Balancing and Gateways, Disaster Recovery, Slow Consumers and Chained Tickerplants, as well as Intraday Writedowns and Database Best Practices. Below is a summary of our discussion, or you can watch the recording of the livestream on YouTube.]]></description>
            <content:encoded><![CDATA[<p>Recently, I had the pleasure of being invited by <a href="https://www.linkedin.com/in/michaela-woods-50502b60/" target="_blank" rel="noopener noreferrer">Michaela Woods</a> to join her and <a href="https://www.linkedin.com/in/cynthiafaus/" target="_blank" rel="noopener noreferrer">Cynthia Faus Viadé </a> on the <a href="https://www.linkedin.com/events/masteringkdb-architecture-apane7213951079875510272/comments/" target="_blank" rel="noopener noreferrer">KX LiveStream</a> to discuss best practices in designing your KDB/Q Tick Architecture. We began by exploring the new <a href="https://learninghub.kx.com/courses/kdb-architecture/" target="_blank" rel="noopener noreferrer">KDB/Q Architecture course</a> launched recently by KX, starting with a plain vanilla tick setup and gradually progressing to more advanced configurations. Our discussion covered a range of topics including Derived Analytics, Load Balancing and Gateways, Disaster Recovery, Slow Consumers and Chained Tickerplants, as well as Intraday Writedowns and Database Best Practices. Below is a summary of our discussion, or you can watch the recording of the livestream on YouTube.</p>
<iframe width="1120" height="630" src="https://www.youtube.com/embed/7hpvQ7q_Rus?si=vN6pjc4byFn83DUG" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin"></iframe>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kx-kdb-architecture-course"><a href="https://learninghub.kx.com/courses/kdb-architecture/" target="_blank" rel="noopener noreferrer">KX KDB+ Architecture course</a><a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#kx-kdb-architecture-course" class="hash-link" aria-label="Direct link to kx-kdb-architecture-course" title="Direct link to kx-kdb-architecture-course">​</a></h3>
<p>The <a href="https://learninghub.kx.com/courses/kdb-architecture/" target="_blank" rel="noopener noreferrer">KDB+ Architecture course</a> by KX covers the basic setup of a plain vanilla KDB+ real time application and helps you to build a solid foundation to design more complex KDB Architectures and Systems. You will learn how to</p>
<ul>
<li>Customize architecture by adding data feeds and feedhandlers</li>
<li>Implement custom streaming analytics for real time analysis</li>
<li>Use logging to prevent data loss in the event of system failures</li>
<li>Understand and develop custom end of day behavior</li>
<li>Build advanced data retrieval and setting up query gateways</li>
</ul>
<p>The course is designed for both, KDB/Q developers and non KDB/Q developers, even though experience with KDB/Q will benefit you and additional learning resources are made available to you throughout the course to deepen your knowledge. The course leverages a dedicated sandbox provided by KX and you don't even need to install KDB/Q locally but you can run everything within the <a href="https://learninghub.kx.com/academy/" target="_blank" rel="noopener noreferrer">KX Learning Hub</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-plain-vanilla-setup">The Plain Vanilla setup<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#the-plain-vanilla-setup" class="hash-link" aria-label="Direct link to The Plain Vanilla setup" title="Direct link to The Plain Vanilla setup">​</a></h3>
<p>As part of the live stream, we also briefly discussed the plain vanilla tick setup. For those unfamiliar with this architecture, a KDB/Q tick setup, in its simplest form, includes a Data Feed, a Feed Handler (FH), the Tickerplant (TP), a real-time subscriber, the Real-Time Database (RDB), and a Historical Database (HDB). If you're interested in learning more about this setup, I have written a detailed blog post here:</p>
<ul>
<li><a href="https://www.defconq.tech/docs/architecture/plain" target="_blank" rel="noopener noreferrer">The Plain Vanilla Tick Setup</a>.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="derived-analytics">Derived Analytics<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#derived-analytics" class="hash-link" aria-label="Direct link to Derived Analytics" title="Direct link to Derived Analytics">​</a></h3>
<p>Derived Analytics can take the form of Complex Event Processing (CEP) or Real-Time Engines (RTE) and are tailored processes designed to perform real-time analytics to support business needs. These processes are highly customized and vary depending on the specific use case. Examples include, but are not limited to, Surveillance Analytics, Trade Cost Analysis (TCA), Price Impact Analysis, Data Quality checks, Hit Ratio calculations, Volume-Weighted Average Price (VWAP), and Time-Weighted Average Price (TWAP). CEPs are well-defined processes that determine what data to subscribe to, what analytics to perform, whether to persist the data to disk, and whether to publish the data to other Real-Time Subscribers (RTS). Developing a CEP requires a shift in mindset, as the challenges faced are often more complex than those encountered in other processes.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="load-balancing--gateways">Load Balancing &amp; Gateways<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#load-balancing--gateways" class="hash-link" aria-label="Direct link to Load Balancing &amp; Gateways" title="Direct link to Load Balancing &amp; Gateways">​</a></h3>
<p>Introducing a Gateway (GW) and/or Load Balancer (LB) to your plain vanilla tick setup is a significant enhancement. A Gateway serves as the main entry point for end users, who typically don't know where your data resides or is stored on disk. Since users are generally unaware of whether the RDB or HDB stores the data and are only interested in querying by time range and instrument(s), a Gateway or Load Balancer can significantly increase the system's efficiency. A well-designed Gateway can handle query routing, load balancing, authentication, and permission handling, as well as aggregate data before returning it to the user. Additionally, introducing a Gateway API that standardizes data access, manages bad queries, and returns a consistent table schema enhances the application's flexibility, scalability, security, and resilience.</p>
<p>The following whitepapers by KX provide more details about Gateways and Load Balancers:</p>
<ul>
<li><a href="https://code.kx.com/q/wp/gateway-design/" target="_blank" rel="noopener noreferrer">Common design principles for kdb+ gateways</a></li>
<li><a href="https://code.kx.com/q/wp/query-routing/" target="_blank" rel="noopener noreferrer">Query Routing: A kdb+ framework for a scalable, load balanced system</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="disaster-recovery">Disaster Recovery<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#disaster-recovery" class="hash-link" aria-label="Direct link to Disaster Recovery" title="Direct link to Disaster Recovery">​</a></h3>
<p>In an ideal world, your system is resilient, and a robust business continuity plan prevents major outages. However, we don't live in an ideal world. If your system goes down and you need to recover data ingested since the start of the day, the Tickerplant Log file is crucial for Disaster Recovery. The Tickerplant logs every incoming message, allowing you to replay the file and recreate the system's state before the outage. For less severe cases, such as the failure and recovery of a single Real-Time Subscriber (RTS), you can recover from the Real-Time Database (RDB). This approach works only if the crashed process was an RTS, not the Tickerplant (TP) itself. Additionally, if multiple processes fail simultaneously, recovering from the RDB may put excessive pressure on it, affecting other processes or users relying on real-time data. As systems grow larger, they become more complex, requiring planning and design of your disaster recovery strategy on a case-by-case basis.</p>
<p>You can read about Disaster Recovery here</p>
<ul>
<li><a href="https://code.kx.com/q/wp/disaster-recovery/" target="_blank" rel="noopener noreferrer">Disaster-recovery planning for kdb+ tick systems</a></li>
<li><a href="https://code.kx.com/q/wp/data-recovery/" target="_blank" rel="noopener noreferrer">Data recovery for kdb+tick</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="chained-tickerplants-remedy-against-slow-subscribers">Chained Tickerplants: Remedy against Slow Subscribers<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#chained-tickerplants-remedy-against-slow-subscribers" class="hash-link" aria-label="Direct link to Chained Tickerplants: Remedy against Slow Subscribers" title="Direct link to Chained Tickerplants: Remedy against Slow Subscribers">​</a></h3>
<p>A slow subscriber is a KDB/Q process consuming real-time data from the Tickerplant at a slower pace than the Tickerplant publishes. This can happen for various reasons, such as the Real-Time Subscriber running time-intensive analytics or encountering unexpected slowdowns. This mismatch in pace can lead to the Tickerplant's output queue building up, causing a spike in memory usage, and potentially resulting in the Tickerplant crashing or the server running out of memory. To prevent such scenarios, you can enhance your KDB/Q Tick architecture by introducing a Chained Tickerplant (CTP). A Chained Tickerplant is essentially another Tickerplant positioned after the main Tickerplant, which publishes data in batches based on either the number of messages or a specific time interval. This batching reduces the publishing frequency, allowing slow subscribers to consume messages at a manageable pace. Additionally, if the Chained Tickerplant crashes due to increased load from a slow subscriber, the main Tickerplant remains unaffected and continues to function normally.</p>
<p>You can find some additional information about Chained Tickerplants <a href="https://code.kx.com/q/kb/kdb-tick/" target="_blank" rel="noopener noreferrer">here</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="intraday-writedown">Intraday Writedown<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#intraday-writedown" class="hash-link" aria-label="Direct link to Intraday Writedown" title="Direct link to Intraday Writedown">​</a></h3>
<p>Introducing an Intraday Writedown Database (WDB) adds another tier to your database architecture. In the typical plain vanilla tick setup, you have a Real-Time Database (RDB) for intraday data and a Historical Database (HDB) for historical data. However, as data volume grows, it may exceed your server's available memory. To manage this, you can implement an Intraday Writedown Database (WDB), which saves data to disk throughout the day while the RDB holds only the most recent data. This saving process can be triggered by a timer or after a certain number of records. The WDB setup involves two processes: one for saving intraday data to disk and another for querying this saved data from a temporary location. It's crucial to note that the WDB is distinct from the HDB; at the end of the day, the intraday data is merged into the HDB and moved from the temporary location. Additionally, you'll need to adjust the Gateway logic to ensure the data is accessible to end users. For more details on intraday write downs, refer to this whitepaper:</p>
<ul>
<li><a href="https://code.kx.com/q/wp/intraday-writedown/" target="_blank" rel="noopener noreferrer">Intraday writedown solutions</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="database-best-practices">Database Best Practices<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#database-best-practices" class="hash-link" aria-label="Direct link to Database Best Practices" title="Direct link to Database Best Practices">​</a></h3>
<p>Next, we discussed best practices for setting up your database, including various methods for saving data to disk and the application of attributes in your system. In KDB/Q, there are four different attributes: sorted, unique, grouped, and parted, each with distinct behaviors and advantages. For a detailed explanation of these attributes, you can read my blog post <a href="https://www.defconq.tech/docs/concepts/attributes" target="_blank" rel="noopener noreferrer">here</a>.
When it comes to persisting data to disk, the options include:</p>
<ul>
<li>Flat file</li>
<li>Splayed table</li>
<li>Partitioned database</li>
<li>Segmented database</li>
</ul>
<p>The most common setup I've encountered in my career is a partitioned database. For a comprehensive understanding of these different setups, refer to <a href="https://code.kx.com/q4m3/14_Introduction_to_Kdb%2B/" target="_blank" rel="noopener noreferrer">Chapter 14 of Q for Mortals</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="qa">Q&amp;A<a href="https://defconq.github.io/blog/DefconQ%20meets%20KX%20-%20Mastering%20KDB+%20Architecture%20-%20A%20Panel%20Discussion#qa" class="hash-link" aria-label="Direct link to Q&amp;A" title="Direct link to Q&amp;A">​</a></h3>
<p>At the end of the livestream, we also gave attendees the opportunity to ask questions. Here are some of the key takeaways:</p>
<ol>
<li>
<p><strong>Do you apply attributes on the Intraday Database?</strong></p>
<p>Yes, the attributes you apply to the Historical Database (HDB) should also be applied to the Intraday Database.</p>
</li>
<li>
<p><strong>Is the RDB responsible for both EOI &amp; EOD write-down/merging or is some service specific for this not shown?</strong></p>
<p>In the plain vanilla setup, the RDB handles both saving data to disk at the end of the day and storing intraday data in memory. However, as data volume grows, the save-down process can take a significant amount of time, during which the RDB would not be available for user queries. To avoid this issue, you could introduce an independent process responsible for saving data to disk. This process would first read data from the Tickerplant Log file into memory and then save it to disk. The drawback is that you need to replay the data from the Tickerplant log first, which takes time and increases the memory load on your server. Generally, you should evaluate the design of your system on a case-by-case basis to determine the most suitable approach.</p>
</li>
</ol>
<p>Once again, I would like to thank everyone who attended the livestream. Your enthusiastic participation motivates us to host more livestreams in the future. Stay tuned and happy coding!</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>kdb/q architecture</category>
            <category>panel discussion</category>
            <category>livestream</category>
        </item>
        <item>
            <title><![CDATA[The Magnificent Seven - Mastering KDB/Q Concepts for Data Excellence]]></title>
            <link>https://DefconQ.github.io/blog/The Magnificent Seven - Mastering KDB/Q Concepts for Data Excellence</link>
            <guid>https://DefconQ.github.io/blog/The Magnificent Seven - Mastering KDB/Q Concepts for Data Excellence</guid>
            <pubDate>Wed, 10 Jul 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[When developers first encounter KDB/Q, they are often intimidated by its "strange" syntax, which differs significantly from most other programming languages they've seen. However, understanding and familiarizing oneself with the syntax is merely the beginning. To truly master any programming language, one needs a deep understanding of its core concepts and paradigms. For instance, when learning object-oriented languages like Java or C++, you should focus on concepts such as inheritance, encapsulation, polymorphism, and data abstraction. Additionally, understanding pointers and memory allocation is crucial for mastering C++. The same principle applies to KDB/Q, a high-performance, in-memory database and programming language. In this blog post, I will share the seven most important concepts that will set you apart and enhance your skills as a KDB/Q developer. Understanding these concepts will provide insight into why KDB/Q is so powerful and favoured among quants and data enthusiasts.]]></description>
            <content:encoded><![CDATA[<p>When developers first encounter KDB/Q, they are often intimidated by its "strange" syntax, which differs significantly from most other programming languages they've seen. However, understanding and familiarizing oneself with the syntax is merely the beginning. To truly master any programming language, one needs a deep understanding of its core concepts and paradigms. For instance, when learning object-oriented languages like Java or C++, you should focus on concepts such as inheritance, encapsulation, polymorphism, and data abstraction. Additionally, understanding pointers and memory allocation is crucial for mastering C++. The same principle applies to KDB/Q, a high-performance, in-memory database and programming language. In this blog post, I will share the seven most important concepts that will set you apart and enhance your skills as a KDB/Q developer. Understanding these concepts will provide insight into why KDB/Q is so powerful and favoured among quants and data enthusiasts.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>Please note, this blog post is primarily aimed at readers who are new to the KDB/Q programming language or just starting their learning journey. If you already have some experience with KDB/Q or are a seasoned developer, you might already be familiar with some or all of these concepts.</p></div></div>
<p><img decoding="async" loading="lazy" alt="The Magnificient Seven" src="https://defconq.github.io/assets/images/seven-81f22d1664bf577e101aa8b34d66cce4.png" width="1156" height="1158" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="left-of-right-and-no-operator-precedence">Left of Right and no Operator Precedence<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#left-of-right-and-no-operator-precedence" class="hash-link" aria-label="Direct link to Left of Right and no Operator Precedence" title="Direct link to Left of Right and no Operator Precedence">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>One of the most common mistakes made by qbies (newcomers to KDB/Q) is forgetting that KDB/Q is left-of-right, meaning it's read from right to left and has no operator precedence.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Unlike traditional programming languages like Java, C++, or Python, KDB/Q reads expressions from right to left. This makes expression evaluation simple and uniform, without unnecessary parentheses cluttering the code. Left-to-right evaluation eliminates any ambiguity in expressions, at least from the compiler's perspective if not yours. While parentheses can still be used to group terms and override the default evaluation order, you will find them much less necessary once you break old habits.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<p>When evaluating the expression <code>3*2+3</code> in KDB/Q, the result is <code>15</code>, rather than <code>9</code> as you might expect from traditional programming languages. This happens because KDB/Q adds <code>3</code> to <code>2</code> first, resulting in <code>5</code>, which is then multiplied by <code>3</code> to get the final result of <code>15</code>. To evaluate the multiplication first, you need to use parentheses around the expression.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)3*2+3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)(3*2)+3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">9</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kdbq-is-atomic">KDB/Q is Atomic<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#kdbq-is-atomic" class="hash-link" aria-label="Direct link to KDB/Q is Atomic" title="Direct link to KDB/Q is Atomic">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-1">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-1" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>Another important concept of KDB/Q is that most built-in operators are atomic. This means that functions iterate recursively through data structures such as lists or dictionaries until they reach individual atoms and then apply the function to it.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-1">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-1" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Atomic functions apply recursively to every element of a list or dictionary. For unary atomic functions (those that take one parameter), the function applies to both atoms and lists, and for lists, it applies independently to each atom within the list. Binary atomic functions (those that take two parameters) can be atomic in both operands, resulting in four different applications:</p>
<ul>
<li>Both operands are atoms.</li>
<li>The first operand is a list, and the second is an atom.</li>
<li>The first operand is an atom, and the second is a list.</li>
<li>Both operands are lists.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-1">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-1" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// unary atomic function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)neg 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)neg 10 20 30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-10 -20 -30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)neg (10 20 30; 40 50)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-10 -20 -30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-40 -50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)neg `a`b`c!10 20 30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a| -10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b| -20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c| -30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)neg `a`b`c!(10 20; 30 40 50; 60)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a| -10 -20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b| -30 -40 -50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c| -60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// binary atmoic function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)1+10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)1+10 20 30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11 21 31</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)1 2 3+10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11 12 13</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)1 2 3+10 20 30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11 22 33</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This atomic behavior makes KDB/Q a very powerful and efficient programming language. Imagine you have a nested list of numbers, some of which are null. Your task is to replace all null values with <code>0</code>. In a traditional programming language like Java, you would need to loop through every element of the list and then through each sublist, as a nested list can contain multiple lists. In KDB/Q, however, this task is as simple as using the <a href="https://code.kx.com/q/ref/greater/" target="_blank" rel="noopener noreferrer"><code>greator OR |</code></a> operator</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)((0N 1 2 0N);((1 3;0N 1 2);(1 2 3;0N 0N 1 2));4 5 0N)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0N 1 2 0N</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">((1 3;0N 1 2);(1 2 3;0N 0N 1 2))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4 5 0N</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)0|((0N 1 2 0N);((1 3;0N 1 2);(1 2 3;0N 0N 1 2));4 5 0N)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0 1 2 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">((1 3;0 1 2);(1 2 3;0 0 1 2))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4 5 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vector-operations-and-column-oriented">Vector Operations and Column Oriented<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#vector-operations-and-column-oriented" class="hash-link" aria-label="Direct link to Vector Operations and Column Oriented" title="Direct link to Vector Operations and Column Oriented">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-2">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-2" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>The previous concept of KDB/Q being atomic makes it inherently a vector-oriented language, meaning it operates on entire arrays (vectors) of data in a single operation.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-2">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-2" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Instead of processing individual elements in loops, KDB/Q applies functions and operations to whole vectors at once. This not only simplifies code but also significantly boosts performance by leveraging CPU vectorization capabilities.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-2">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-2" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<p>To add two vectors <code>a</code> and <code>b</code>, you simply write <code>c:a+b</code>. This operation is applied element-wise across the entire vectors.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)a:1 2 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)b:4 5 6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)show c:a+b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 7 9</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This behaviour also extends to tables. KDB/Q is column-oriented and stores tables as flipped column dictionaries, with each column stored in contiguous memory as a vector. This setup allows for vectorized mathematical operations, making table manipulation incredibly fast.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)show t:([] a:1 2 3;b:4 5 6)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3 6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)update c:a+b,d:a*b,e:neg a,f:10+b from t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a b c d  e  f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 4 5 4  -1 14</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2 5 7 10 -2 15</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3 6 9 18 -3 16</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="interpreted-and-dynamic">Interpreted and dynamic<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#interpreted-and-dynamic" class="hash-link" aria-label="Direct link to Interpreted and dynamic" title="Direct link to Interpreted and dynamic">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-3">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-3" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>KDB/Q code is interpreted at runtime, and both variables and functions are dynamic. This means they can hold data of any type, and the type can change during execution.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-3">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-3" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>KDB/Q is both interpreted and dynamic, meaning that code doesn't need to be compiled and all functions are compiled into bytecode at runtime. Additionally, as a dynamic language, function definitions and variable types can be changed at runtime, with no type checking performed before execution. While these features make KDB/Q highly flexible, they also require careful design, thorough testing, and robust error handling to prevent production outages.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-3">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-3" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<p>Below, we illustrate the dynamic behavior of KDB/Q by first assigning a string to a variable <code>a</code>, then changing it to a numerical value, and finally to a function that we can execute.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)show a:"Hello"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Hello"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)show a:2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)show a:{x+y}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{x+y}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)a[2;3]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="functional">Functional<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#functional" class="hash-link" aria-label="Direct link to Functional" title="Direct link to Functional">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-4">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-4" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>KDB/Q heavily incorporates functional programming paradigms, emphasizing the use of functions as first-class citizens.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-4">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-4" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Functions can be passed as arguments, returned from other functions, and composed to build more complex functionality. KDB/Q's syntax and functions make it easy to perform operations like map, reduce, and filter directly on data sets. However, it's worth mentioning that KDB/Q is not purely functional as functions can have side effects.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-4">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-4" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<p>Applying a function to each element of a list can be done with <code>f each list</code>, where <code>f</code> is a user-defined function.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)f:count</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)f each ("Hello";1 2 3;(2 3;4 5))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 3 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dictionaries-tables-and-keyed-tables">Dictionaries, Tables and Keyed Tables<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#dictionaries-tables-and-keyed-tables" class="hash-link" aria-label="Direct link to Dictionaries, Tables and Keyed Tables" title="Direct link to Dictionaries, Tables and Keyed Tables">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-5">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-5" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>KDB/Q provides powerful data structures for efficient data storage and manipulation natively and supports both row-oriented and column-oriented data access. These data structures include dictionaries, tables and keyed tables.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-5">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-5" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Dictionaries, Tables and Keyed Tables are data structures designed for high performance, efficient data storage and access and ideal for analytical tasks. All three data structures are supported by KDB/Q out of the box and are optimised to achieve optimal performance. In KDB/Q, Tables are similar to SQL tables with the difference that KDB/Q is column oriented, meaning each column is stored as a vector in contiguous memory, allowing for vectorised operations and making mathematical computations lightning fast.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-5">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-5" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<p>Demonstrating the power and performance of tables in analytics</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// First we create a dummy table with random data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)show t:([] sym:10?`AAPL`C`C`MSFT`AAPL; price:10?100.0; qty:10?1000)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  price    qty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    49.31835 908</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    57.85203 360</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL 8.388858 522</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    19.59907 257</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    37.5638  858</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    61.37452 585</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    52.94808 90</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL 69.16099 683</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL 22.96615 90</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    69.19531 869</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Calculating the volume-weighted average price (VWAP) per symbol for the data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)select wvap:price wavg qty by sym from t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym | wvap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">----| --------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL| 534.0731</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C   | 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Updating the table with the VWAP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)update wvap:price wavg qty by sym from t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  price    qty wvap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    49.31835 908 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    57.85203 360 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL 8.388858 522 534.0731</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    19.59907 257 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    37.5638  858 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    61.37452 585 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    52.94808 90  585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL 69.16099 683 534.0731</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL 22.96615 90  534.0731</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C    69.19531 869 585.5224</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Retrieving the well-known metrics: open, high, low, and close for each symbol</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)exec `o`h`l`c!(first;max;min;last)@\:price by sym from t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | o        h        l        c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">----| -----------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL| 8.388858 69.16099 8.388858 22.96615</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C   | 49.31835 69.19531 19.59907 69.19531</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="synchronous-and-asynchronous-ipc-for-real-time-data">Synchronous and Asynchronous IPC for Real-Time Data<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#synchronous-and-asynchronous-ipc-for-real-time-data" class="hash-link" aria-label="Direct link to Synchronous and Asynchronous IPC for Real-Time Data" title="Direct link to Synchronous and Asynchronous IPC for Real-Time Data">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-6">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-6" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>No other programming language makes interprocess communication (IPC) as easy and straightforward as KDB/Q. Designed for real-time data processing and streaming, KDB/Q supports both synchronous and asynchronous messaging right out of the box.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-6">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-6" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Designing event driven applications is critical for financial applications where real-time data feeds and low-latency processing are essential. KDB/Q processes and updates data in real-time, handling high-throughput data streams efficiently. Opening connections between two KDB/Q processes, whether on the same server or different servers, requires minimal effort and can be accomplished with a single command. Data is serialized before being sent and deserialized upon receipt, minimizing the amount of data transferred over the network. Asynchronous communication and advanced IPC patterns can be leveraged to design efficient and scalable applications.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-6">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-6" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// Server: start a q process and assign port 5001 to it</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)\p 5001</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Client: Open a connection to the server using hopen and send a synchronous query to it</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)h:hopen `::5001</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)h"2+2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-single-threaded">Bonus: Single Threaded<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#bonus-single-threaded" class="hash-link" aria-label="Direct link to Bonus: Single Threaded" title="Direct link to Bonus: Single Threaded">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="concept-7">Concept<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#concept-7" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h3>
<p>KDB/Q operates in a single-threaded mode by default, ensuring data consistency and avoiding race conditions, as all operations are executed in the order they are received.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="details-7">Details<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#details-7" class="hash-link" aria-label="Direct link to Details" title="Direct link to Details">​</a></h3>
<p>Even though KDB/Q is single-threaded, simplifying program design and avoiding the complexities of multi-threaded applications, you can still leverage parallel processing by starting your KDB/Q process with secondary threads using <code>-s n</code>, where <code>n</code> is the number of secondary threads. Moreover, since KDB/Q version 4.0, all primitive operators are implicitly multi-threaded. Starting your KDB/Q process with a negative secondary threads flag <code>-s -n</code> will utilize parallel processes instead of secondary threads for parallel processing.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="example-7">Example<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#example-7" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)f:{sum exp x?1.0}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)\ts f each 2#1000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">25 16777728</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)\ts f peach 2#1000000 ~</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0 1120</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://defconq.github.io/blog/The%20Magnificent%20Seven%20-%20Mastering%20KDB/Q%20Concepts%20for%20Data%20Excellence#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Understanding these key concepts is crucial for mastering KDB/Q and elevating your development skills. Each concept, from the left-of-right evaluation and atomic functions to dynamic typing and interprocess communication, contributes to the power and efficiency of KDB/Q, making it a preferred choice for real-time data processing and high-performance analytics. By familiarizing yourself with these principles, you'll be better equipped to leverage the full potential of KDB/Q, enabling you to write more efficient, robust, and maintainable code.</p>
<p>If you like to deepen your knowledge further, check out the following references and links</p>
<ul>
<li><a href="https://www.defconq.tech/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code" target="_blank" rel="noopener noreferrer">How To Read, Understand and Learn KDB/Q Code</a></li>
<li><a href="https://www.defconq.tech/docs/concepts/dictionariesTables" target="_blank" rel="noopener noreferrer">Dictionaries and Tables</a></li>
<li><a href="https://www.defconq.tech/docs/architecture/plain" target="_blank" rel="noopener noreferrer">The Plain Vanilla Tick Setup</a></li>
<li><a href="https://www.defconq.tech/docs/tutorials/tick" target="_blank" rel="noopener noreferrer">KDB Tick Explained - A Walkthrough</a></li>
<li><a href="https://www.defconq.tech/docs/language/why_KDB" target="_blank" rel="noopener noreferrer">Unleashing the Power of Time-Series Analysis and Big Data: Why KDB/Q Reigns Supreme</a></li>
</ul>]]></content:encoded>
            <category>kdb/q</category>
            <category>kdb/q concepts</category>
        </item>
        <item>
            <title><![CDATA[DefconQ meets Fancy Quant - Alexander Unterrainer and Dimitri Bianco discuss KDB/Q]]></title>
            <link>https://DefconQ.github.io/blog/DefconQ meets Fancy Quant - Alexander Unterrainer and Dimitri Bianco discuss KDB/Q</link>
            <guid>https://DefconQ.github.io/blog/DefconQ meets Fancy Quant - Alexander Unterrainer and Dimitri Bianco discuss KDB/Q</guid>
            <pubDate>Mon, 01 Jul 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[In this blog post, I have a special treat for you. I sat down with Dimitri Bianco a seasoned quant who runs his own podcast and YouTube channel  dedicated to all things quant finance. I have been following Dimitri for a while and always found his podcasts incredibly informative and helpful, so when the opportunity to join him on a podcast and discuss KDB/Q came up, I couldn't turn it down. Dimitri’s engagement provides graduates and students at the start of their careers with valuable insights to help them choose the right path. While I had to figure most things out on my own, Dimitri's podcast offers a valuable industry perspective into the field of quantitative finance.]]></description>
            <content:encoded><![CDATA[<p>In this blog post, I have a special treat for you. I sat down with <a href="https://www.linkedin.com/in/dimitri-bianco/" target="_blank" rel="noopener noreferrer">Dimitri Bianco</a> a seasoned quant who runs his own podcast and <a href="https://www.youtube.com/@DimitriBianco" target="_blank" rel="noopener noreferrer">YouTube channel</a>  dedicated to all things quant finance. I have been following Dimitri for a while and always found his podcasts incredibly informative and helpful, so when the opportunity to join him on a podcast and discuss KDB/Q came up, I couldn't turn it down. Dimitri’s engagement provides graduates and students at the start of their careers with valuable insights to help them choose the right path. While I had to figure most things out on my own, Dimitri's podcast offers a valuable industry perspective into the field of quantitative finance.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-host-dimitri-bianco">The host: <a href="https://www.linkedin.com/in/dimitri-bianco/" target="_blank" rel="noopener noreferrer">Dimitri Bianco</a><a href="https://defconq.github.io/blog/DefconQ%20meets%20Fancy%20Quant%20-%20Alexander%20Unterrainer%20and%20Dimitri%20Bianco%20discuss%20KDB/Q#the-host-dimitri-bianco" class="hash-link" aria-label="Direct link to the-host-dimitri-bianco" title="Direct link to the-host-dimitri-bianco">​</a></h2>
<p>Dimitri holds a degree in Finance and Business Administration from Washington State University, as well as a Master's degree in Applied Economics from the University of Michigan. He is a seasoned full-stack quant, with expertise in model development, validation, implementation, and internal audit. Additionally, Dimitri has extensive experience in risk management, having worked for several financial institutions, including Santander Bank, in the field of quantitative finance. Beyond his impressive career, Dimitri launched his own podcast and YouTube channel nearly over a decade ago and provides advice and insights into the world of quantitative finance. His platform covers everything quant finance, the different roles available, how to break into quantitative finance, and how to build a fulfilling career.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="talking-tuesdays-fancy-quant-meets-defconq">Talking Tuesdays: Fancy Quant meets DefconQ<a href="https://defconq.github.io/blog/DefconQ%20meets%20Fancy%20Quant%20-%20Alexander%20Unterrainer%20and%20Dimitri%20Bianco%20discuss%20KDB/Q#talking-tuesdays-fancy-quant-meets-defconq" class="hash-link" aria-label="Direct link to Talking Tuesdays: Fancy Quant meets DefconQ" title="Direct link to Talking Tuesdays: Fancy Quant meets DefconQ">​</a></h2>
<p><img decoding="async" loading="lazy" alt="Alex" src="https://defconq.github.io/assets/images/fancyQuant-212c9c8929a0caf5ceb5acdc31cef79d.png" width="819" height="906" class="img_ev3q"></p>
<p>Dimitri and I sat down for a chat about KDB/Q, a vector-oriented programming language. We discussed what it is, why it's so performant, its applications, and its significance in finance, particularly in quantitative finance. We also touched on the hiring process for graduates, remote work, and much more. If you missed the podcast, you can find the recording below and on <a href="https://www.youtube.com/@DimitriBianco" target="_blank" rel="noopener noreferrer">Dimitri's YouTube channel</a>. If the podcast sparked your interest in KDB/Q, I'm sharing some references for you to learn more about it:</p>
<ul>
<li><a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">Go-To KDB/Q Learning Resources</a></li>
<li><a href="https://www.defconq.tech/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code" target="_blank" rel="noopener noreferrer">How to Read, Understand and Learn KDB/Q code (Blog Post)</a></li>
<li><a href="https://www.defconq.tech/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing" target="_blank" rel="noopener noreferrer">How to Read, Understand and Learn KDB/Q code (Conference Presentation)</a></li>
<li><a href="https://www.defconq.tech/docs/language/why_KDB" target="_blank" rel="noopener noreferrer">Unleashing the Power of Time-Series Analysis and Big Data: Why KDB/Q Reigns Supreme</a></li>
<li><a href="https://www.defconq.tech/docs/language/speed" target="_blank" rel="noopener noreferrer">The Speed Secrets of KDB/Q</a></li>
</ul>
<p>And now, without further ado:</p>
<iframe width="1120" height="630" src="https://www.youtube.com/embed/cQmKQaJFZFg?si=3veMWaEx21Np_-xi" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin"></iframe>]]></content:encoded>
            <category>kdb/q</category>
            <category>kdb/q community</category>
            <category>podcast</category>
            <category>blogger</category>
            <category>quant</category>
            <category>quantitative finance</category>
            <category>career</category>
            <category>Dimitri Bianco</category>
            <category>Alexander Unterrainer</category>
        </item>
        <item>
            <title><![CDATA[Advanced KDB/Q Learning Material]]></title>
            <link>https://DefconQ.github.io/blog/Advanced KDB/Q Learning Material</link>
            <guid>https://DefconQ.github.io/blog/Advanced KDB/Q Learning Material</guid>
            <pubDate>Wed, 22 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome back, fellow KDB/Q enthusiasts! If you've been following my blog journey, you've likely come across one of my earlier posts where I shared my favorite Go To KDB/Q Learning Resources aimed at beginners for diving into the world of KDB/Q. Congratulations on your progress thus far! Now, as seasoned learners in this domain, it's time to elevate our understanding further. In this latest post, we're shifting gears to focus on more advanced learning material. Whether you're looking to deepen your expertise or explore new horizons, join me as we explore advanced resources to expand your KDB/Q knowledge.]]></description>
            <content:encoded><![CDATA[<p>Welcome back, fellow KDB/Q enthusiasts! If you've been following my blog journey, you've likely come across one of my earlier posts where I shared my favorite <a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">Go To KDB/Q Learning Resources</a> aimed at beginners for diving into the world of KDB/Q. Congratulations on your progress thus far! Now, as seasoned learners in this domain, it's time to elevate our understanding further. In this latest post, we're shifting gears to focus on more advanced learning material. Whether you're looking to deepen your expertise or explore new horizons, join me as we explore advanced resources to expand your KDB/Q knowledge.</p>
<p>As in my earlier post, I'll organize the resources into two sections. The first section will spotlight books covering advanced KDB/Q topics. The first two books will explore machine learning techniques in KDB/Q, while the third book is targeted more at financial market practitioners and quants, discussing price impact modeling, supplemented by KDB/Q code examples. In the second section of this post, I'll unveil a collection of valuable online resources offering advanced KDB/Q insights.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="books">Books<a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#books" class="hash-link" aria-label="Direct link to Books" title="Direct link to Books">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="fun-q---a-functional-introduction-to-machine-learning-in-q-by-nick-psaris"><a href="https://amzn.to/4hgkZKY" target="_blank" rel="noopener noreferrer">Fun Q - A Functional Introduction to Machine Learning in Q by Nick Psaris</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#fun-q---a-functional-introduction-to-machine-learning-in-q-by-nick-psaris" class="hash-link" aria-label="Direct link to fun-q---a-functional-introduction-to-machine-learning-in-q-by-nick-psaris" title="Direct link to fun-q---a-functional-introduction-to-machine-learning-in-q-by-nick-psaris">​</a></h3>
<p><a href="https://amzn.to/4hgkZKY" target="_blank" rel="noopener noreferrer">Fun Q - A Functional Introduction to Machine Learning in Q</a> is authored by none other than <a href="https://www.linkedin.com/in/nickpsaris/" target="_blank" rel="noopener noreferrer">Nick Psaris</a>, the KDB/Q developer behind my personal favorite KDB/Q book, Q Tips (which I've previously mentioned <a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources#q-tips-by-nick-psaris" target="_blank" rel="noopener noreferrer">here</a>). Inspired by Andrew Ng, a pioneer in machine learning and co-founder of Coursera, and his online machine learning course, Nick embarked on re-implementing the entire curriculum in Q. Pushing Q to its limits, Nick meticulously translated all machine learning algorithms into Q, fine-tuning them multiple times to optimize code performance and reusability. While the table of contents may seem intimidating at first glance, Nick assured me that extensive mathematical knowledge isn't necessary. As he puts it, "once you see the three lines of code required to implement it (k-nearest neighbors and k-means) and play with the code, you'll be amazed by its simplicity (though the magic remains)!" It's no surprise that Nick's book has received stellar reviews from esteemed Q experts, quants, KDB/Q developers, and financial market participants alike.</p>
<p><strong>Accompanying GitHub</strong>: <a href="https://github.com/psaris/funq" target="_blank" rel="noopener noreferrer">Fun Q</a></p>
<p><img decoding="async" loading="lazy" alt="Fun Q" src="https://defconq.github.io/assets/images/funQ-9b2bddaa72f886a3557262f02a79dad1.png" width="750" height="900" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="machine-learning-and-big-data-with-kdbq-by-jan-novotny-paul-a-bilokon-aris-galiotos-federic-deleze"><a href="https://amzn.to/4hbKixF" target="_blank" rel="noopener noreferrer">Machine Learning and Big Data with KDB+/Q by Jan Novotny, Paul A. Bilokon, Aris Galiotos, Federic Deleze</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#machine-learning-and-big-data-with-kdbq-by-jan-novotny-paul-a-bilokon-aris-galiotos-federic-deleze" class="hash-link" aria-label="Direct link to machine-learning-and-big-data-with-kdbq-by-jan-novotny-paul-a-bilokon-aris-galiotos-federic-deleze" title="Direct link to machine-learning-and-big-data-with-kdbq-by-jan-novotny-paul-a-bilokon-aris-galiotos-federic-deleze">​</a></h3>
<p><a href="https://amzn.to/4hbKixF" target="_blank" rel="noopener noreferrer">Machine Learning and Big Data with KDB+/q</a> marked a milestone as the first book covering machine learning with KBD/Q. This collaborative effort brings together leading figures from two worlds: quantitative finance and KDB/Q. <a href="https://www.linkedin.com/in/bilokon/" target="_blank" rel="noopener noreferrer">Paul Billion</a>, renowned quant and founder of <a href="https://thalesians.com/" target="_blank" rel="noopener noreferrer">Thalesians</a>, joined forces with fellow quantitative finance experts <a href="https://www.linkedin.com/in/jan-novotny-44865510/" target="_blank" rel="noopener noreferrer">Jan Novotny</a> and <a href="https://www.linkedin.com/in/fr%C3%A9d%C3%A9ric-d%C3%A9l%C3%A8ze-9324652/" target="_blank" rel="noopener noreferrer">Frederic Deleze</a>, along with <a href="https://www.linkedin.com/in/ftiok/" target="_blank" rel="noopener noreferrer">Aris Galiotos</a>, one of the most experienced KDB/Q developers in the industry, to bundle their wealth of experience and knowledge into this comprehensive guide. The book is structured into four parts, with the initial two sections dedicated to mastering KDB/Q fundamentals and core concepts—a prerequisite for leveraging the data science and machine learning techniques covered in parts three and four.</p>
<p>Following a gentle introduction to KDB/Q, which covers foundational topics such as dictionaries, tables, iterators, and progresses to more advanced concepts like joins, parallelization, parse trees, and functional selects, the book dives nto an extensive array of machine learning and data science concepts. These encompass Linear Regression, Time Series Econometrics, Fourier Transformation, Eigensystems, and Simulating Asset Prices, among numerous others—too many to list within this brief paragraph. With Aris' extensive experience in designing, building, and engineering multiple large-scale enterprise systems, real-time analytics, and machine learning algorithms using kdb+, combined with the quantitative finance expertise brought by the other three authors, this book is a valuable resource for both KDB/Q developers with an interest in data science and machine learning, and financial market practitioners such as quants, researchers, or quant traders.</p>
<p><strong>Accompanying Github</strong>: <a href="https://github.com/hanssmail/quantQ" target="_blank" rel="noopener noreferrer">Machine Learning and Big Data with KDB+/Q</a></p>
<p><img decoding="async" loading="lazy" alt="Machine Learning and Big Data with KDB+/Q" src="https://defconq.github.io/assets/images/MLQ-b5c79442cf24d5c81053e73b6e9e891a.png" width="648" height="912" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="handbook-of-price-impact-modeling-by-kevin-t-webster"><a href="https://amzn.to/3Yhf7rR" target="_blank" rel="noopener noreferrer">Handbook of Price Impact Modeling by Kevin T. Webster</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#handbook-of-price-impact-modeling-by-kevin-t-webster" class="hash-link" aria-label="Direct link to handbook-of-price-impact-modeling-by-kevin-t-webster" title="Direct link to handbook-of-price-impact-modeling-by-kevin-t-webster">​</a></h3>
<p>The third book in this series leans more toward finance rather than KDB/Q specifics. In <a href="https://amzn.to/3Yhf7rR" target="_blank" rel="noopener noreferrer">Handbook of Price Impact Modeling</a>, <a href="https://www.linkedin.com/in/kevin-t-webster/" target="_blank" rel="noopener noreferrer">Kevin Webster</a>  offers practitioners and students a mathematical framework rooted in academic references to effectively apply price impact models to quantitative trading and portfolio management. Although the book primarily focuses on practical applications and essential skills for joining a quantitative trading desk, it provides only a brief introduction to KDB/Q in the appendix, spanning just over 20 pages. Nonetheless, for quantitative researchers or traders, this book offers valuable insights and guidance on how to:</p>
<ul>
<li>Build a market simulator to back test trading algorithms</li>
<li>Implement closed-form strategies that optimize trading signals</li>
<li>Measure liquidity risk and stress test portfolios for fire sales</li>
<li>Analyze algorithm performance controlling for common trading biases</li>
<li>Estimate price impact models using public trading tape</li>
</ul>
<p><strong>Kevin Webster, The Science of Price Impact Modeling at KXCon23</strong>: <a href="https://www.youtube.com/watch?v=kZij5uX_Tm0" target="_blank" rel="noopener noreferrer">Youtube</a></p>
<p><img decoding="async" loading="lazy" alt="Handbook of Price Impact Modeling" src="https://defconq.github.io/assets/images/PIM-726fdb455ffcd5674544c43419f6b542.png" width="620" height="911" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="online-resources">Online resources<a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#online-resources" class="hash-link" aria-label="Direct link to Online resources" title="Direct link to Online resources">​</a></h2>
<p>In the latter part of this blog post, I'll be sharing some valuable online resources. While I've previously mentioned a few of them in my initial blog post <a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">here</a> , it's worth highlighting that these resources offer an abundance of advanced topics and serve as a valuable asset for KDB/Q developers at any proficiency level. Furthermore, I've included additional resources that have been particularly beneficial in my journey as a KDB/Q developer, along with a newcomer that will to elevate your understanding of KDB/Q to new heights. If this has piqued your interest, keep reading. However, if you're new to KDB/Q and just embarking on your learning journey, feel free to check out my blog post on my recommended starting resources for KDB/Q <a href="https://www.defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">here</a>. I've enhanced my list of recommended beginner learning resources to incorporate the valuable content shared by my peers and friends at <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a> in Madrid. Their contributions serve as a valuable asset for both novice and experienced KDB/Q developers.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kx"><a href="https://kx.com/" target="_blank" rel="noopener noreferrer">KX</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#kx" class="hash-link" aria-label="Direct link to kx" title="Direct link to kx">​</a></h3>
<p>Without <a href="https://kx.com/" target="_blank" rel="noopener noreferrer">KX</a>, the company behind KDB/Q and its forefront development, there wouldn't be much to discuss in the first place. Although KDB/Q was initially created by <a href="https://en.wikipedia.org/wiki/Arthur_Whitney_(computer_scientist)" target="_blank" rel="noopener noreferrer">Arthur Whitney</a> (you can read about the history of KDB/Q <a href="https://www.defconq.tech/docs/language/history" target="_blank" rel="noopener noreferrer">here</a>), it's currently owned and maintained by KX. Naturally, KX provides an extensive array of learning resources, including a free online version of <a href="https://code.kx.com/q4m3/" target="_blank" rel="noopener noreferrer">"Q for Mortals"</a> by Jeffry Borror, <a href="https://kx.com/blog/" target="_blank" rel="noopener noreferrer">blog posts</a>, an extensive <a href="https://code.kx.com/q/ref/" target="_blank" rel="noopener noreferrer">reference</a> page, <a href="https://code.kx.com/q/wp/" target="_blank" rel="noopener noreferrer">whitepapers</a>, and an <a href="https://learninghub.kx.com/academy/" target="_blank" rel="noopener noreferrer">online academy</a> hat they've recently revamped. KX also actively fosters the <a href="https://learninghub.kx.com/forums/" target="_blank" rel="noopener noreferrer">KDB/Q community</a> with <a href="https://www.linkedin.com/in/michaela-woods-50502b60/" target="_blank" rel="noopener noreferrer">Michaela Woods</a> serving as just one of their evangelists. For seasoned developers, I highly recommend exploring the KX whitepapers, as they offer a wealth of valuable insights.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="data-intellect-blog"><a href="https://dataintellect.com/thoughts/?_sft_category=blog" target="_blank" rel="noopener noreferrer">Data Intellect Blog</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#data-intellect-blog" class="hash-link" aria-label="Direct link to data-intellect-blog" title="Direct link to data-intellect-blog">​</a></h3>
<p><a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a> not only stands as a powerhouse in KDB/Q consultancy but also generously shares their wealth of knowledge and experience through their insightful <a href="https://dataintellect.com/thoughts/?_sft_category=blog" target="_blank" rel="noopener noreferrer">blog posts</a>. Under the leadership of <a href="https://www.linkedin.com/in/jonny-press-7005602/" target="_blank" rel="noopener noreferrer">Jonny Press</a>, a legendary figure in the KDB/Q Community, alongside <a href="https://www.linkedin.com/in/drgarydavies-kdb/" target="_blank" rel="noopener noreferrer">Gary Davies</a>, another prominent and indispensable name in the KDB/Q world, the Data Intellect blog serves as an invaluable resource of knowledge. Some of their posts have even inspired my own blog entries, educating me on critical topics like understanding <a href="https://dataintellect.com/blog/adventure-in-retrieving-memory-size-of-kdb-object/" target="_blank" rel="noopener noreferrer">memory size of KDB/Q objects</a>, <a href="https://dataintellect.com/blog/garbage-collection-kdb/" target="_blank" rel="noopener noreferrer">garbage collection</a>, and <a href="https://dataintellect.com/blog/level-2-storage-formats/" target="_blank" rel="noopener noreferrer">order book storage</a>. Additionally, their blog covers a wide range of subjects including <a href="https://dataintellect.com/blog/ark-0-introducing-ark/" target="_blank" rel="noopener noreferrer">architecture design and reviews</a>, <a href="https://dataintellect.com/blog/kdb-is-memory-hungry-right/" target="_blank" rel="noopener noreferrer">memory properties of KDB/Q</a>, <a href="https://dataintellect.com/blog/unlimited-connections-a-kdb-4-1-story/" target="_blank" rel="noopener noreferrer">version updates</a> and their implications, <a href="https://dataintellect.com/blog/ark-1-kdb-framework/" target="_blank" rel="noopener noreferrer">framewokrs</a> as well as technologies that interface with KDB/Q. I vividly recall Jonny's KDB/Q Architecture presentation at a London KDB Meetup nearly a decade ago—it was a crucial moment where I learned invaluable insights into KDB/Q architecture design, best practices, and pitfalls to avoid. If you're seeking to enhance your KDB/Q expertise, I highly recommend diving into their blog.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="timestored-blog-by-ryan-hamilton"><a href="https://www.timestored.com/b/" target="_blank" rel="noopener noreferrer">Timestored Blog by Ryan Hamilton</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#timestored-blog-by-ryan-hamilton" class="hash-link" aria-label="Direct link to timestored-blog-by-ryan-hamilton" title="Direct link to timestored-blog-by-ryan-hamilton">​</a></h3>
<p>An often overlooked but invaluable source of KDB/Q wisdom is <a href="https://www.linkedin.com/in/justryanhamilton/" target="_blank" rel="noopener noreferrer">Ryan Hamilton's</a> blog on <a href="https://www.timestored.com/" target="_blank" rel="noopener noreferrer">Timestored</a>. Ryan, a seasoned KDB/Q developer with an esteemed reputation, has build numerous large-scale enterprise systems for various investment banks. Although Ryan's primary focus is now on <a href="https://www.timestored.com/pulse/" target="_blank" rel="noopener noreferrer">Pulse</a> (I have blogged about Pulse <a href="https://www.defconq.tech/docs/productivity/pulse" target="_blank" rel="noopener noreferrer">here</a>), a developer platform for internal data UIs, his blog remains a treasure trove of insights derived from decades of hands-on experience. It was through his blog that I gained a deep understanding of KDB/Q's <a href="https://www.timestored.com/kdb-guides/memory-management" target="_blank" rel="noopener noreferrer">memory management</a>, knowledge I haven't found anywhere else (for a comprehensive blog about memory management, read my post <a href="https://www.defconq.tech/docs/concepts/memoryManagement" target="_blank" rel="noopener noreferrer">here</a>. In addition to the wealth of KDB/Q insights available on Ryan's blog, you also have the opportunity to download <a href="https://www.timestored.com/qstudio/" target="_blank" rel="noopener noreferrer">qstudio</a> — an IDE originally tailored for KDB/Q but now accommodating various other databases as well.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ferenc-bodons-blog"><a href="https://bodonferenc.github.io/" target="_blank" rel="noopener noreferrer">Ferenc Bodon's Blog</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#ferenc-bodons-blog" class="hash-link" aria-label="Direct link to ferenc-bodons-blog" title="Direct link to ferenc-bodons-blog">​</a></h3>
<p><a href="https://www.linkedin.com/in/ferencbodon/" target="_blank" rel="noopener noreferrer">Ferenc</a> currently as the Head of Benchmarking and Engineering at KX Hungary, has a rich background as an experienced data engineer, software developer, and multilingual programmer. Before joining KX, Ferenc worked for more than a decade at Morgan Stanley, building out and extending their KDB/Q data warehouse. With expertise spanning software architecture and an academic foundation in data mining and statistics, Ferenc occasionally shares his wisdom on KDB/Q or conducts insightful comparisons between KDB/Q and other mainstream programming languages via his <a href="https://bodonferenc.github.io/" target="_blank" rel="noopener noreferrer">blog</a>. Whenever he shares his insights, it's certainly worthwhile to take note.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="q201-by-stephen-taylor"><a href="https://q201.org/" target="_blank" rel="noopener noreferrer">Q201 by Stephen Taylor</a><a href="https://defconq.github.io/blog/Advanced%20KDB/Q%20Learning%20Material#q201-by-stephen-taylor" class="hash-link" aria-label="Direct link to q201-by-stephen-taylor" title="Direct link to q201-by-stephen-taylor">​</a></h3>
<p>Finally, I'm thrilled to introduce <a href="https://www.linkedin.com/in/stephen-taylor-b5ba78/" target="_blank" rel="noopener noreferrer">Stephen Taylor's</a> initiative, <a href="https://q201.org/" target="_blank" rel="noopener noreferrer">Q201</a> - a novel learning platform tailored for KDB/Q programmers, with a keen focus on understanding the syntax and semantics of this unique language, along with vector-programming techniques. Stephen has decades of software development experience, with a particularly strong background in APL—an influence that resonates strongly in Arthur's creation of KDB/Q. Notably, Stephen also served as the librarian for the official KDB/Q documentation at KX. Personally, I consider Stephen one of the rare KDB/Q developers who not only comprehends the language's complexity but also possesses the ability and patience to educate them to us mere mortals. Initially drafted as a textbook titled "Post Atomic: Vector programming in q," Stephen opted to release the content freely as a website, aspiring to establish a communal learning hub for KDB/Q enthusiasts. The website is complemented by q201.chat on StackExchange and a Study Buddy pinboard for connecting with fellow learners. This project is particularly close to my heart, as Stephen offered me the opportunity to collaborate with him, enabling me to deepen my involvement in the community to which he's been such a pivotal contributor and advocate. For those seeking a deeper grasp of KDB/Q, I highly recommend exploring Q201.</p>
<p><strong>That's all folks. Happy Learning</strong></p>]]></content:encoded>
            <category>kdb/q</category>
            <category>learning</category>
            <category>books</category>
            <category>blogs</category>
            <category>software development</category>
            <category>programming</category>
        </item>
        <item>
            <title><![CDATA[Code Organistation - Your own KDB/Q Library]]></title>
            <link>https://DefconQ.github.io/blog/Code Organistation - Your own KDB/Q library</link>
            <guid>https://DefconQ.github.io/blog/Code Organistation - Your own KDB/Q library</guid>
            <pubDate>Wed, 15 May 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[When I first started working as a software developer in an investment bank, I was initially placed in a C# team. After completing all the onboarding, installing Microsoft Visual Studio and gaining access to my team's codebase, I was finally able to have a look at the project I was going to work on. Little did I know, what nightmare I was about to face. Upon opening the project, I discovered that the average length of each class exceeded 15 thousand lines. Yes, you read that correctly; it's not a typo, but the shocking reality I was faced with. Navigating the code base was hard enough, but making a change without breaking anything seemed to be impossible. Luckily, I eventually transitioned to a team that embraced the concept of code organization.]]></description>
            <content:encoded><![CDATA[<p>When I first started working as a software developer in an investment bank, I was initially placed in a C# team. After completing all the onboarding, installing Microsoft Visual Studio and gaining access to my team's codebase, I was finally able to have a look at the project I was going to work on. Little did I know, what nightmare I was about to face. Upon opening the project, I discovered that the average length of each class exceeded 15 thousand lines. Yes, you read that correctly; it's not a typo, but the shocking reality I was faced with. Navigating the code base was hard enough, but making a change without breaking anything seemed to be impossible. Luckily, I eventually transitioned to a team that embraced the concept of code organization.</p>
<p>As your codebase expands and evolves, incorporating increasingly sophisticated functionality, it naturally becomes more complex and therefore more challenging to navigate, comprehend, and maintain. Hence, it's crucial to adopt a systematic approach to code organization. Doing so not only ensures extensibility and scalability but also simplifies development in the long run. Modularizing your code, as well as other various strategies exist for organizing code. In traditional object-oriented programming languages like Java or C#, organization typically revolves around classes, packages, or, on a broader scale, projects. However, there's no reason why a similar concept can't be applied in KDB/Q. In this blog post, I'll introduce a simple yet effective method of organizing your code. Additionally, I'll share some valuable tips and tricks gleaned from years of experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kdbq-code-organisation-an-example">KDB/Q Code organisation: an example<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#kdbq-code-organisation-an-example" class="hash-link" aria-label="Direct link to KDB/Q Code organisation: an example" title="Direct link to KDB/Q Code organisation: an example">​</a></h2>
<p>One easy way to organise your code involves splitting the code into a <strong>library file</strong> containing all Application Programming Interfaces (APIs) and an <strong>execute file</strong> containing initialization logic along with global variable definitions, loaded by a KDB/Q process upon start-up. You can then package your code into various modules or packages based on dataset, asset class, or any other classification of your preference, applying the library and execute file pattern consistently across them.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="power-packed-libraries-bundled-functionality">Power Packed Libraries: Bundled Functionality<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#power-packed-libraries-bundled-functionality" class="hash-link" aria-label="Direct link to Power Packed Libraries: Bundled Functionality" title="Direct link to Power Packed Libraries: Bundled Functionality">​</a></h3>
<p>To enhance the extensibility and scalability of your application, it's recommended to make your code as modular as possible. This can be accomplished by exposing the business logic of your code through an API and consolidating functions related to specific functionalities or features into individual packages. Let's consider the scenario where we aim to construct a library containing fundamental mathematical functions. The following code snippet demonstrates the contents of our library file:</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>Below code is a very basic, simplified example for illustrative purposes</p></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// math.library.q</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// This is a library to compute basic mathematical operations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// add: 	Function to perform addition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @param: 	x - first parameter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @param: 	y - second parameter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @return: 	sum of x and y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add:{[x;y]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :x+y;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// sub: 	Function to perform subtraction</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @param:	x - first parameter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @param:	y - second parameter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @return:	subtracts y from x</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sub:{[x;y]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :x-y;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// mult:	Function to perform multiplication</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @param:	x - first parameter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @param:	y - second parameter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// @result:	product of x and y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mult:{[x;y]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :x*y;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        };</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now, we've developed our very own, simple math library featuring essential functions that can be reused as required. We can effortlessly load this library into any process to leverage its functionality without having to duplicate any code. In the following section, we'll demonstrate how to utilize this library.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="seamless-integration-the-execute-file-solution">Seamless Integration: The Execute File Solution<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#seamless-integration-the-execute-file-solution" class="hash-link" aria-label="Direct link to Seamless Integration: The Execute File Solution" title="Direct link to Seamless Integration: The Execute File Solution">​</a></h3>
<p>While you can load your library into nearly any KDB/Q process allows for reusing the exposed APIs, another approach involves creating a file to be passed to a KDB/Q process during startup. Within this file, you can initialize global variables utilized within the process and establish an initialization function to be called upon the process's start. But examples speak louder than words, so let's check one out.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// math.exe.q</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// This is our execution file, the file we load when we start our KDB/Q process</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Loading the math library we created, exposing all the functions in it</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">system "l math.library.q";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Setting global variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num1:4;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num3:8;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// init:	Initialisation function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">init:{[]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// Within our initialisation function we define another number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	num2:5;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// We can now use the APIs defined in our libray</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	-1 "Adding number ",string[num1], " to number ", string[num2], " --&gt; result: ",string add[num1;num2];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -1 "Subtracting number ",string[a], " from number ", string[b], " --&gt; result: ",string add[b:9;a:3];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -1 "Multiplying number ",string[num2], " with number ", string[num3], " --&gt; result: ",string add[num2;num3];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// At then end of our execute file we call the init function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">init[];</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now, we can initiate a KDB/Q process and load our execute file upon startup. This action handles the loading of our library, initializes any global variables, and then executes the init function to complete the remaining initialization tasks.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Alexander@Alexanders-MacBook-Pro:~/repos/testCode|</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">⇒  qq math.exe.q</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KDB+ 4.0 2023.01.20 Copyright (C) 1993-2023 Kx Systems</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m64/ 4(24)core 8192MB Alexander alexanders-macbook-pro.local 127.0.0.1 EXPIRE 2025.02.21 XXXX@gmail.com KDB PLUS TRIAL #5018719</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Adding number 4 to number 5 --&gt; result: 9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Subtracting number 3 from number 9 --&gt; result: 12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Multiplying number 5 with number 8 --&gt; result: 13</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Above pattern is a powerful yet simple  technique for structuring your code and enhancing its modularity. By grouping similar functionalities into a library, you can conveniently reuse them as required, thereby eliminating redundant code duplication. Additionally, the execution file provides an easy method to configure your KDB/Q process and import all necessary libraries.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="leveraging-namespaces">Leveraging Namespaces<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#leveraging-namespaces" class="hash-link" aria-label="Direct link to Leveraging Namespaces" title="Direct link to Leveraging Namespaces">​</a></h2>
<p>In the upcoming section, I'll share two additional tips and tricks that I've found to be especially useful when organizing your code. These strategies not only contribute to cleaner code but also enhance its comprehensibility and ease of navigation.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="same-yet-different">Same Yet Different<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#same-yet-different" class="hash-link" aria-label="Direct link to Same Yet Different" title="Direct link to Same Yet Different">​</a></h3>
<p>At times, we find ourselves repeatedly implementing similar or identical functionalities, with only minor variations, such as asset class, instrument, or data source. This practice not only complicates the code and reduces readability but it can also be very confusing for users. They may wonder which function to use, what parameters to pass, and how the result appears. In the following section, I'll demonstrate how namespaces can simplify everyone's workflow.</p>
<p>Let's have a look at some code. First, we create a helper function, to verify whether a certain function exists or not. We can do so by using the <a href="https://code.kx.com/q/ref/key/" target="_blank" rel="noopener noreferrer"><code>key</code></a> operator. While the <code>key</code> operator is commonly used for retrieving the keys of a dictionary or table, it can also be used to verify whether a folder or file exists, or in our case, if a name is defined or not.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)exists:{not ()~key x}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)exists `a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)a:1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)exists `a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, we'll develop a set of functions that exhibit similar behavior but with slight variations. Specifically, in our scenario, he behaviour of the function differ based on the data source we want to retrieve. Additionally, we include a default function for cases where the user specifies a data source for which we haven't implemented a function yet. In such instances, we'll return the result using a default data source.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.bloomberg.getData:{: ([] sym:`AAPL`MSFT`GOOG; source:3#`BBG;price:3?10)}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.refinitive.getData:{: ([] sym:`AAPL`MSFT`GOOG; source:3#`REF;price:3?10)}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.default.getData:{: ([] sym:`AAPL`MSFT`GOOG; source:3#`INHOUSE;price:3?10)}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finally, all we have to do, is to create a function that we are going to expose to our users. The user will specify the data source they desire, and the function will handle the appropriate call to the corresponding function. Should the specified data source be unavailable, we'll return data obtained from a default source.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.equities.getData:{[datasource] </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// Create the namespace for the datasource and verify if it exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// If it exists, invoke the function and return result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// If it doesn't, invoke default function and return result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if[exists f:` sv (`.equities;datasource;`getData);:f[]]; :.equities.default.getData[] </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Below code should illustrate this behaviour</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// Verify if function exists. Note: typo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)exists `.equities.bloomber.getData</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Existing function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)exists `.equities.bloomberg.getData</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Creating the namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)` sv `.equities`bloomberg`getData</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`.equities.bloomberg.getData</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Combining above</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)exists ` sv `.equities`bloomberg`getData</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// individual functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.refinitive.getData[]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  source price</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL REF    8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MSFT REF    1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOOG REF    9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.bloomberg.getData[]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  source price</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL BBG    5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MSFT BBG    4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOOG BBG    6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// the .equities namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          | ::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bloomberg | ``getData!(::;{: ([] sym:`AAPL`MSFT`GOOG; source:3#`BBG;price:3?1..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">refinitive| ``getData!(::;{: ([] sym:`AAPL`MSFT`GOOG; source:3#`REF;price:3?1..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default   | ``getData!(::;{: ([] sym:`AAPL`MSFT`GOOG; source:3#`INHOUSE;price..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">getData   | {[datasource] if[exists f:` sv (`.equities;datasource;`getData);:..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Function exposed to and used by clients</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.getData[`bloomberg]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  source price</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL BBG    5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MSFT BBG    4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOOG BBG    9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.getData[`refinitive]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  source price</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL REF    2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MSFT REF    7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOOG REF    0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Function call with data source that doesn't exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Defaults to INHOUSE data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).equities.getData[`ICE]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sym  source  price</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AAPL INHOUSE 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MSFT INHOUSE 9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOOG INHOUSE 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As you can see, we've developed a feature that exposes just one simple API to our clients, ensuring ease and simplicity in their usage. Furthermore, we're now capable of effortlessly expanding our function's behavior and incorporating more functionalities for new data sources, requiring minimal code refactoring.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="namespaces-revealed-your-handy-dictionary">Namespaces Revealed: Your Handy Dictionary<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#namespaces-revealed-your-handy-dictionary" class="hash-link" aria-label="Direct link to Namespaces Revealed: Your Handy Dictionary" title="Direct link to Namespaces Revealed: Your Handy Dictionary">​</a></h3>
<p>In KDB/Q, namespaces essentially function as dictionaries. This feature allows us to create diverse behaviors without resorting to complex and confusing <code>if-else</code> statements. You can read more about namespaces <a href="https://code.kx.com/q4m3/12_Workspace_Organization/#121-namespaces" target="_blank" rel="noopener noreferrer">here</a>. Let's have a look at a simple example:</p>
<p>First we create the <code>.upd</code> namespace and define functions for (a table) trade and order</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q).upd.trade:{[x] `trade set x}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).upd.order:{[x] `order set x}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// We can inspect the .upd namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).upd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     | ::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">trade| {[x] `trade set x}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">order| {[x] `order set x}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Since a namespace operates like a dictionary, we can leverage indexing to access the appropriate function for various tables. By providing the table name as the first parameter, we effectively index into our namespace, triggering the function and utilizing the second parameter as its input.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q).upd[`trade;([] time:enlist .z.p; sym:`AAP; side:`buy; price:10; qty: 100)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`trade</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)trade</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">time                          sym side price qty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2024.05.15D07:40:13.902355000 AAP buy  10    100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q).upd[`order;([] time:enlist .z.p; sym:`AAP; side:`buy; qty: 100)]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">time                          sym side qty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2024.05.15D07:40:31.927281000 AAP buy  100</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gotchas">Gotchas<a href="https://defconq.github.io/blog/Code%20Organistation%20-%20Your%20own%20KDB/Q%20library#gotchas" class="hash-link" aria-label="Direct link to Gotchas" title="Direct link to Gotchas">​</a></h2>
<p>While an in-depth discussion of API design best practices exceeds the scope of this blog post, I'd like to offer two crucial suggestions for creating your APIs. Firstly, simplicity is key. An API should focus on accomplishing one single task, and one single task only. You should avoid the temptation to create a "solve every problem in the world API". Secondly, if your API extends beyond 10 lines of code (and indeed, in KDB/Q, 10 lines is quite substantial), consider refactoring and breaking it into smaller, more manageable functions. Additionally, it's advisable to avoid reliance on global variables within your functions. From my experience, this often leads to bugs or, worse, production outages. Instead, if a function requires a variable, pass it as a parameter. Depending on a globally defined variable not only introduces the risk of it being undefined but also renders your API less versatile, as it cannot be reused without redefining the global variable in another process.</p>
<p><strong>That's all folks. Happy Coding</strong></p>]]></content:encoded>
            <category>kdb/q</category>
            <category>good practice</category>
            <category>software development</category>
            <category>programming</category>
            <category>code organisation</category>
            <category>libraries</category>
        </item>
        <item>
            <title><![CDATA[DefconQ at 'Everything, Everywhere, All with KDB/Q' by Habla Computing]]></title>
            <link>https://DefconQ.github.io/blog/DefconQ at Everything, Everywhere, All with KDB/Q by Habla Computing</link>
            <guid>https://DefconQ.github.io/blog/DefconQ at Everything, Everywhere, All with KDB/Q by Habla Computing</guid>
            <pubDate>Sun, 07 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Mid January, I stumbled upon a KDB/Q meetup hosted by Habla Computing in Madrid, boasting an interesting lineup of talks and speakers. Spontaneously, I opted to seize the opportunity and booked a trip to the sunny capital of Spain to attend the event. Following the meetup, during the networking session, I had the pleasure of meeting Juan, a founding partner of Habla Computing, and Jesus, the VP of Research at Habla Computing, who warmly welcomed me into the small, but growing, Spanish KDB/Q community. Engaged in a stimulating conversation about our mutual enthusiasm for KDB/Q, Juan and Jesus extended a kind invitation for me to speak at their upcoming conference, an offer I eagerly embraced. Not only did I feel honoured to have the opportunity to share my expertise on KDB/Q, but I also take every chance to escape the rainy weather of the UK and spend some time in Spain.]]></description>
            <content:encoded><![CDATA[<p>Mid January, I stumbled upon a KDB/Q meetup hosted by <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a> in Madrid, boasting an interesting lineup of talks and speakers. Spontaneously, I opted to seize the opportunity and booked a trip to the sunny capital of Spain to attend the event. Following the meetup, during the networking session, I had the pleasure of meeting <a href="https://www.linkedin.com/in/jserranohidalgo/" target="_blank" rel="noopener noreferrer">Juan</a>, a founding partner of Habla Computing, and <a href="https://www.linkedin.com/in/jes%C3%BAs-l%C3%B3pez-gonz%C3%A1lez-98237248/" target="_blank" rel="noopener noreferrer">Jesus</a>, the VP of Research at Habla Computing, who warmly welcomed me into the small, but growing, Spanish KDB/Q community. Engaged in a stimulating conversation about our mutual enthusiasm for KDB/Q, Juan and Jesus extended a kind invitation for me to speak at their upcoming conference, an offer I eagerly embraced. Not only did I feel honoured to have the opportunity to share my expertise on KDB/Q, but I also take every chance to escape the rainy weather of the UK and spend some time in Spain.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="everything-everywhere-all-with-kdbq---the-event">Everything, Everywhere, All with KDB/Q - The Event<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#everything-everywhere-all-with-kdbq---the-event" class="hash-link" aria-label="Direct link to Everything, Everywhere, All with KDB/Q - The Event" title="Direct link to Everything, Everywhere, All with KDB/Q - The Event">​</a></h2>
<p>The long-awaited premiere of "Everything, Everywhere, All with KDB/Q" occurred on April 3rd, drawing a significant crowd of over one hundred online participants and 30 individuals who joined in person, making it a great success. During my presentation I shared some tips and trick for how to get started with KDB/Q as well as some insights into how to read, understand and learn KDB/Q, a topic I discussed in more details in one of my blog post available <a href="https://www.defconq.tech/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code" target="_blank" rel="noopener noreferrer">here</a>. I was joined on stage by amazing colleagues and peers of the KDB/Q industry, including <a href="https://www.linkedin.com/in/zan-buchanan-33b5a8148/" target="_blank" rel="noopener noreferrer">Zan Buchanan</a> from <a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a>, along with <a href="https://www.linkedin.com/in/aoife-clarke-638188136/" target="_blank" rel="noopener noreferrer">Aoife Clark</a> and <a href="https://www.linkedin.com/in/kellyr13/" target="_blank" rel="noopener noreferrer">Rebecca Kelly</a> from <a href="https://www.inqdata.ai/" target="_blank" rel="noopener noreferrer">INQDATA</a>. For those who missed it, you can access the event agenda and the recording of the live stream here:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="agenda">Agenda<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#agenda" class="hash-link" aria-label="Direct link to Agenda" title="Direct link to Agenda">​</a></h2>
<ul>
<li>Welcome - <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a></li>
<li><a href="https://www.linkedin.com/in/alexanderunterrainer" target="_blank" rel="noopener noreferrer">Alexander Unterrainer</a> (<a href="https://defconq.tech/" target="_blank" rel="noopener noreferrer">DefconQ</a> &amp; <a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a>): How to Read, Understand, and Learn KDB/Q.</li>
<li><a href="https://www.linkedin.com/in/zan-buchanan-33b5a8148/" target="_blank" rel="noopener noreferrer">Zan Buchanan</a> (<a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a>): Migrating kdb+ applications to the Cloud using Amazon FinSpace with Managed kdb Insights.</li>
<li><a href="https://www.linkedin.com/in/aoife-clarke-638188136/" target="_blank" rel="noopener noreferrer">Aoife Clarke</a> &amp; <a href="https://www.linkedin.com/in/kellyr13/" target="_blank" rel="noopener noreferrer">Rebecca Kelly</a> (<a href="https://www.inqdata.ai/" target="_blank" rel="noopener noreferrer">INQDATA</a>): INQDATA - Quant Data, Made Easy.</li>
</ul>
<iframe width="1120" height="630" src="https://www.youtube.com/embed/3MTDH5zjDJ0?si=H8CBNdJcsEIksHFv" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin"></iframe>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-speakers">The Speakers<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#the-speakers" class="hash-link" aria-label="Direct link to The Speakers" title="Direct link to The Speakers">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="zan-buchanan"><a href="https://www.linkedin.com/in/zan-buchanan-33b5a8148/" target="_blank" rel="noopener noreferrer">Zan Buchanan</a><a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#zan-buchanan" class="hash-link" aria-label="Direct link to zan-buchanan" title="Direct link to zan-buchanan">​</a></h3>
<p>Zan Buchanan is a seasoned KDB+ engineer with 6 years of hands-on experience in designing, creating, and maintaining KDB+ systems. Currently part of a dynamic team at Data Intellect, she thrives on solving complex challenges using KDB+. In her presentation "Migrating kdb+ applications to the Cloud using Amazon FinSpace with Managed kdb Insights", Zan explained how Data Intellect seamlessly integrated their open-source kdb framework, TorQ, with Amazon FinSpace with Managed kdb Insights. In her talk, Zan explored the essential considerations, challenges, and benefits of this integration. Additionally, Zan shared her and Data Intellect's experience with cloud-based solutions for financial data management using Managed kdb Insights.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aoife-clarke--rebecca-kelly"><a href="https://www.linkedin.com/in/aoife-clarke-638188136/" target="_blank" rel="noopener noreferrer">Aoife Clarke</a> &amp; <a href="https://www.linkedin.com/in/kellyr13/" target="_blank" rel="noopener noreferrer">Rebecca Kelly</a><a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#aoife-clarke--rebecca-kelly" class="hash-link" aria-label="Direct link to aoife-clarke--rebecca-kelly" title="Direct link to aoife-clarke--rebecca-kelly">​</a></h3>
<p>Aoife Clarke, Head of Business Development at INQDATA is responsible for cultivating enduring partnerships that fuel sustainable client success. Her extensive experience in sales and partnership management allows her to forge strategic alliances built on mutual trust and respect. Aoife champions a client-centric approach, fostering long-term relationships with both partners and clients, ensuring aligned goals and consistent value delivery. Her dedication to client advocacy ensures that INQDATA not only delivers exceptional results today, but lays the foundation for continued success in the future.</p>
<p>Rebecca Kelly, Head of AI and Analytics at INQDATA, is an expert in high-performance software development, specializing in financial tick data analysis. With a background in mathematics and a master's degree in AI, Rebecca's expertise lies at the intersection of data science and technology. She was honoured as the Women in Tech New York Evangelist of the Year in 2020, recognizing her commitment to diversity and innovation in the industry. As a speaker, Rebecca shares insights into AI, analytics, and finance, inspiring audiences with her knowledge and experience.</p>
<p>Aoife and Rebecca introduced <a href="https://www.inqdata.ai/" target="_blank" rel="noopener noreferrer">INQDATA</a>, the latest innovative startup leveraging KX technology to provide MDaaS on the Cloud, showcasing the services, use cases and solutions INQDATA has to offer. Rebecca also provided an introduction to the timeseries analysis capabilities of KX Technology for the KDB/Q learners in the audience as well as some notes on architecting KX Technology in Cloud environments for the more experienced KX users.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="alexander-unterrainer"><a href="https://www.linkedin.com/in/alexanderunterrainer" target="_blank" rel="noopener noreferrer">Alexander Unterrainer</a><a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#alexander-unterrainer" class="hash-link" aria-label="Direct link to alexander-unterrainer" title="Direct link to alexander-unterrainer">​</a></h3>
<p>As the founder of <a href="https://defconq.tech/" target="_blank" rel="noopener noreferrer">DefconQ</a>, a KDB/Q tech blog, my presentation provided valuable insights and strategies to demystify the challenges that learners often encounter when starting out with KDB/Q. Drawing inspiration from the comprehensive guide found in the corresponding blog <a href="https://www.defconq.tech/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code" target="_blank" rel="noopener noreferrer">post</a> at <a href="http://www.defconq.tech/" target="_blank" rel="noopener noreferrer">www.defconq.tech</a>, my presentation aimed to equip attendees with the essential tools to accelerate their proficiency in KDB/Q.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-companies">The Companies<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#the-companies" class="hash-link" aria-label="Direct link to The Companies" title="Direct link to The Companies">​</a></h2>
<p>Each speaker represented a leading company within their respective domain, drawing upon years, if not decades, of invaluable experience. With backgrounds spanning various investment banks, global financial market practitioners, and financial market technology consultancies, the collective expertise of the panelists formed an ideal lineup for this event.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="data-intellect---big-data-problems---meet-smart-data-solutions"><a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a> - Big Data Problems - Meet Smart Data Solutions<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#data-intellect---big-data-problems---meet-smart-data-solutions" class="hash-link" aria-label="Direct link to data-intellect---big-data-problems---meet-smart-data-solutions" title="Direct link to data-intellect---big-data-problems---meet-smart-data-solutions">​</a></h3>
<p>At core, <a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a> is a data and technology consultancy firm. Their key key area of expertise is financial and capital markets technology solutions however, the utility of these solutions allows Data Intellect to apply fintech data expertise to other industries such as smart energy and healthcare. This proprietary offering is complemented by a wealth of experience in data engineering, electronic trading systems, data capture applications, regulatory and compliance systems and middle and back office enterprise web solutions.</p>
<p>Some of the services provided by Data Intellect include, but are not limited to:</p>
<ul>
<li><strong>Time Series Data and KDB+</strong>: Data Intellect understands the challenges and opportunities associated with managing and analysing time series data. By applying those same skills, Data Intellect can build and optimize solutions using other technology stacks and in other sectors.</li>
<li><strong>Performance-based Software Enginerring</strong>: Data Intellect's performance software-engineering team helps design, build and tune modern software solutions using a blend of performant technologies coupled with leading-edge innovations, all backed by a wealth of industry-based experience and knowledge.</li>
<li><strong>Data Analytics &amp; Engineering</strong>: The team around Data Intellect is experienced in all aspects of interpreting, representing and visualizing different types of data across market-leading platforms and environments. They help clients maximize the potential of their data to enhance their decision making.</li>
<li><strong>Solution Delivery</strong>: From the early stages of planning and scheduling to the nuances of managing delivery timelines and achieving business outcomes, Data Intellect team will guide your project from conception to completion.</li>
<li><strong>KDB+ Training</strong>: Data Intellect provides tailored training delivered by their dedicated training team in a classroom or virtual setting via our online training portal complete with videos, assessments, puzzles and progress monitoring. Their training curriculum covers all their services from KDB+, C++ to Data Analytics and can be customised to your set-up.</li>
</ul>
<p>If you would like to have more information about Data Intellect, please visit their website <a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">https://dataintellect.com</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="inqdata"><a href="https://www.inqdata.ai/" target="_blank" rel="noopener noreferrer">INQDATA</a><a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#inqdata" class="hash-link" aria-label="Direct link to inqdata" title="Direct link to inqdata">​</a></h3>
<p>INQDATA simplifies market data management with a cloud based solution that handles all aspects of data ingestion, storage, preparation, and quality control. Our high-performance environment, powered by the worlds fastest timeseries database kdb+, gives financial institutions faster access to cleansed, real-time, and historical datasets on-demand. With INQDATA, experience seamless data integration without the infrastructure, support or maintenance hassle.</p>
<p>INQDATA provides continuous intelligently curated data ready to be used without limitations:</p>
<ul>
<li>Programmatically ingests and hydrates data from data providers's.</li>
<li>Implements sophisticated data quality functionality including codified cleansing rules and a rich, configurable user driven data tagging infrastructure.</li>
<li>Utilises kdb+ to provide a highly performant data storage distribution framework, dynamically scaling with user demand.</li>
<li>Provides a seamless API for data access in customer familiar tooling (Python, kdb+, R, etc…).</li>
<li>Developed to fully leverage the benefits of cloud architecture.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="defconq"><a href="https://defconq.tech/" target="_blank" rel="noopener noreferrer">DefconQ</a><a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#defconq" class="hash-link" aria-label="Direct link to defconq" title="Direct link to defconq">​</a></h3>
<p>If you've stumbled upon this blog post, chances are you're already familiar with DefconQ. However, if this happens to be your first visit, allow me to offer a brief introduction. DefconQ is a technology blog dedicated to all things KDB/Q. Initially conceived to aid individuals in grasping the fundamentals of KDB/Q, my aim is to simplify the complexities of the Q programming language, along with essential KDB/Q language and architecture concepts. Encountering challenges during my own journey with KDB/Q and grappling with its steep learning curve, I founded DefconQ—a KDB/Q tech blog that I wished had existed when I first embarked on this endeavor.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-hosts---habla-computing">The Hosts - <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a><a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#the-hosts---habla-computing" class="hash-link" aria-label="Direct link to the-hosts---habla-computing" title="Direct link to the-hosts---habla-computing">​</a></h2>
<p>Finally, I'm excited to introduce the host of this fantastic event: <a href="https://hablapps.com/" target="_blank" rel="noopener noreferrer">Habla Computing</a>, your trusted companion in software architecture. Led by Juan, the founding partner, and Jesus, the VP of Research, Habla Computing drives digital transformation through functional programming and language-driven architectures. Among their array (pun intended) of services, Habla Computing offers:</p>
<ul>
<li>Architecture: You can count on their knowledge and experience in designing well-founded libraries, frameworks and applications, to grow your codebase from a solid start or re-engineer major components from solid principles</li>
<li>Consulting: Habla Computing helps companies to ensure that technology issues are kept under control during the whole project life-cycle.</li>
<li>Training: Condensed training in Scala and KDB/Q as well as tailor-maded courses for you or your development team.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>In summary, the event was a resounding success. Although the turnout in Madrid could have been higher, we were delighted to be joined by over a hundred attendees online from various corners of the globe. The lower attendance in Madrid can be attributed to competing events and the allure of enjoying the event from the comfort of one's home. Personally, I thoroughly enjoyed meeting colleagues and peers and had a great time presenting. It's inspiring to witness the expansion of the KDB/Q community beyond traditional financial hubs like London or New York. Additionally, I'm pleased to see the growing presence of female developers, highlighted by the fact that I was the only male speaker at the event. I am eagerly looking forward to many more events like this and I am committed to attending, whether as a speaker or as an attendee. .</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pictures">Pictures<a href="https://defconq.github.io/blog/DefconQ%20at%20Everything,%20Everywhere,%20All%20with%20KDB/Q%20by%20Habla%20Computing#pictures" class="hash-link" aria-label="Direct link to Pictures" title="Direct link to Pictures">​</a></h2>
<p><img decoding="async" loading="lazy" alt="Alex" src="https://defconq.github.io/assets/images/alex-91c07c249b972493c495999a4945b36a.webp" width="2000" height="1500" class="img_ev3q">
(Alexander presenting: How to get started with KDB/Q)</p>
<p><img decoding="async" loading="lazy" alt="Group" src="https://defconq.github.io/assets/images/group-90747da5f5991e06b0319a02f656180c.webp" width="1600" height="1200" class="img_ev3q">
(The speakers and the hosts. From left to right: Juan, Alexander, Zan, Aoife, Rebecca, Jesus)</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>meetup</category>
            <category>kdb/q community</category>
            <category>DefconQ</category>
            <category>Habla Computing</category>
            <category>Data Intellect</category>
            <category>INQDATA</category>
            <category>Madrid</category>
        </item>
        <item>
            <title><![CDATA[The importance of code review - Four eyes see more than two]]></title>
            <link>https://DefconQ.github.io/blog/The importance of code review - Four eyes see more than two</link>
            <guid>https://DefconQ.github.io/blog/The importance of code review - Four eyes see more than two</guid>
            <pubDate>Sun, 17 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Over the weekend, I performed an update on the version of Docusaurus, the documentation framework utilized for my blog. A major update had been released some time ago, and due to my limited enthusiasm for front-end development, I had been postponing this task as long as possible. However, I finally decided to tackle it this weekend. After reviewing the recommended upgrade instructions provided in the official documentation, I prepared all necessary steps and then started the upgrade. Incrementally I went through all steps, running my blog locally on my laptop, ensuring that I wouldn't break anything. After completing the upgrade, I conducted one final verification to confirm that everything was running as expected in my browser. Satisfied with the results, I committed my changes and pushed them to the repository of my blog.]]></description>
            <content:encoded><![CDATA[<p>Over the weekend, I performed an update on the version of <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>, the documentation framework utilized for my blog. A major update had been released some time ago, and due to my limited enthusiasm for front-end development, I had been postponing this task as long as possible. However, I finally decided to tackle it this weekend. After reviewing the recommended upgrade instructions provided in the official documentation, I prepared all necessary steps and then started the upgrade. Incrementally I went through all steps, running my blog locally on my laptop, ensuring that I wouldn't break anything. After completing the upgrade, I conducted one final verification to confirm that everything was running as expected in my browser. Satisfied with the results, I committed my changes and pushed them to the repository of my blog.</p>
<p>Now, all that remained was deploying the new version to <a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">Github Pages</a>. I executed the command <code>USE_SSH=true yarn deploy</code> as I typically do, pressed enter, and awaited the customary <code>[INFO]</code> messages. However, instead of the expected outcome, I was confronted with a bright, red error message.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[ERROR] Deployment of the build output failed.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: Running "git push" command failed. </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Does the GitHub user account you are using have push access to the repository?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Ugh, of course. Something went wrong. However, my blog ran smoothly locally. I meticulously reviewed all my steps again, compared the <code>docusaurus.config.js</code> file with the new <code>docusaurus.config.ts</code> script I had to generate as part of the transition from JavaScript to TypeScript. Everything appeared to be in order. So why wasn't it functioning properly? The error message resembled an <code>SSH</code> issue, prompting me to double-check all my GIT configurations, and even recreate <code>SSH</code> keys, but to nothing.</p>
<p>Then, I proceeded with the typical routine every developer follows when encountering an issue: I searched for help on the internet, StackOverflow, Google search, blogs, forums, but unfortunately, none of the resources I explored offered a solution to my dilemma. Eventually, I stumbled upon a post suggesting that I delete the gh-pages branch of my repository — the branch responsible for hosting my blog online - and recreating it might resolve the issue. This sounded like a plausible remedy, so I proceeded accordingly. Regrettably, the solution did not rectify my problem; in fact, it exacerbated it. Deleting the branch responsible for hosting my blog rendered it inaccessible. While I may not boast millions of readers, the embarrassment of visitors encountering an offline blog was real.</p>
<p>I began to feel a tinge of concern and proceeded to review everything one more time, attempting a few additional troubleshooting steps, but nothing worked. At this point, my last resort was seeking assistance from a more seasoned developer. Fortunately, one of my close friends from university happened to be one of those exceptional talents - often referred to as <strong>10X developers</strong> in the tech industry. Regardless of the topic at hand, he possessed the ability to grasp concepts within minutes. Most technical challenges that had stumped me in the past seemed trivial to him. While the only programming language he wasn't well-versed in happened to be KDB/Q, I was fortunate that this particular issue did not pertain to that domain. Armed with a few screenshots and a concise explanation detailing my efforts and attempted solutions, I composed a message and eagerly awaited his response.</p>
<p>Knowing that he had recently welcomed his second child and that my trivial web development issues were understandably not a priority compared to his new responsibilities, I decided to take a leisurely stroll with my girlfriend and some friends. Several hours later, I received a response from him—a few links to potential solutions, all of which I had already explored. Following that, he inquired about my GIT repository URL, username, and a few other details. After confirming these details, I received a smiley face emoji in response. It was then pointed out to me that I had a typo in my GIT username—I had mistakenly written De<strong>c</strong>fonQ rather than De<strong>f</strong>conQ. With this embarrassing oversight corrected, I was finally able to deploy my blog once again, and it was back up and running as usual.</p>
<p>This experience, reminded me once again, about the significance of code review and why it should be an integral part of every software development life cycle. Which brings me to the main topic of this blog post: <strong>code review</strong>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-code-review-and-why-you-should-practice-it">What is code review and why you should practice it<a href="https://defconq.github.io/blog/The%20importance%20of%20code%20review%20-%20Four%20eyes%20see%20more%20than%20two#what-is-code-review-and-why-you-should-practice-it" class="hash-link" aria-label="Direct link to What is code review and why you should practice it" title="Direct link to What is code review and why you should practice it">​</a></h2>
<p>In the software development industry, code review is a fundamental practice that involves systematically examining code changes made by developers. It serves as a crucial quality assurance measure, ensuring that code meets standards, is free of bugs, and aligns with project requirements. Code review is important for several reasons:</p>
<ul>
<li>Firstly, it provides an opportunity for developers to have their code reviewed by their peers ensuring certain <strong>quality standards and controls</strong>, receiving valuable feedback on potential improvements or adherence to best practices.</li>
<li><strong>Sharing and transferring knowledge</strong>: Code reviews are a great opportunity to share or gain expertise. The depth of this knowledge transfer varies widely, however, there will always be some level of information exchange.</li>
<li><strong>Spreading ownership</strong>: Code reviews  allow developers to review code written by others, facilitating learning and deeper understanding of the system being developed. This will foster mutual code ownership. It's common for a developer to become solely responsible for a specific part of the codebase due to their familiarity with it. While this might offer short-term advantages, it often leads to long-term drawbacks. When ownership of the code is shared among team members, it promotes motivation and autonomy within the team.</li>
<li>Moreover, code review encourages <strong>collaboration</strong> within teams, as developers can provide constructive feedback to one another and engage in discussions about software development practices.</li>
<li><strong>Unify development styles</strong>: Each developer has their unique approaches and preferences when it comes to implementing software. Code reviews play a crucial role in bridging the gap between individual development styles, thereby promoting a more unified codebase. This unification occurs through both high-level discussions concerning architecture and software design, as well as micro-level continuous integration checks like enforcing coding style consistency.</li>
<li>For junior developers, code review offers a unique chance to benefit from the experience and expertise of more seasoned developers.</li>
</ul>
<p>For a comprehensive guide on code reviews and best practices, make sure to read the excellent article <a href="https://www.swarmia.com/blog/a-complete-guide-to-code-reviews/" target="_blank" rel="noopener noreferrer">"A Complete Guide to Code Review"</a> by Kimmo Brunfeldt.</p>
<p>Ultimately, no code should be deployed to a production environment without undergoing a formal code review and obtaining the approval of at least two other developers, a best practice that development teams should adhere to. <strong>DefconQ</strong> on the other hand, will simply postpone future front end updates or outsource it to an experts. Volunteers are more than welcome.</p>
<p><strong>Resources</strong>:
<a href="https://www.swarmia.com/blog/a-complete-guide-to-code-reviews/" target="_blank" rel="noopener noreferrer">A complete guide to code reviews</a> by Kimmo Brunfeldt</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>code review</category>
            <category>good practice</category>
            <category>software development</category>
            <category>programming</category>
        </item>
        <item>
            <title><![CDATA[Advent of Code -  Daily Coding Practice]]></title>
            <link>https://DefconQ.github.io/blog/Advent of Code -  Daily Coding Practice</link>
            <guid>https://DefconQ.github.io/blog/Advent of Code -  Daily Coding Practice</guid>
            <pubDate>Thu, 30 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[It's this time of the year again: it's getting cold and dark outside, the days are getting shorter, Chris Rea is driving home, Santa is coming to town and all Mariah Carey wants for Christmas is you. As business requests hopefully slow down, and we enter code freeze, it's a good time to reflect on the past year and spend some time on sharpening our brains and KDB/Q coding skills. And what could possibly be better for that than tackling the daily coding challenges presented by Advent of Code?]]></description>
            <content:encoded><![CDATA[<p>It's this time of the year again: it's getting cold and dark outside, the days are getting shorter, Chris Rea is driving home, Santa is coming to town and all Mariah Carey wants for Christmas is you. As business requests hopefully slow down, and we enter code freeze, it's a good time to reflect on the past year and spend some time on sharpening our brains and KDB/Q coding skills. And what could possibly be better for that than tackling the daily coding challenges presented by <a href="https://adventofcode.com/" target="_blank" rel="noopener noreferrer">Advent of Code</a>?</p>
<p>Advent of Code is a daily coding challenge presented in the form of an advent calendar, running from December 1st to Christmas Day, December 25th. Initially created in 2015 by <a href="https://twitter.com/ericwastl" target="_blank" rel="noopener noreferrer">Eric Wastl</a>, it has become widely popular among programmers across various programming languages.</p>
<p>The challenges are in form of small programming puzzles designed for diverse skill sets and levels that can be solved in any programming language you like. Participants use these puzzles for interview preparation, company training, university coursework, practice problems, engaging in speed contests, or challenging one another. You also don't need a computer science background in order to participate; a basic understanding of programming and some problem-solving skills are sufficient to make progress. Moreover, a high-end computer is not a requirement; each problem is designed to have a solution that runs within 15 seconds on ten-year-old hardware.</p>
<p>Each day at midnight EST, a new problem is revealed, comprising two small problems that increase in difficulty as you advance through December. Solving each part of the problem correctly earns you one star. For those of you who love a competition, there are leaderboards, where earning the first star is worth 100 points, the second is 99, and so forth, down to 1 point for 100th place.</p>
<p>While KDB/Q may not always be the optimal programming language for solving all puzzles, it serves as an excellent platform to sharpen your KDB/Q skills and cultivate creative problem-solving abilities. It provides an opportunity to tackle challenges that might not be encountered in your daily work routine. If you ever get stuck in one of the problems or don't feel experienced enough, don't lose hope. There are plenty of developers who share their solutions on LinkedIn or <a href="https://community.kx.com/" target="_blank" rel="noopener noreferrer">KX Community</a> and you can learn a lot by looking at their solutions.</p>
<p>Get your keyboards ready, Advent of Code starts tomorrow! Join the fun <a href="https://adventofcode.com/" target="_blank" rel="noopener noreferrer">here</a></p>
<p>Happy Coding!</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>AOC</category>
            <category>Challenges</category>
            <category>Practice</category>
        </item>
        <item>
            <title><![CDATA[Where to find help]]></title>
            <link>https://DefconQ.github.io/blog/Where to find help</link>
            <guid>https://DefconQ.github.io/blog/Where to find help</guid>
            <pubDate>Mon, 18 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[So, you've delved into 'Q for Mortals' and a few other fundamental references I shared with you in my previous post, immersed yourself in code, tutorials, and successfully tackled your initial tasks. However, as you progress, you inevitably encounter that frustrating error. You try the different approaches you normally attempt when running into an error but you've exhausted every strategy, set breakpoints, meticulously stepped through the code, and yet, you can't figure out what's wrong with your code. Maybe you've encountered a challenge you are unsure how to tackle or perhaps you simply want to ensure your solution is optimal, whether in terms of execution time or memory usage. In any of these scenarios, the need for assistance arises, and in this blog post, we'll look at the different options for help with your KDB/Q challenges.]]></description>
            <content:encoded><![CDATA[<p>So, you've delved into 'Q for Mortals' and a few other fundamental references I shared with you in my previous <a href="https://defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">post</a>, immersed yourself in code, tutorials, and successfully tackled your initial tasks. However, as you progress, you inevitably encounter that frustrating error. You try the different approaches you normally attempt when running into an error but you've exhausted every strategy, set breakpoints, meticulously stepped through the code, and yet, you can't figure out what's wrong with your code. Maybe you've encountered a challenge you are unsure how to tackle or perhaps you simply want to ensure your solution is optimal, whether in terms of execution time or memory usage. In any of these scenarios, the need for assistance arises, and in this blog post, we'll look at the different options for help with your KDB/Q challenges.</p>
<p>In the early days of KDB/Q (technically it was K back then but lets keep the history of KDB/Q for another blog post), comprehensive documentation and online resources were scarce. For those utilizing KDB/Q in a professional capacity, one option was to register with your work email address on a listbox/topicbox email distribution list. Here, you could post your questions or inquiries, relying on the hope that experienced and knowledgeable developers within the community would offer responses. Nevertheless, if you weren't using KDB/Q in a professional context or attempted to learn it independently, there were limited documentation and resources at your disposal.</p>
<p>Over time, the KDB/Q community expanded, leading to more comprehensive documentation and increased resources for seeking assistance. While KDB/Q doesn't enjoy the same level of all-pervasive online information as Python, where a simple Google search for 'How to do XYZ in Python' yields countless results, you can still depend on the two sources mentioned below to access support.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kx-community">KX Community<a href="https://defconq.github.io/blog/Where%20to%20find%20help#kx-community" class="hash-link" aria-label="Direct link to KX Community" title="Direct link to KX Community">​</a></h2>
<p>In September 2021, KX launched the KX Community, an online forum designed to serve as a centralized hub for all your KDB/Q inquiries. Within this forum, queries and issues are categorized into various discussion topics, including KDB/Q, KX Solutions or Products, KX Academy (which I previously discussed <a href="https://defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources#kx-academy" target="_blank" rel="noopener noreferrer">here</a>), KX Insight, or their latest offering, KDB.AI.</p>
<p>The forum is open to anyone seeking answers related to KDB/Q, offering a user-friendly interface. It enjoys active participation from KDB/Q developers within the industry, and, notably, it is closely monitored by seasoned developers from KX. These KX experts serve as forum administrators and actively engage by responding to inquiries and questions.</p>
<p>In my opinion, the KX Community serves as an excellent resource for assistance when you encounter challenges. Additionally, it provides a valuable platform for acquiring knowledge about prevalent issues and their corresponding resolutions. Whether you're striving to comprehend the intricacies of KDB/Q, grappling with an architectural design query, or seeking insights into any of the KX products, this forum proves highly beneficial.</p>
<p>If you haven't signed up yet, go and register yourself <a href="https://community.kx.com/" target="_blank" rel="noopener noreferrer">here</a></p>
<p><img decoding="async" loading="lazy" alt="KX Community" src="https://defconq.github.io/assets/images/KXCommunity1-6568cec424c81a7b71bdec9196332c30.png" width="1412" height="990" class="img_ev3q">
<img decoding="async" loading="lazy" alt="KX Community" src="https://defconq.github.io/assets/images/KXCommunity2-be3e7a89de0514ad917d76eac5ec4837.png" width="1371" height="1081" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="stackoverflow">Stackoverflow<a href="https://defconq.github.io/blog/Where%20to%20find%20help#stackoverflow" class="hash-link" aria-label="Direct link to Stackoverflow" title="Direct link to Stackoverflow">​</a></h2>
<p>If you're a developer, you're likely familiar with StackOverflow. However, for those who may not have encountered StackOverflow before, here's an analogy: StackOverflow is to programmers what Google is to non-programmers - an essential website for finding answers to all your questions.</p>
<p>As of the time of this writing, StackOverflow boasts a vast repository of 23,908,328 questions spanning the realms of programming, software development, and similar domains. Out of these 23 Million questions, a mere 2,269 questions are related to KDB/Q. Yes, you read that right, meaning that only <strong>0.0095%</strong> of all questions on Stackoverflow are related to KDB/Q. That's pretty low if you ask me. To provide a comparison, consider Python, one of the widely-used mainstream programming languages, which boasts a staggering 2.1 million questions, equivalent to approximately 9%.</p>
<p>The relatively limited number of KDB/Q questions on StackOverflow is combined with a lack of a robust categorization. While I consider StackOverflow a valuable platform for posting questions, I must also acknowledge that it may not offer the same level of structured organization as the KX Community.  However, it's worth mentioning that there is an active participation from experienced developers who consistently respond to KDB/Q queries, and I've personally come across valuable solutions and code snippets within the StackOverflow KDB/Q section as well.</p>
<p>I consider Stack Overflow to be a valuable supplement to your repertoire of resources for addressing KDB/Q-related queries.</p>
<p><img decoding="async" loading="lazy" alt="Stackoverflow" src="https://defconq.github.io/assets/images/Stackoverflow-ea88f4c118588bdb814af2c0b911414d.png" width="1446" height="1065" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="mentorship">Mentorship<a href="https://defconq.github.io/blog/Where%20to%20find%20help#mentorship" class="hash-link" aria-label="Direct link to Mentorship" title="Direct link to Mentorship">​</a></h2>
<p>Another approach to seek solutions for your KDB/Q queries is to explore the possibility of finding a mentor. Whether you discover a mentor within your current team or organization, or seek one externally, I recommend initiating a mentor-mentee connection with an experienced KDB/Q developer. While some highly skilled KDB/Q developers may appear intimidating at first, you may be pleasantly surprised by the willingness of most of them to offer assistance and guidance.</p>
<p>To summarize, the combination of KX Community and StackOverflow, along with the option of connecting with a mentor or a knowledgeable colleague, provides a comprehensive support system to address any KDB/Q-related challenges you may encounter.</p>
<p>Happy Coding!</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>Help</category>
            <category>StackOverFlow</category>
            <category>KX Community</category>
            <category>Mentorship</category>
            <category>KDB Beginner</category>
            <category>KDB Learning</category>
        </item>
        <item>
            <title><![CDATA[How to Read, Understand and Learn KDB/Q code]]></title>
            <link>https://DefconQ.github.io/blog/How to Read, Understand and Learn KDB/Q code</link>
            <guid>https://DefconQ.github.io/blog/How to Read, Understand and Learn KDB/Q code</guid>
            <pubDate>Mon, 11 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In my previous blog post, I shared my favourite Go-To KDB/Q Learning Resources to help you to get started. However, as you dive deeper into the KDB/Q programming language and you begin to read and review other's code you might experience a slight sense of overwhelm. Two main characteristics of KDB/Q, namely its terseness and and its left-of-right evaluation order (KDB/Q expressions are evaluated left-of-right which equates to expressions are evaluated right-to-left), can pose initial challenges for new KDB/Q developers. It's important to overcome these hurdles and become familiar with these features as you progress.]]></description>
            <content:encoded><![CDATA[<p>In my previous blog post, I shared my favourite <a href="https://defconq.tech/blog/Go-To%20KDB/Q%20Learning%20Resources" target="_blank" rel="noopener noreferrer">Go-To KDB/Q Learning Resources</a> to help you to get started. However, as you dive deeper into the KDB/Q programming language and you begin to read and review other's code you might experience a slight sense of overwhelm. Two main characteristics of KDB/Q, namely its terseness and and its <a href="https://code.kx.com/q4m3/4_Operators/#412-left-of-right-evaluation" target="_blank" rel="noopener noreferrer">left-of-right</a> evaluation order (KDB/Q expressions are evaluated left-<strong>of</strong>-right which equates to expressions are evaluated right-<strong>to</strong>-left), can pose initial challenges for new KDB/Q developers. It's important to overcome these hurdles and become familiar with these features as you progress.</p>
<p>When you start looking at other's KDB/Q code for the first time, it can be akin to a five-year-old attempting to independently assemnle the gigantic Lego Millenium Falcon immediately after learning how to connect just two Lego pieces. The experience can be overwhelming, leaving you unsure where to start. The image below serves as an illustration of the described sensation.</p>
<p><img decoding="async" loading="lazy" alt="Lego Millenium Falcon" src="https://defconq.github.io/assets/images/lego_millenium_falcon-cdf46798eb4ee41eb41b725b9e689e5f.webp" width="1200" height="900" class="img_ev3q"></p>
<p>When you assess your current knowledge in relation to the task at hand, you might perceive it as inadequate and insufficient.</p>
<p><img decoding="async" loading="lazy" alt="Lego scale" src="https://defconq.github.io/assets/images/lego_map-2d097343c2f8f40d5cc116631b0ed3af.png" width="1200" height="675" class="img_ev3q"></p>
<p>Nevertheless, if we deconstruct the code into smaller components and methodically examine it step by step, expression by expression, we often come to realize that the code we're grappling with may not always be as daunting as initially presumed.</p>
<p><img decoding="async" loading="lazy" alt="Lego Block" src="https://defconq.github.io/assets/images/lego_block-10f57693d0c0e81bb8b38c8eb14a34b7.jpg" width="1594" height="1133" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dividing-code-into-smaller-components">Dividing code into smaller components<a href="https://defconq.github.io/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code#dividing-code-into-smaller-components" class="hash-link" aria-label="Direct link to Dividing code into smaller components" title="Direct link to Dividing code into smaller components">​</a></h2>
<p>That's precisely the method we'll employ in this blog post. We'll dissect a line of KDB/Q code that could appear complex initially - maybe we won't even grasp its purpose at first glance. However, by breaking it down into small, discrete expressions and evaluating them sequentially, we'll unravel its underlying logic and functionality.</p>
<p>We are accomplishing this by examining a fascinating pattern introduced by Stephen Taylor, the KX Librarian, as outlined in this <a href="https://community.kx.com/t5/Community-Blogs/Meet-the-Zen-monks/ba-p/11604" target="_blank" rel="noopener noreferrer">post</a>. Take a glance at the code provided below and take a moment to make an educated guess about its purpose.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q){x{y _ x}/1 -1*(1 reverse\" "&lt;&gt;x)?'1b}"   Trim the spaces.  "</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Solution here </summary><div><div class="collapsibleContent_i85q"><p></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="did-you-guess-right-the-anonymous-function-or-lambda-trims-all-the-spaces-before-and-after-the-text-the-1-functioninput-pattern-applies-a-function-and-not-applies-it">Did you guess right? The anonymous function (or lambda) trims all the spaces before and after the text. The <code>1 function\input</code> pattern applies a function and not applies it<a href="https://defconq.github.io/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code#did-you-guess-right-the-anonymous-function-or-lambda-trims-all-the-spaces-before-and-after-the-text-the-1-functioninput-pattern-applies-a-function-and-not-applies-it" class="hash-link" aria-label="Direct link to did-you-guess-right-the-anonymous-function-or-lambda-trims-all-the-spaces-before-and-after-the-text-the-1-functioninput-pattern-applies-a-function-and-not-applies-it" title="Direct link to did-you-guess-right-the-anonymous-function-or-lambda-trims-all-the-spaces-before-and-after-the-text-the-1-functioninput-pattern-applies-a-function-and-not-applies-it">​</a></h4><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q){x{y _ x}/1 -1*(1 reverse\" "&lt;&gt;x)?'1b}"   Trim the spaces.  "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Trim the spaces."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p></p></div></div></details>
<p>It's quite surprising how much can be achieved with such little code, isn't it? Now, let's break it down methodically, taking each component into careful consideration.</p>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_BuS1"><p>Remember, KDB/Q is evaluated left-<strong>of</strong>-right, meaning we have to read our code right-<strong>to</strong>-left.</p></div></div>
<p>The first code section we examine is the following.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">(expression)?'1b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The '?' operator, along with the '!' operator, arguably possesses the greatest number of overloads among KDB/Q operators. In this specific context, the '?' operator functions as a <a href="https://code.kx.com/q/ref/find/" target="_blank" rel="noopener noreferrer"><strong>'find'</strong></a> operation.</p>
<p>Let's look at an example. Suppose we have a list of integers and we would like to find the index at which that element occurs. We can do this the following way:</p>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_BuS1"><p>Indexing starts at 0 in KDB/Q</p></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)10 5 4 3 2?3  // 3 occurs at the 4th position in the list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-danger admonition_xJq3 alert alert--danger"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>danger</div><div class="admonitionContent_BuS1"><p><code>?</code> find only returns the first index of the elemnt you are searching for</p></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)10 5 4 3 2 3?3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>It's strongly advised to have the <a href="https://code.kx.com/q/ref/" target="_blank" rel="noopener noreferrer">KX reference card</a> readily available, particularly when you're starting your KDB/Q journey and are still becoming acquainted with various operators, their overloads, and functionalities.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-power-of-iterators-and-their-applications">The power of Iterators and their applications<a href="https://defconq.github.io/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code#the-power-of-iterators-and-their-applications" class="hash-link" aria-label="Direct link to The power of Iterators and their applications" title="Direct link to The power of Iterators and their applications">​</a></h2>
<p>The <code>'</code> operator exemplifies another unique concept within KDB/Q, which is the concept of <a href="https://code.kx.com/q/basics/iteration/" target="_blank" rel="noopener noreferrer">iterators</a>. Iterators can be described as functions that take values as arguments and generate new functions that apply those values repetitively. In this specific instance, the <code>'</code> operator signifies <a href="https://code.kx.com/q/ref/maps/#each" target="_blank" rel="noopener noreferrer">"each"</a> and applies a value item-by-item to a dictionary, list, or conforming combinations of lists and dictionaries.</p>
<p>Allow me to demonstrate this behavior with a straightforward example. Imagine we have a list of strings and aim to determine the length of each string:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)list:("Hello";"World";"lorem";"ipsum")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)count list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As you can see, <code>count list</code> returns the length of the list of strings rather than the length of each individual string itself. We therefore have to use the <code>each</code> operator to achieve the desired result.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)count each list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 5 5 5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In the above example we make use of the mnemonic keyword <strong>each</strong> which can be used to apply a unary value without having to use parentheses or brackets. We could have achieved the same result by doing the following</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p><code>count</code> is a unary value</p></div></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)(count')list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 5 5 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)count'[list]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 5 5 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)count@'list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 5 5 5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>When examining the entire code snippet together, we can see that <code>(expression)?'1b</code> will search (and find) the index of the first occurrence of 1b in <strong>each</strong> element of the list denoted by expression. Sounds complicated? Allow me to provide a demonstration for better clarity:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)(000101010111b;0101010101b)?'1b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Our next task is to determine the actual result of the expression enclosed within parentheses.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">(1 reverse\" "&lt;&gt;x)?'1b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To do so, we solely focus on the expression within parentheses and ignore the second part. We can easily do this, we already know what it does</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1 reverse\" "&lt;&gt;x</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This expression can be further divided into three components. The keyword <code>reverse</code>, the component <code>" "&lt;&gt;x</code> and the <code>\</code>, another KDB/Q <a href="https://code.kx.com/q/basics/iteration/" target="_blank" rel="noopener noreferrer"><strong>iterator</strong></a>.</p>
<p>Let's examine each of these components separately, starting, in good KDB/Q fashion with the most right one:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)" "&lt;&gt;"Hello World"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">11111011111b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code we executed produces a boolean mask. It compares each element of the string to the empty string " " and yields "<strong>true</strong>" for elements that differ and "<strong>false</strong>" for those that are the same. Consequently, we can infer that the <code>&lt;&gt;</code> operator assesses inequality. If our aim is to do the opposite and examine equality, we can simply apply the equality operator, which is represented by <code>=</code>.</p>
<p>This conveys another, valuable lesson in KDB/Q, specifically: <em>"A fundamental feature of atomic functions is that their action extends automatically to the items in a list"</em> as explained in <a href="https://code.kx.com/q4m3/4_Operators/#403-extension-of-atomic-functions" target="_blank" rel="noopener noreferrer">Chapter 4: Operators</a> of "Q for Mortals".</p>
<p>Don't take my word for it, witness it for yourself:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)2 3 4+5 6 7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">7 9 11</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-danger admonition_xJq3 alert alert--danger"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>danger</div><div class="admonitionContent_BuS1"><p>Of course, if you want to combine two lists they must be of the same length, otherwise KDB/Q will throw an error</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)2 3 4+5 6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [0]  2 3 4+5 6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ^</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div>
<p>Prior to delving into the <code>1 function\input</code> pattern, let's explore the functionality of the keyword <code>reverse</code>.</p>
<p>As you probably can guess, the keyword <a href="https://code.kx.com/q/ref/reverse/" target="_blank" rel="noopener noreferrer"><code>reverse</code></a> reverses the order of items of a list or dictionary.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)reverse "Hello World"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"dlroW olleH"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)reverse 0 1 2 3 4 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 4 3 2 1 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The string <code>Hello World</code> becomes <code>dlroW olleH</code> and the list <code>0 1 2 3 4 5</code> becomes <code>5 4 3 2 1 0</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="exploring-the-versatility-of-scan-and-over">Exploring the versatility of Scan and Over<a href="https://defconq.github.io/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code#exploring-the-versatility-of-scan-and-over" class="hash-link" aria-label="Direct link to Exploring the versatility of Scan and Over" title="Direct link to Exploring the versatility of Scan and Over">​</a></h2>
<p>Now, it's time to address the most intricate part of this code snippet - the <code>1 function\input</code> pattern. The <code>\</code> operator is referred to as "Scan". To clarify the "Scan" iterator, we must first explain the "Over" iterator. <em>"The <a href="https://code.kx.com/q4m3/6_Functions/#676-over-for-accumulation" target="_blank" rel="noopener noreferrer">Over</a> iterator <code>/</code> is a higher-order function that provides the principal mechanism for recursion in q. In its simplest form it modifies a binary function to accumulate results over a list"</em>.</p>
<p><em>"The <a href="https://code.kx.com/q4m3/6_Functions/#678-scan" target="_blank" rel="noopener noreferrer">Scan</a> iterator <code>\</code> is a higher-order function that behaves just like <code>/</code> except that it returns all the intermediate accumulations instead of just the final one".</em></p>
<p>Now let's illustrate this with an example, a single line of code carries the weight of a thousand words.</p>
<p>First, let's look at <code>Over</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)(+/)1 2 3 4 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Can you perceive what "Over" does? It applies the binary function <code>+</code> to the list <code>1 2 3 4 5</code> and accumulates the results over the list, effectively returning the sum of all elements <code>1 2 3 4 5</code>.</p>
<p>Now, let's look at <code>Scan</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)(+\)1 2 3 4 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 3 6 10 15</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Much like Over, Scan also yields the cumulative sum of all elements in the list, however, with one key difference: Scan returns all intermediate steps, returning the rolling sum, rather than just the sum of all elements.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>There exist two keywords for the two scenarios described above: the keyword <strong>sum</strong> corresponds to <code>(+/)</code> and the keyword <strong>sums</strong> corresponds to <code>(+\)</code>.</p></div></div>
<p>Here's the evidence</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)sum 1 2 3 4 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">15</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)sums 1 2 3 4 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1 3 6 10 15</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Because of KDB/Q's concise nature, operators have numerous overloads. This principle extends to the iterators Over and Scan. Depending on the valence (the number of inputs to a function) associated with Over or Scan, these iterators exhibit varying behavior. A comprehensive list of their behaviors can be found <a href="https://code.kx.com/q/ref/iterators/" target="_blank" rel="noopener noreferrer">here</a></p>
<p>In the context of the <code>1 function\input</code> pattern, Scan functions similarly to what you might recognize as a "Do-Loop" in conventional programming languages. It's important to note that Scan will also produce the input as the initial result when applied to a unary function.</p>
<p>The following example should illustrate this behavior:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)5 enlist\1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">,1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">,,1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">,,,1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">,,,,1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">,,,,,1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)5(`f;)\1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(`f;1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(`f;(`f;1))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(`f;(`f;(`f;1)))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(`f;(`f;(`f;(`f;1))))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(`f;(`f;(`f;(`f;(`f;1)))))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In the initial example, you'll observe that the number 1 is enlisted five times, whereas in the second example, a nested list is generated with a depth of five levels. Both examples begin by displaying the input as the initial step.</p>
<p>Now, let's try to put things together and see what we get. Let's look at the following code snippet:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)1 reverse\"Hello"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Hello"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"olleH"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As we explained earlier, the Scan will display the input first, and then repeat the function, reverse in this case, n-times, where n is 1, resulting into a list of strings consisting of "Hello" the original string, and its reverse "olleH"</p>
<p>Let's attempt to apply this concept to the originally provided string:  "     Trim spaces     ", and apply the whole expression within parentheses</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)1 reverse\" "&lt;&gt;"   Trim the spaces.  "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">000111101110111111100b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">001111111011101111000b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Apologies if that was too swift. Let's break it down step by step.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)" "&lt;&gt;"   Trim the spaces.  "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">000111101110111111100b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The initial segment of the expression involves a character-by-character comparison between the given input string and an empty string. It yields a boolean mask with <code>0b</code> where the elements differ and <code>1b</code> where they match. This boolean mask is subsequently utilized as input for the <code>1 function\pattern.</code> In this context, Scan begins by presenting the input, followed by applying the <code>reverse</code> function precisely once.</p>
<p>Let's combine that with the initial expression we examined, <code>?'1b</code> find each 1b:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)(1 reverse\" "&lt;&gt;"   Trim the spaces.  ")?'1b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Upon inspecting the two boolean masks, it becomes evident that the initial <code>1b</code> occurrence appears at index 3 in the first mask and index 2 in the second mask, respectively.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">000111101110111111100b   // first occurrence of 1b is at index 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">001111111011101111000b   // first occurrence of 1b is at index 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The next part of the code is straightforward, we multiply 1 -1 with 3 2, REMEMBER: operators are atomic, meaning their functionality extends automatically to the items in a list. This yields the following result</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)1 -1*(1 reverse\" "&lt;&gt;"   Trim the spaces.  ")?'1b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">3 -2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, we encounter another lambda function combined with an iterator, but in this case, it's Over.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">x{y _ x}/1 -1*(1 reverse\" "&lt;&gt;x)?'1b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-kdbq-operators">Other KDB/Q operators<a href="https://defconq.github.io/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code#other-kdbq-operators" class="hash-link" aria-label="Direct link to Other KDB/Q operators" title="Direct link to Other KDB/Q operators">​</a></h2>
<p>Let's take a closer look at the functionality of the operator <code>_</code> inside the lambda does: <code>_</code> also called <a href="https://code.kx.com/q/ref/drop/" target="_blank" rel="noopener noreferrer">Drop</a>, drops items from a list, entries from a dictionary or columns from a table</p>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_BuS1"><p>Let's avoid any confusion between <strong><a href="https://code.kx.com/q/ref/drop/" target="_blank" rel="noopener noreferrer">drop</a></strong> and <strong><a href="https://code.kx.com/q/ref/cut/" target="_blank" rel="noopener noreferrer">cut</a></strong> even though they are the same operator but function differently.</p></div></div>
<p>From the KX refernce card:</p>
<p>Drop leading or trailing items</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">x _ y		_[x;y]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Where</p>
<ul>
<li>x is an int atom</li>
<li>y a list or dictionary</li>
</ul>
<p>returns y without the first or last x items.</p>
<p>Let's look at an example:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)5_0 1 2 3 4 5 6 7 8      /drop the first 5 items</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5 6 7 8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)-5_0 1 2 3 4 5 6 7 8     /drop the last 5 items</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0 1 2 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">q)1 _ `a`b`c!1 2 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b| 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c| 3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now, the remaining task is to integrate our understanding of "drop" with our knowledge of "Over." In this scenario, "Over" is applied to a binary function where "drop" takes two parameters, <code>x</code> and <code>y.</code> Upon closer examination of the code, it's apparent that within the lambda, we apply <code>y _ x</code> rather than <code>x _ y.</code> However, you might be wondering about the additional <code>x</code> preceding the lambda. This variation arises from the different notation forms offered in KDB/Q. Functions can be expressed in either prefix or infix notation.</p>
<p>Application of a binary function <code>f</code> on arguments <code>x</code> and <code>y</code> is written <code>f[x;y]</code> in <strong>prefix</strong> or <code>x f y</code> in <strong>infix</strong>. Note: <strong>infix</strong> notation only works for Q functions, while functions defined by yourself can only be used in <strong>prefix</strong> notation.</p>
<p>You can find the different applications of iterators and their valence <a href="https://code.kx.com/q/ref/accumulators/" target="_blank" rel="noopener noreferrer">here</a></p>
<p>Over applied to a binary function can be written either</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">x v2/y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">or</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">v2/[x;y]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>meaning that the <code>x</code> we observe in front of the lambda function <code>{y _ x}/</code> is the first parameter to the function.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-all-together">Putting it all together<a href="https://defconq.github.io/blog/How%20to%20Read,%20Understand%20and%20Learn%20KDB/Q%20code#putting-it-all-together" class="hash-link" aria-label="Direct link to Putting it all together" title="Direct link to Putting it all together">​</a></h2>
<p>If we take a closer look at the entire code, we'll notice that the input to the primary lambda function is the string we intend to trim. Additionally, the <code>y</code> parameter in the lambda corresponds to the two indexes, 3 and -2. If you recall from the initial part of the code, when we reverse the boolean mask, we obtain the first index of a "true" flag in the "original" boolean mask and the first index of a "true' flag in the "reversed" boolean mask. However, let's pause for a moment and consider this. The first index of a "true" flag in the "reversed" boolean mask is, in fact, the same as the first index of the "original" boolean mask when we count from the opposite end of the boolean mask (namely from the back/end).</p>
<p>Haven't we recently discovered that "drop" used in conjunction with a negative number will discard the last "n" elements? Indeed, we have! So, the remaining piece of the puzzle is to grasp how "Over" is applied to this function. Yet, we're already acquainted with this concept, as "Over" serves as a higher-order function that facilitates recursion in q. In its basic form, it adapts a binary function to accumulate results over a list.</p>
<p>Let's take a peek. To simplify matters, I'll display some of the intermediate outcomes rather than the entire expression
.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)"   Trim the spaces.  "{y _ x}/3 -2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Trim the spaces."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>A helpful technique for debugging and comprehending the actions of "Over" is to initially employ "Scan" and examine all the interim outcomes. This can provide valuable insights into the ultimate result.</p></div></div>
<p>Let's give this technique a try. You can observe how "Scan" begins by removing the first three (empty) characters from the string and subsequently discards the last two (empty) characters, resulting in the desired outcome: a string that has been trimmed of all leading and trailing spaces.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q)"   Trim the spaces.  "{y _ x}\3 -2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Trim the spaces.  "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Trim the spaces."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And there you have it! As a final step, let's consolidate all the code and execute it one more time, appreciating how elegantly everything aligns.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">q){x{y _ x}/1 -1*(1 reverse\" "&lt;&gt;x)?'1b}"   Trim the spaces.  "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"Trim the spaces."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As an exercise, you can delve into the second code example from the original <a href="https://community.kx.com/t5/Community-Blogs/Meet-the-Zen-monks/ba-p/11604" target="_blank" rel="noopener noreferrer">post</a> by Stephen Taylor and attempt to decipher it independently. If you encounter any queries or uncertainties along the way, don't hesitate to reach out for assistance.</p>
<p>Happy coding!</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>KDB Learning</category>
            <category>KDB Beginner</category>
            <category>Qbie</category>
        </item>
        <item>
            <title><![CDATA[Go-To KDB/Q Learning Resources]]></title>
            <link>https://DefconQ.github.io/blog/Go-To KDB/Q Learning Resources</link>
            <guid>https://DefconQ.github.io/blog/Go-To KDB/Q Learning Resources</guid>
            <pubDate>Wed, 30 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In this blog post, I'll be sharing my favourite KDB/Q learning resources. These are the go-to references that most experienced KDB/Q developers will have encountered, offering an excellent starting point for anyone looking to dive into the world of KDB/Q.]]></description>
            <content:encoded><![CDATA[<p>In this blog post, I'll be sharing my favourite KDB/Q learning resources. These are the go-to references that most experienced KDB/Q developers will have encountered, offering an excellent starting point for anyone looking to dive into the world of KDB/Q.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-tldr">The TL;DR<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#the-tldr" class="hash-link" aria-label="Direct link to The TL;DR" title="Direct link to The TL;DR">​</a></h2>
<p>If there's one thing that you need to read about KDB/Q then it's the below books:</p>
<ul>
<li><a href="https://amzn.to/3BVir4I" target="_blank" rel="noopener noreferrer">Q For Mortals</a> by Jeffry A. Borror. <a href="https://code.kx.com/q4m3/" target="_blank" rel="noopener noreferrer">Free online version</a></li>
<li><a href="https://amzn.to/3UjkAgZ" target="_blank" rel="noopener noreferrer">Q Tips</a> by Nick Psaris</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-detailed-version">The detailed version<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#the-detailed-version" class="hash-link" aria-label="Direct link to The detailed version" title="Direct link to The detailed version">​</a></h2>
<p>Mastering KDB/Q can be quite challenging due to its steep learning curve, especially if you're new to vector programming languages. The resources below are designed to provide a solid foundation and help you grasp the essential concepts of the Q programming language.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="books">Books<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#books" class="hash-link" aria-label="Direct link to Books" title="Direct link to Books">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="q-for-mortals-by-jeffry-a-borror">Q for Mortals by Jeffry A. Borror<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#q-for-mortals-by-jeffry-a-borror" class="hash-link" aria-label="Direct link to Q for Mortals by Jeffry A. Borror" title="Direct link to Q for Mortals by Jeffry A. Borror">​</a></h4>
<p>If you're new to the Q programming language and embarking on your learning journey, your first step should be to thoroughly read "Q for Mortals" by Jeffry A. Borror, cover to cover. This book serves as a comprehensive guide to essential q concepts and provides a strong foundation in understanding the KDB/Q database.</p>
<p>Beginning with the fundamental data structures of KDB/Q, including Atoms, Lists, and Dictionaries, the book progressively introduces you to Tables, which form a core data structure in KDB/Q. It delves into intricate details about the functioning of operators, guides you through crafting your custom functions, an integral aspect of functional programming (though KDB/Q isn't purely functional), and illustrates the creation of derived functions using iterators, another pivotal element of KDB/Q.</p>
<p>Chapter 9 introduces q-sql and its role in querying and manipulating tables, while Chapter 14 offers insights into the KDB/Q database, encompassing the process of persisting data to disk. These chapters collectively provide an excellent foundational understanding of KDB/Q, making "Q for Mortals" an indispensable resource for newcomers as well as experienced developers.</p>
<p>Written in a highly accessible manner, the book is accompanied by illustrative coding examples and snippets, allowing for easy comprehension and hands-on learning. After completing a full read-through, you can revisit specific chapters whenever needed to reinforce your understanding and delve deeper into the content for a more solid grasp.</p>
<p><img decoding="async" loading="lazy" alt="Q For Mortals" src="https://defconq.github.io/assets/images/qfm3-205f449d12b175d2b535a9c4b51a244d.jpg" width="387" height="500" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="q-tips-by-nick-psaris">Q-Tips by Nick Psaris<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#q-tips-by-nick-psaris" class="hash-link" aria-label="Direct link to Q-Tips by Nick Psaris" title="Direct link to Q-Tips by Nick Psaris">​</a></h4>
<p>After reading of "Q for Mortals," the next step is to explore my preferred KDB/Q book, "Q Tips," authored by Nick Psaris. While "Q Tips" does offer an initial section introducing fundamental concepts and KDB/Q data structures in its initial chapters, I personally found it more advantageous to have a foundational understanding from "Q for Mortals" before delving into "Q Tips."</p>
<p>Within the pages of this book, Nick draws upon his extensive experience and insights garnered from hands-on usage of KDB/Q within a dynamic real-world trading setting. He leads readers on a practical expedition, guiding them through the step-by-step construction of an intricate event processor in KDB/Q, right from the ground up. Nick seamlessly intertwines the fundamental elements of KDB/Q with the pertinent intricacies of market microstructure, resulting in the creation of a synthetic market data generator.</p>
<p>In this context, Nick not only illustrates how to efficiently capture, store, and analyze vast datasets, but also explains the Q programming paradigm and progressively develops the associated libraries. Throughout this journey, he weaves in well-observed and refined tips that he's gleaned from his own experience, ensuring readers gain comprehensive insights into the process.</p>
<p>As you can see from the image of my well-worn copy of Q-Tips below I have read the book several times from front to back and I wholeheartedly recommend Q-Tips to anyone who wants to bring their KDB/Q programming skills to the next level.</p>
<p><img decoding="async" loading="lazy" alt="Q Tips" src="https://defconq.github.io/assets/images/qtips-393a16878dcce7b3886db6ac17cd39ee.jpg" width="1386" height="1440" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="online-resources">Online resources<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#online-resources" class="hash-link" aria-label="Direct link to Online resources" title="Direct link to Online resources">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="kx-academy">KX Academy<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#kx-academy" class="hash-link" aria-label="Direct link to KX Academy" title="Direct link to KX Academy">​</a></h4>
<p>In October 2021 KX announced the launch of <a href="https://kx.com/academy/" target="_blank" rel="noopener noreferrer">KX Academy</a>, an online portal for on-demand training. The Academy offers a range of courses, split into two main difficulty levels, Fundamentals and Advanced. In addition to that, you can also find introductory sessions on KX Dashboard, KX Developer, KX Insight and the recently published Python Interface, PyKX. Demos and Tutorials will deepen your newly acquired knowledge with some practical, hands-on examples.</p>
<p>The Fundamental section combines a series of 15 short courses containing expanatory videos and Jupiter notebooks running in a freely accessible, live sandbox development environment with pre-loaded data sets, giving you seemingless access to the power of KDB/Q without having to install anything on your local machine. This is a perfect, practical addition to the book "Q for Mortals" mentioned earlier. I suggest you take the courses alongside when reading the book.</p>
<p>The Advanced section of KX Academy builds up on your previously acquired knowledge and explains more advanced concepts of KDB/Q in 15 Jupiter notebook courses. The modules cover topics such as Enumeration, Attributes, different ways of persisting tables, Joins, Iterators, Functional Selects and more. These topics are also covered in "Q for Mortals" but again, the Jupiter notebooks provide a great practical addition to the theory covered in great detail in the book.</p>
<p>After completing each section, you have the opportunity to validate your understanding by obtaining either of the two certificates, putting your knowledge to test.</p>
<p><img decoding="async" loading="lazy" alt="KX Academy" src="https://defconq.github.io/assets/images/KXAcademy-47795646b5b5edc4ed02255e05e822d5.png" width="1728" height="1020" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="data-intellects-blog">Data Intellect's Blog<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#data-intellects-blog" class="hash-link" aria-label="Direct link to Data Intellect's Blog" title="Direct link to Data Intellect's Blog">​</a></h4>
<p><a href="https://dataintellect.com/" target="_blank" rel="noopener noreferrer">Data Intellect</a>, formerly known as AquaQ, is a consultancy firm providing complete software solutions across a broad range of sectors, including but not limited to Financial Institutions such as Investment Banks or Hedge Funds, Fintec, Healthcare, Renewables or Telematics, just to name a few. One of their expertises is KDB/Q and you can find plenty of more advanced topics on their <a href="https://dataintellect.com/thoughts/?_sft_category=blog" target="_blank" rel="noopener noreferrer">blog</a>. While some of the content is for the more experienced developer, I really enjoy the in depth knowledge provided by them. In addition to the great details provided, Data Intellect also covers technologies or databases beyond KDB/Q and how to interact with them. The blog posts are skillfully crafted, easily understandable, and serve as an excellent platform to enhance your understanding beyond the foundational concepts acquired from other sources.</p>
<p>But that's not all. The best part is that Data Intellect provides a complete, production ready KDB/Q framework called <a href="https://dataintellect.com/thoughts/?_sft_category=blog" target="_blank" rel="noopener noreferrer">TorQ</a> for free as OPEN SOURCE. Yes, you read that right. Go and check it out for yourself, you can find TorQ <a href="https://github.com/DataIntellectTech/TorQ" target="_blank" rel="noopener noreferrer">here</a></p>
<p><img decoding="async" loading="lazy" alt="Data Intellect Blog" src="https://defconq.github.io/assets/images/DataIntellect-2857673dfe79a19daf9d5d9f57ccfa72.png" width="1350" height="1101" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="updated-habla-computing-blog-and-weekly-cue">[UPDATED] Habla Computing Blog and Weekly Cue<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#updated-habla-computing-blog-and-weekly-cue" class="hash-link" aria-label="Direct link to [UPDATED] Habla Computing Blog and Weekly Cue" title="Direct link to [UPDATED] Habla Computing Blog and Weekly Cue">​</a></h4>
<p>In recent months, we've witnessed the emergence of a promising newcomer in the KDB/Q landscape. I'm thrilled to witness the expansion of the KDB/Q community, with the contributions of my colleagues and friends at <a href="https://www.linkedin.com/company/habla-computing/" target="_blank" rel="noopener noreferrer">Habla Computing</a> in Madrid proving to be an invaluable asset for those venturing into the world of KDB/Q. <a href="https://www.linkedin.com/in/jserranohidalgo/" target="_blank" rel="noopener noreferrer">Juan</a> and <a href="https://www.linkedin.com/in/jes%C3%BAs-l%C3%B3pez-gonz%C3%A1lez-98237248/" target="_blank" rel="noopener noreferrer">Jesus</a>, both seasoned software developers with extensive backgrounds in Scala, have embarked on their journey with KDB/Q in the past few years, spearheading the efforts behind the <a href="https://www.habla.dev/blog/" target="_blank" rel="noopener noreferrer">Habla Computing blog</a> and the <a href="https://www.linkedin.com/pulse/weekly-cue-1-accumulating-sums-habla-computing-er8wf/?trackingId=RWhEsgG6cJLkslLOztv%2B4A%3D%3D" target="_blank" rel="noopener noreferrer">Weekly Cue</a> series on LinkedIn. The Weekly Cues, are bite-sized Linkedin articles explaining a KDB/Q topic in a easy and simple way, ideal to satisfy your hunger for KDB/Q knowledge. Following this, their <a href="https://www.linkedin.com/pulse/weekly-quest-1-sliding-sum-mastery-habla-computing-p3gre/?trackingId=XHUq3wpldVEtOZx5u62T3g%3D%3D" target="_blank" rel="noopener noreferrer">Weekly Quests</a> challenge you to apply your newfound knowledge by solving KDB/Q puzzles, aiming to craft the most concise and efficient q code—an opportunity to gauge your skills alongside fellow KDB/Q developers in the community. It's a delightful and interactive approach to learning KDB/Q concepts, offering glimpses into the expertise of seasoned developers. Make sure to check them out! Moreover, Habla Computing hosts monthly meetups in Madrid (with online streaming available), operating under the theme "Everything, Everywhere All with KDB/Q." I had the pleasure of presenting at their inaugural Meetup in April, and you can access the recording <a href="https://www.linkedin.com/pulse/defconq-everything-everywhere-all-kdbq-habla-alexander-unterrainer-yawqf/?trackingId=NE5DvIxmc1V6nzJMdfPsyQ%3D%3D" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's next<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#whats-next" class="hash-link" aria-label="Direct link to What's next" title="Direct link to What's next">​</a></h3>
<p>If you've made it this far and possibly explored some of the suggested resources, you likely posses a solid understanding of KDB/Q, its concepts, applications, strengths and architecture. At this point, you might ask yourself what's next on this beautiful journey of mastering KDB/Q, which like any other skill, holds boundless potential. Moving forward,practice is key. Mastery, after all, emerges from dedicated practice. Nevertheless, I'd like to offer you two more resources to help you on your path:</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="kx-whitepapers">KX Whitepapers<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#kx-whitepapers" class="hash-link" aria-label="Direct link to KX Whitepapers" title="Direct link to KX Whitepapers">​</a></h4>
<p>Whitepapers are short, focused  papers explaining a particular topic in KDB/Q. These topics cover a broad spectrum, ranging from direct association with the Q programming language, its application, and interfaces to strategies for managing large data and systems. Furthermore, there exists a segment dedicated to delving into Machine Learning within the realm of KDB/Q. Notably, the complexity of these whitepapers varies significantly, with the majority catering to more seasoned developers.</p>
<p>It's worth mentioning that while some of these whitepapers may lack in-depth explanations of the presented code or practical implementation guidance, this should not deter you from exploring them. Below, I've compiled a list of whitepapers that I've personally perused and find exceptionally well-written and valuable for expanding your knowledge. Do keep in mind that I haven't read all whitepapers available <a href="https://code.kx.com/q/wp/" target="_blank" rel="noopener noreferrer">here</a> and I can't comment on every single one of them</p>
<ul>
<li><a href="https://code.kx.com/q/wp/rt-tick/" target="_blank" rel="noopener noreferrer">Building real-time tick subscribers</a> by Nathan Perrem</li>
<li><a href="https://code.kx.com/q/wp/gateway-design/" target="_blank" rel="noopener noreferrer">Common design principles for kdb+ gateways</a> by Michael McClintock</li>
<li><a href="https://code.kx.com/q/wp/query-routing/" target="_blank" rel="noopener noreferrer">Query Routing: A kdb+ framework for a scalable, load balanced system</a> by Kevin Holsgrove</li>
<li><a href="https://code.kx.com/q/wp/iterators/" target="_blank" rel="noopener noreferrer">Iterators</a> by  Conor Slattery &amp; Stephen Taylor</li>
<li><a href="https://code.kx.com/q/wp/parse-trees/" target="_blank" rel="noopener noreferrer">Parse trees and functional forms</a> by Peter Storeng &amp; Stephen Taylor</li>
<li><a href="https://code.kx.com/q/wp/ipc/" target="_blank" rel="noopener noreferrer">Interprocess communications</a> by  Katrina McCormac</li>
</ul>
<p>I will cover some of them in future blog posts.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="kx-reference">KX Reference<a href="https://defconq.github.io/blog/Go-To%20KDB/Q%20Learning%20Resources#kx-reference" class="hash-link" aria-label="Direct link to KX Reference" title="Direct link to KX Reference">​</a></h4>
<p>The final resource I'd like to introduce is akin to a Swiss pocket knife in the realm of KDB/Q learning: the KX Reference card. This invaluable tool encompasses a comprehensive compilation of KDB/Q keywords, datatypes, namespaces, operators, command-line options, and much more – the list is extensive and beyond the scope of this discussion.</p>
<p>I find the Reference Card to be an indispensable asset, to the extent that I routinely keep it open in one of my web browser tabs. Whether you're seeking a swift verification of a keyword's functionality, exploring operators that align with your requirements, or revisiting subjects that may have become rusty over time, the Reference Card stands as your go-to resource.</p>
<p><img decoding="async" loading="lazy" alt="KX Reference" src="https://defconq.github.io/assets/images/reference-2818896eaae661a4dd12785b2f9056d4.png" width="1358" height="1104" class="img_ev3q"></p>
<p>And thus, we conclude our journey. Wishing you joyful learning and coding endeavors ahead</p>]]></content:encoded>
            <category>kdb/q</category>
            <category>QForMortals</category>
            <category>QTips</category>
            <category>KX</category>
            <category>Data Intellect</category>
            <category>KDB Learning</category>
            <category>KDB Beginner</category>
            <category>Qbie</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://DefconQ.github.io/blog/welcome</link>
            <guid>https://DefconQ.github.io/blog/welcome</guid>
            <pubDate>Mon, 28 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to DefconQ - Your Beginner's Guide to Navigating the KDB/Q Universe!]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="welcome-to-defconq---your-beginners-guide-to-navigating-the-kdbq-universe">Welcome to DefconQ - Your Beginner's Guide to Navigating the KDB/Q Universe!<a href="https://defconq.github.io/blog/welcome#welcome-to-defconq---your-beginners-guide-to-navigating-the-kdbq-universe" class="hash-link" aria-label="Direct link to Welcome to DefconQ - Your Beginner's Guide to Navigating the KDB/Q Universe!" title="Direct link to Welcome to DefconQ - Your Beginner's Guide to Navigating the KDB/Q Universe!">​</a></h2>
<p>Hey there, tech enthusiasts and aspiring KDB/Q developers! Are you ready to embark on an exciting journey into the world of q programming, tice architecture, and design? Look no further, because you've just stumbled upon your ultimate resource for demystifying the KDB/Q landscape.</p>
<p>We get it - starting out in the tech world can be a bit overwhelming. The jargon, the paradigms, the concepts - they can feel like a maze that's hard to navigate. But fear not! Our mission is to guide you through this maze, one step at a time, and make these seemingly complex topics as easy to grasp as building blocks.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-are-we-here">Why Are We Here?<a href="https://defconq.github.io/blog/welcome#why-are-we-here" class="hash-link" aria-label="Direct link to Why Are We Here?" title="Direct link to Why Are We Here?">​</a></h3>
<p>Being a self-starter myself - our blog is born out of the desire to make KDB/Q accessible to everyone, especially beginners. We've been in your shoes, and we understand the struggles of wrapping your head around the q programming language, tick architecture, and design principles. That's why we're here to break down those barriers, sprinkle in some practical tips, and empower you to dive into the KDB/Q world with confidence.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="what-can-you-expect">What Can You Expect?<a href="https://defconq.github.io/blog/welcome#what-can-you-expect" class="hash-link" aria-label="Direct link to What Can You Expect?" title="Direct link to What Can You Expect?">​</a></h4>
<p>Whether you're a complete novice or someone looking to brush up on their skills, our blog has something for you. We'll start with the basics, explaining q programming paradigms in a way that won't make your head spin. We'll delve into the intricacies of tick architecture and design, so you can build solid foundations for your projects.</p>
<p>But that's not all! We're curating a collection of helpful resources that'll serve as your tech toolbox. From must-read articles to insightful videos, we're cherry-picking the best content to aid your learning journey. And yes, we're rolling up our sleeves to create step-by-step tutorials that walk you through real-world scenarios, so you can see these concepts in action.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="join-us-on-this-adventure">Join Us On This Adventure<a href="https://defconq.github.io/blog/welcome#join-us-on-this-adventure" class="hash-link" aria-label="Direct link to Join Us On This Adventure" title="Direct link to Join Us On This Adventure">​</a></h3>
<p>Buckle up, because this is a journey you won't want to miss. Whether you're aspiring to be a programmer, an architect, or just someone intrigued by the tech magic happening behind the scenes, we're here to welcome you with open arms. Let's turn the overwhelming into the understandable, the complex into the clear, and the daunting into the doable.</p>
<p>So, stick around, bookmark us, and get ready to embark on a tech adventure that'll leave you with newfound knowledge, skills, and an unquenchable thirst for all things tech. Welcome to DefconQ - where we're turning tech novices into tech savvy superheroes, one blog post at a time!</p>
<p><img decoding="async" loading="lazy" alt="Hello World" src="https://defconq.github.io/assets/images/HelloWorld-7a27dc6d1865c697ecd52b33398d80e0.png" width="1380" height="784" class="img_ev3q"></p>]]></content:encoded>
            <category>kdb/q</category>
            <category>welcome</category>
            <category>Hello World</category>
        </item>
    </channel>
</rss>